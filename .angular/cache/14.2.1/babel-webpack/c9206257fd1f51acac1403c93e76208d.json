{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { TemplateRef, Injector, Injectable, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/overlay';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { TemplatePortal, ComponentPortal, PortalModule } from '@angular/cdk/portal';\nimport { XInvertKeyValues } from '@ng-nest/ui/core';\n/**\r\n * Portal\r\n * @selector x-portal\r\n * @decorator component\r\n */\n\nconst PortalPrefix = 'x-portal';\nconst PortalResizablePrefix = 'x-portal-resizable';\nconst XPortalPlacement = {\n  bottom: {\n    originX: 'center',\n    originY: 'bottom',\n    overlayX: 'center',\n    overlayY: 'top'\n  },\n  left: {\n    originX: 'start',\n    originY: 'center',\n    overlayX: 'end',\n    overlayY: 'center'\n  },\n  right: {\n    originX: 'end',\n    originY: 'center',\n    overlayX: 'start',\n    overlayY: 'center'\n  },\n  top: {\n    originX: 'center',\n    originY: 'top',\n    overlayX: 'center',\n    overlayY: 'bottom'\n  },\n  'bottom-end': {\n    originX: 'end',\n    originY: 'bottom',\n    overlayX: 'end',\n    overlayY: 'top'\n  },\n  'bottom-start': {\n    originX: 'start',\n    originY: 'bottom',\n    overlayX: 'start',\n    overlayY: 'top'\n  },\n  'left-end': {\n    originX: 'start',\n    originY: 'bottom',\n    overlayX: 'end',\n    overlayY: 'bottom'\n  },\n  'left-start': {\n    originX: 'start',\n    originY: 'top',\n    overlayX: 'end',\n    overlayY: 'top'\n  },\n  'right-end': {\n    originX: 'end',\n    originY: 'bottom',\n    overlayX: 'start',\n    overlayY: 'bottom'\n  },\n  'right-start': {\n    originX: 'end',\n    originY: 'top',\n    overlayX: 'start',\n    overlayY: 'top'\n  },\n  'top-end': {\n    originX: 'end',\n    originY: 'top',\n    overlayX: 'end',\n    overlayY: 'bottom'\n  },\n  'top-start': {\n    originX: 'start',\n    originY: 'top',\n    overlayX: 'start',\n    overlayY: 'bottom'\n  }\n};\nconst XPortalConnectedPosition = XInvertKeyValues(XPortalPlacement);\n/**\r\n * 动态创建视图服务\r\n */\n\nclass XPortalService {\n  constructor(overlay, injector, rendererFactory) {\n    this.overlay = overlay;\n    this.injector = injector;\n    this.rendererFactory = rendererFactory;\n    this.renderer = this.rendererFactory.createRenderer(null, null);\n  }\n\n  attach(option) {\n    let portal = {};\n    if (typeof option.content === 'undefined') return portal;\n    portal.overlayRef = this.createOverlayRef(option);\n\n    if (option.content instanceof TemplateRef && option.viewContainerRef) {\n      portal.templatePortal = new TemplatePortal(option.content, option.viewContainerRef, option.context);\n      portal.embeddedViewRef = portal.overlayRef.attach(portal.templatePortal);\n    } else {\n      portal.componentPortal = new ComponentPortal(option.content, option.viewContainerRef, option.injector, option.componentFactoryResolver);\n      portal.componentRef = portal.overlayRef.attach(portal.componentPortal);\n    }\n\n    return portal;\n  }\n\n  createInjector(providers, viewContainerRef) {\n    const injector = viewContainerRef && viewContainerRef.injector;\n    return Injector.create({\n      parent: injector || this.injector,\n      providers\n    });\n  }\n\n  setPlacement(param) {\n    if (!param) {\n      return this.overlay.position().global().centerHorizontally().centerVertically();\n    } else {\n      return this.overlay.position().flexibleConnectedTo(param.elementRef) // .withLockedPosition(true)\n      .withFlexibleDimensions(false).withPush(false).withPositions(this.setConnectedPosition(...param.placement)).withTransformOriginOn(param.transformOriginOn);\n    }\n  }\n\n  setPosition(position, width, height) {\n    let result = this.overlay.position().global().width(width).height(height);\n\n    switch (position) {\n      case 'left':\n        return result.left();\n\n      case 'right':\n        return result.right();\n\n      case 'top':\n        return result.top();\n\n      case 'bottom':\n      default:\n        return result.bottom();\n    }\n  }\n\n  setPlace(place, ...offset) {\n    let result = this.overlay.position().global();\n    let [top, right, bottom, left] = this.getOffset(offset);\n\n    switch (place) {\n      case 'top-start':\n        return result.top(top).left(left);\n\n      case 'top':\n        return result.centerHorizontally().top(top);\n\n      case 'top-end':\n        return result.top(top).right(right);\n\n      case 'left':\n        return result.centerVertically().left(left);\n\n      case 'center':\n        return result.centerVertically().centerHorizontally();\n\n      case 'right':\n        return result.centerVertically().right(right);\n\n      case 'bottom-start':\n        return result.bottom(bottom).left(left);\n\n      case 'bottom':\n        return result.centerHorizontally().bottom(bottom);\n\n      case 'bottom-end':\n        return result.bottom(bottom).right(right);\n\n      default:\n        return result.centerVertically().centerHorizontally();\n    }\n  }\n\n  setResizable(ele, place) {\n    const {\n      clientWidth,\n      clientHeight\n    } = ele;\n    const computedStyle = window.getComputedStyle(ele);\n    const marginRight = parseFloat(computedStyle.marginRight);\n    const marginBottom = parseFloat(computedStyle.marginBottom);\n    let marginLeft = null;\n    let marginTop = null;\n\n    switch (place) {\n      case 'top-start':\n        break;\n\n      case 'top':\n        marginLeft = `calc(50vw - ${clientWidth / 2}px)`;\n        break;\n\n      case 'top-end':\n        marginLeft = `calc(100vw - ${clientWidth + marginRight}px)`;\n        break;\n\n      case 'left':\n        marginTop = `calc(50vh - ${clientHeight / 2}px)`;\n        break;\n\n      case 'center':\n        marginLeft = `calc(50vw - ${clientWidth / 2}px)`;\n        marginTop = `calc(50vh - ${clientHeight / 2}px)`;\n        break;\n\n      case 'right':\n        marginLeft = `calc(100vw - ${clientWidth + marginRight}px)`;\n        marginTop = `calc(50vh - ${clientHeight / 2}px)`;\n        break;\n\n      case 'bottom-start':\n        marginTop = `calc(100vh - ${clientHeight + marginBottom}px)`;\n        break;\n\n      case 'bottom':\n        marginLeft = `calc(50vw - ${clientWidth / 2}px)`;\n        marginTop = `calc(100vh - ${clientHeight + marginBottom}px)`;\n        break;\n\n      case 'bottom-end':\n        marginLeft = `calc(100vw - ${clientWidth + marginRight}px)`;\n        marginTop = `calc(100vh - ${clientHeight + marginBottom}px)`;\n        break;\n\n      default:\n        marginLeft = `calc(50vw - ${clientWidth / 2}px)`;\n        marginTop = `calc(100vh - ${clientHeight / 2}px)`;\n        break;\n    }\n\n    marginLeft && this.renderer.setStyle(ele, 'margin-left', marginLeft);\n    marginTop && this.renderer.setStyle(ele, 'margin-top', marginTop);\n    return {\n      marginLeft: marginLeft || computedStyle.marginLeft,\n      marginTop: marginTop || computedStyle.marginTop,\n      marginBottom: computedStyle.marginBottom,\n      marginRight: computedStyle.marginRight\n    };\n  }\n\n  setContainerStyle(place, ...offset) {\n    let [top, right, bottom, left] = this.getOffset(offset);\n\n    switch (place) {\n      case 'top-start':\n        return {\n          top,\n          left\n        };\n\n      case 'top':\n        return {\n          top\n        };\n\n      case 'top-end':\n        return {\n          top,\n          right\n        };\n\n      case 'left':\n        return {\n          left\n        };\n\n      case 'center':\n        return {};\n\n      case 'right':\n        return {\n          right\n        };\n\n      case 'bottom-start':\n        return {\n          bottom,\n          left\n        };\n\n      case 'bottom':\n        return {\n          bottom\n        };\n\n      case 'bottom-end':\n        return {\n          bottom,\n          right\n        };\n    }\n\n    return {};\n  }\n\n  getOffset(offset) {\n    if (offset.length === 0) offset = Array.from({\n      length: 4\n    }).map(() => `0`);else if (offset.length < 4) {\n      Array.from({\n        length: 4 - offset.length\n      }).map(() => offset = [...offset, offset[offset.length - 1]]);\n    }\n    return offset;\n  }\n\n  createOverlayRef(option) {\n    return this.overlay.create(option.overlayConfig);\n  }\n\n  setConnectedPosition(...placement) {\n    let result = [];\n    placement.forEach(place => result.push(XPortalPlacement[place]));\n    return result;\n  }\n\n}\n/** @nocollapse */\n\n\nXPortalService.ɵfac = function XPortalService_Factory(t) {\n  return new (t || XPortalService)(i0.ɵɵinject(i1.Overlay), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i0.RendererFactory2));\n};\n/** @nocollapse */\n\n\nXPortalService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: XPortalService,\n  factory: XPortalService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XPortalService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.Overlay\n    }, {\n      type: i0.Injector\n    }, {\n      type: i0.RendererFactory2\n    }];\n  }, null);\n})();\n\nclass XPortalModule {}\n/** @nocollapse */\n\n\nXPortalModule.ɵfac = function XPortalModule_Factory(t) {\n  return new (t || XPortalModule)();\n};\n/** @nocollapse */\n\n\nXPortalModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: XPortalModule\n});\n/** @nocollapse */\n\nXPortalModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [XPortalService],\n  imports: [OverlayModule, PortalModule, OverlayModule, PortalModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XPortalModule, [{\n    type: NgModule,\n    args: [{\n      imports: [OverlayModule, PortalModule],\n      exports: [OverlayModule, PortalModule],\n      providers: [XPortalService]\n    }]\n  }], null, null);\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { PortalPrefix, PortalResizablePrefix, XPortalConnectedPosition, XPortalModule, XPortalPlacement, XPortalService };","map":{"version":3,"names":["i0","TemplateRef","Injector","Injectable","NgModule","i1","OverlayModule","TemplatePortal","ComponentPortal","PortalModule","XInvertKeyValues","PortalPrefix","PortalResizablePrefix","XPortalPlacement","bottom","originX","originY","overlayX","overlayY","left","right","top","XPortalConnectedPosition","XPortalService","constructor","overlay","injector","rendererFactory","renderer","createRenderer","attach","option","portal","content","overlayRef","createOverlayRef","viewContainerRef","templatePortal","context","embeddedViewRef","componentPortal","componentFactoryResolver","componentRef","createInjector","providers","create","parent","setPlacement","param","position","global","centerHorizontally","centerVertically","flexibleConnectedTo","elementRef","withFlexibleDimensions","withPush","withPositions","setConnectedPosition","placement","withTransformOriginOn","transformOriginOn","setPosition","width","height","result","setPlace","place","offset","getOffset","setResizable","ele","clientWidth","clientHeight","computedStyle","window","getComputedStyle","marginRight","parseFloat","marginBottom","marginLeft","marginTop","setStyle","setContainerStyle","length","Array","from","map","overlayConfig","forEach","push","ɵfac","Overlay","RendererFactory2","ɵprov","type","XPortalModule","ɵmod","ɵinj","args","imports","exports"],"sources":["/Users/lzl/my-angular-app/node_modules/@ng-nest/ui/fesm2020/ng-nest-ui-portal.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { TemplateRef, Injector, Injectable, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/overlay';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { TemplatePortal, ComponentPortal, PortalModule } from '@angular/cdk/portal';\nimport { XInvertKeyValues } from '@ng-nest/ui/core';\n\n/**\r\n * Portal\r\n * @selector x-portal\r\n * @decorator component\r\n */\r\nconst PortalPrefix = 'x-portal';\r\nconst PortalResizablePrefix = 'x-portal-resizable';\r\nconst XPortalPlacement = {\r\n    bottom: { originX: 'center', originY: 'bottom', overlayX: 'center', overlayY: 'top' },\r\n    left: { originX: 'start', originY: 'center', overlayX: 'end', overlayY: 'center' },\r\n    right: { originX: 'end', originY: 'center', overlayX: 'start', overlayY: 'center' },\r\n    top: { originX: 'center', originY: 'top', overlayX: 'center', overlayY: 'bottom' },\r\n    'bottom-end': { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },\r\n    'bottom-start': { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\r\n    'left-end': { originX: 'start', originY: 'bottom', overlayX: 'end', overlayY: 'bottom' },\r\n    'left-start': { originX: 'start', originY: 'top', overlayX: 'end', overlayY: 'top' },\r\n    'right-end': { originX: 'end', originY: 'bottom', overlayX: 'start', overlayY: 'bottom' },\r\n    'right-start': { originX: 'end', originY: 'top', overlayX: 'start', overlayY: 'top' },\r\n    'top-end': { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom' },\r\n    'top-start': { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom' }\r\n};\r\nconst XPortalConnectedPosition = XInvertKeyValues(XPortalPlacement);\n\n/**\r\n * 动态创建视图服务\r\n */\r\nclass XPortalService {\r\n    constructor(overlay, injector, rendererFactory) {\r\n        this.overlay = overlay;\r\n        this.injector = injector;\r\n        this.rendererFactory = rendererFactory;\r\n        this.renderer = this.rendererFactory.createRenderer(null, null);\r\n    }\r\n    attach(option) {\r\n        let portal = {};\r\n        if (typeof option.content === 'undefined')\r\n            return portal;\r\n        portal.overlayRef = this.createOverlayRef(option);\r\n        if (option.content instanceof TemplateRef && option.viewContainerRef) {\r\n            portal.templatePortal = new TemplatePortal(option.content, option.viewContainerRef, option.context);\r\n            portal.embeddedViewRef = portal.overlayRef.attach(portal.templatePortal);\r\n        }\r\n        else {\r\n            portal.componentPortal = new ComponentPortal(option.content, option.viewContainerRef, option.injector, option.componentFactoryResolver);\r\n            portal.componentRef = portal.overlayRef.attach(portal.componentPortal);\r\n        }\r\n        return portal;\r\n    }\r\n    createInjector(providers, viewContainerRef) {\r\n        const injector = viewContainerRef && viewContainerRef.injector;\r\n        return Injector.create({ parent: injector || this.injector, providers });\r\n    }\r\n    setPlacement(param) {\r\n        if (!param) {\r\n            return this.overlay.position().global().centerHorizontally().centerVertically();\r\n        }\r\n        else {\r\n            return (this.overlay\r\n                .position()\r\n                .flexibleConnectedTo(param.elementRef)\r\n                // .withLockedPosition(true)\r\n                .withFlexibleDimensions(false)\r\n                .withPush(false)\r\n                .withPositions(this.setConnectedPosition(...param.placement))\r\n                .withTransformOriginOn(param.transformOriginOn));\r\n        }\r\n    }\r\n    setPosition(position, width, height) {\r\n        let result = this.overlay.position().global().width(width).height(height);\r\n        switch (position) {\r\n            case 'left':\r\n                return result.left();\r\n            case 'right':\r\n                return result.right();\r\n            case 'top':\r\n                return result.top();\r\n            case 'bottom':\r\n            default:\r\n                return result.bottom();\r\n        }\r\n    }\r\n    setPlace(place, ...offset) {\r\n        let result = this.overlay.position().global();\r\n        let [top, right, bottom, left] = this.getOffset(offset);\r\n        switch (place) {\r\n            case 'top-start':\r\n                return result.top(top).left(left);\r\n            case 'top':\r\n                return result.centerHorizontally().top(top);\r\n            case 'top-end':\r\n                return result.top(top).right(right);\r\n            case 'left':\r\n                return result.centerVertically().left(left);\r\n            case 'center':\r\n                return result.centerVertically().centerHorizontally();\r\n            case 'right':\r\n                return result.centerVertically().right(right);\r\n            case 'bottom-start':\r\n                return result.bottom(bottom).left(left);\r\n            case 'bottom':\r\n                return result.centerHorizontally().bottom(bottom);\r\n            case 'bottom-end':\r\n                return result.bottom(bottom).right(right);\r\n            default:\r\n                return result.centerVertically().centerHorizontally();\r\n        }\r\n    }\r\n    setResizable(ele, place) {\r\n        const { clientWidth, clientHeight } = ele;\r\n        const computedStyle = window.getComputedStyle(ele);\r\n        const marginRight = parseFloat(computedStyle.marginRight);\r\n        const marginBottom = parseFloat(computedStyle.marginBottom);\r\n        let marginLeft = null;\r\n        let marginTop = null;\r\n        switch (place) {\r\n            case 'top-start':\r\n                break;\r\n            case 'top':\r\n                marginLeft = `calc(50vw - ${clientWidth / 2}px)`;\r\n                break;\r\n            case 'top-end':\r\n                marginLeft = `calc(100vw - ${clientWidth + marginRight}px)`;\r\n                break;\r\n            case 'left':\r\n                marginTop = `calc(50vh - ${clientHeight / 2}px)`;\r\n                break;\r\n            case 'center':\r\n                marginLeft = `calc(50vw - ${clientWidth / 2}px)`;\r\n                marginTop = `calc(50vh - ${clientHeight / 2}px)`;\r\n                break;\r\n            case 'right':\r\n                marginLeft = `calc(100vw - ${clientWidth + marginRight}px)`;\r\n                marginTop = `calc(50vh - ${clientHeight / 2}px)`;\r\n                break;\r\n            case 'bottom-start':\r\n                marginTop = `calc(100vh - ${clientHeight + marginBottom}px)`;\r\n                break;\r\n            case 'bottom':\r\n                marginLeft = `calc(50vw - ${clientWidth / 2}px)`;\r\n                marginTop = `calc(100vh - ${clientHeight + marginBottom}px)`;\r\n                break;\r\n            case 'bottom-end':\r\n                marginLeft = `calc(100vw - ${clientWidth + marginRight}px)`;\r\n                marginTop = `calc(100vh - ${clientHeight + marginBottom}px)`;\r\n                break;\r\n            default:\r\n                marginLeft = `calc(50vw - ${clientWidth / 2}px)`;\r\n                marginTop = `calc(100vh - ${clientHeight / 2}px)`;\r\n                break;\r\n        }\r\n        marginLeft && this.renderer.setStyle(ele, 'margin-left', marginLeft);\r\n        marginTop && this.renderer.setStyle(ele, 'margin-top', marginTop);\r\n        return {\r\n            marginLeft: marginLeft || computedStyle.marginLeft,\r\n            marginTop: marginTop || computedStyle.marginTop,\r\n            marginBottom: computedStyle.marginBottom,\r\n            marginRight: computedStyle.marginRight\r\n        };\r\n    }\r\n    setContainerStyle(place, ...offset) {\r\n        let [top, right, bottom, left] = this.getOffset(offset);\r\n        switch (place) {\r\n            case 'top-start':\r\n                return { top, left };\r\n            case 'top':\r\n                return { top };\r\n            case 'top-end':\r\n                return { top, right };\r\n            case 'left':\r\n                return { left };\r\n            case 'center':\r\n                return {};\r\n            case 'right':\r\n                return { right };\r\n            case 'bottom-start':\r\n                return { bottom, left };\r\n            case 'bottom':\r\n                return { bottom };\r\n            case 'bottom-end':\r\n                return { bottom, right };\r\n        }\r\n        return {};\r\n    }\r\n    getOffset(offset) {\r\n        if (offset.length === 0)\r\n            offset = Array.from({ length: 4 }).map(() => `0`);\r\n        else if (offset.length < 4) {\r\n            Array.from({ length: 4 - offset.length }).map(() => (offset = [...offset, offset[offset.length - 1]]));\r\n        }\r\n        return offset;\r\n    }\r\n    createOverlayRef(option) {\r\n        return this.overlay.create(option.overlayConfig);\r\n    }\r\n    setConnectedPosition(...placement) {\r\n        let result = [];\r\n        placement.forEach((place) => result.push(XPortalPlacement[place]));\r\n        return result;\r\n    }\r\n}\r\n/** @nocollapse */ XPortalService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XPortalService, deps: [{ token: i1.Overlay }, { token: i0.Injector }, { token: i0.RendererFactory2 }], target: i0.ɵɵFactoryTarget.Injectable });\r\n/** @nocollapse */ XPortalService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XPortalService });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XPortalService, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: i1.Overlay }, { type: i0.Injector }, { type: i0.RendererFactory2 }]; } });\n\nclass XPortalModule {\r\n}\r\n/** @nocollapse */ XPortalModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XPortalModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\n/** @nocollapse */ XPortalModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.2\", ngImport: i0, type: XPortalModule, imports: [OverlayModule, PortalModule], exports: [OverlayModule, PortalModule] });\r\n/** @nocollapse */ XPortalModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XPortalModule, providers: [XPortalService], imports: [OverlayModule, PortalModule, OverlayModule, PortalModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XPortalModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [OverlayModule, PortalModule],\r\n                    exports: [OverlayModule, PortalModule],\r\n                    providers: [XPortalService]\r\n                }]\r\n        }] });\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { PortalPrefix, PortalResizablePrefix, XPortalConnectedPosition, XPortalModule, XPortalPlacement, XPortalService };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}