{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, Input, SecurityContext, Injectable, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, HostBinding, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { __decorate } from 'tslib';\nimport * as i2$1 from '@ng-nest/ui/core';\nimport { XProperty, XWithConfig, XInputNumber, XInputBoolean, XHasIn, XIsChange, XIsEmpty, warnIconTypeNotFound, warnSVGTagNotFound } from '@ng-nest/ui/core';\nimport { Observable } from 'rxjs';\nimport * as i1 from '@angular/platform-browser';\nimport * as i2 from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\n/**\r\n * Icon\r\n * @selector x-icon\r\n * @decorator component\r\n */\n\nconst XIconPrefix = 'x-icon';\nconst X_CONFIG_NAME = 'icon';\nconst XIconHref = 'https://ngnest.com/static/icons/';\n/**\r\n * Icon Property\r\n */\n\nclass XIconProperty extends XProperty {}\n/** @nocollapse */\n\n\nXIconProperty.ɵfac = /* @__PURE__ */function () {\n  let ɵXIconProperty_BaseFactory;\n  return function XIconProperty_Factory(t) {\n    return (ɵXIconProperty_BaseFactory || (ɵXIconProperty_BaseFactory = i0.ɵɵgetInheritedFactory(XIconProperty)))(t || XIconProperty);\n  };\n}();\n/** @nocollapse */\n\n\nXIconProperty.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XIconProperty,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    href: \"href\",\n    type: \"type\",\n    color: \"color\",\n    rotate: \"rotate\",\n    spin: \"spin\",\n    to: \"to\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function XIconProperty_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n__decorate([XWithConfig(X_CONFIG_NAME, XIconHref)], XIconProperty.prototype, \"href\", void 0);\n\n__decorate([XInputNumber()], XIconProperty.prototype, \"rotate\", void 0);\n\n__decorate([XInputBoolean()], XIconProperty.prototype, \"spin\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XIconProperty, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], null, {\n    href: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    rotate: [{\n      type: Input\n    }],\n    spin: [{\n      type: Input\n    }],\n    to: [{\n      type: Input\n    }]\n  });\n})(); // @dynamic\n\n\nclass XIconService {\n  constructor(sanitizer, http) {\n    this.sanitizer = sanitizer;\n    this.http = http;\n    this.rootUrl = `https://ngnest.com/static/icons/`;\n    this.caches = {};\n    this.queue = [];\n    this.activeTaskXm = 0;\n    this.isRunningTask = false;\n    this.limit = 10;\n  }\n\n  addTask(task) {\n    this.queue.push(task);\n    this.runTask();\n  }\n\n  execute(task) {\n    this.isRunningTask = true;\n\n    if (XHasIn(this.caches, task.name)) {\n      task.callback(this.caches[task.name]);\n      this.activeTaskXm--;\n      this.isRunningTask = false;\n      this.runTask();\n      return;\n    }\n\n    return task.observable.subscribe(result => {\n      this.caches[task.name] = result;\n      task.callback(result);\n      return result;\n    }, error => {\n      console.error(error);\n      this.activeTaskXm--;\n      this.isRunningTask = false;\n      this.runTask();\n    }, () => {\n      this.activeTaskXm--;\n      this.isRunningTask = false;\n      this.runTask();\n    });\n  }\n\n  runTask() {\n    if (!this.isRunningTask && this.activeTaskXm < this.limit && this.queue.length > 0) {\n      const task = this.queue.shift();\n      this.activeTaskXm++;\n      this.execute(task);\n    }\n  }\n\n  getSvgs(...icons) {\n    return Observable.create(subscriber => {\n      let result = [];\n      icons.forEach((icon, index) => this.addTask({\n        name: icon,\n        observable: this.getSvgElement(icon),\n        callback: svg => {\n          result.push(svg);\n\n          if (index === icons.length - 1) {\n            subscriber.next(result);\n            subscriber.complete();\n          }\n        }\n      }));\n    });\n  }\n\n  getSvgElement(icon) {\n    const url = `${this.rootUrl}${icon}.svg`;\n    const safeUrl = this.sanitizer.sanitize(SecurityContext.URL, url);\n    return this.http.get(safeUrl, {\n      responseType: 'text'\n    });\n  }\n\n}\n/** @nocollapse */\n\n\nXIconService.ɵfac = function XIconService_Factory(t) {\n  return new (t || XIconService)(i0.ɵɵinject(i1.DomSanitizer), i0.ɵɵinject(i2.HttpClient));\n};\n/** @nocollapse */\n\n\nXIconService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: XIconService,\n  factory: XIconService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XIconService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.DomSanitizer\n    }, {\n      type: i2.HttpClient\n    }];\n  }, null);\n})(); // 来源路径对应\n\n\nconst XSouceUrl = {\n  adf: `ant-design/fill/`,\n  ado: `ant-design/outline/`,\n  adt: `ant-design/twotone/`,\n  eaf: `eva/fill/`,\n  eao: `eva/outline/`,\n  fto: `feather/`,\n  fab: `font-awesome/brands/`,\n  far: `font-awesome/regular/`,\n  fas: `font-awesome/solid/`,\n  mdf: `material-design/fill/`,\n  mdo: `material-design/outline/`\n};\nconst XViewBox = [// { souces: [\"adf\", \"ado\", \"adt\"], value: \"0 0 1024 1024\" },\n  // { souces: [\"eaf\", \"eao\"], value: \"0 0 24 24\" },\n  // { souces: [\"fto\"], value: \"0 0 24 24\" }\n];\n\nclass XIconComponent extends XIconProperty {\n  constructor(elementRef, renderer, iconService, cdr, document, configService) {\n    super();\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.iconService = iconService;\n    this.cdr = cdr;\n    this.document = document;\n    this.configService = configService;\n    this._loaded = false;\n    this.iconService.rootUrl = this.href;\n    this.renderer.addClass(this.elementRef.nativeElement, XIconPrefix);\n  }\n\n  get getSpin() {\n    return this.spin;\n  }\n\n  ngOnInit() {}\n\n  ngOnChanges(changes) {\n    const {\n      type,\n      spin\n    } = changes;\n\n    if (XIsChange(type)) {\n      this.setSvgElement();\n      this.renderer.removeClass(this.elementRef.nativeElement, type.previousValue);\n      this.renderer.addClass(this.elementRef.nativeElement, `${this.type}`);\n      this.cdr.detectChanges();\n    }\n\n    if (XIsChange(spin)) {\n      this.cdr.detectChanges();\n    }\n  }\n\n  getSvg() {\n    if (this._loaded) return;\n    let height = this.document.documentElement.clientHeight;\n    let width = this.document.documentElement.clientWidth;\n    let box = this.elementRef.nativeElement.getBoundingClientRect();\n\n    if (box.top <= height && box.left <= width) {\n      this.setSvgElement();\n      this.renderer.addClass(this.elementRef.nativeElement, `${this.type}`);\n      this._loaded = true;\n    }\n  }\n\n  setSvgElement() {\n    const typeIcon = this.setSourceUrl(this.type);\n    const toIcon = this.setSourceUrl(this.to);\n    let icons = [typeIcon];\n    if (XIsEmpty(typeIcon)) return;\n\n    if (!XIsEmpty(toIcon)) {\n      icons = [...icons, toIcon];\n    }\n\n    this.iconService.getSvgs(...icons).subscribe(x => this.setSvgs(x));\n  }\n\n  setSvgs(svgs) {\n    if (svgs?.length > 0) {\n      let firstChild = this.elementRef.nativeElement.firstChild;\n\n      if (firstChild) {\n        this.renderer.removeChild(this.elementRef.nativeElement, firstChild);\n      }\n\n      this._svgElement = this.buildSvg(svgs.shift()); // this.setAnimates(svgs);\n\n      this.setAttributes(this._svgElement);\n      this.renderer.appendChild(this.elementRef.nativeElement, this._svgElement);\n      this.cdr.markForCheck();\n    }\n  }\n\n  setSourceUrl(type) {\n    if (typeof type === 'undefined') return '';\n    const split = type.split('-');\n    const souce = split.shift();\n    if (typeof souce === 'undefined') return '';\n    const souceUrl = XSouceUrl[souce];\n    const fileName = split.join('-');\n\n    if (!souceUrl || !fileName) {\n      warnIconTypeNotFound();\n    }\n\n    return `${souceUrl}${fileName}`;\n  }\n\n  setAttributes(svgEle) {\n    if (svgEle) {\n      this.renderer.setAttribute(svgEle, 'width', '1em');\n      this.renderer.setAttribute(svgEle, 'height', '1em');\n    }\n  }\n\n  buildSvg(svgStr) {\n    const result = this.document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    const svg = this.createSvg(svgStr);\n    if (!svg) return;\n    svg.children.forEach(x => {\n      x.removeAttribute('class');\n\n      if (x.tagName === 'rect') {\n        x.setAttribute('fill', 'none');\n      }\n\n      result.appendChild(x);\n    });\n    this.setAttribute(result, svg.ele, 'viewBox');\n    this.setAttribute(result, svg.ele, 'fill', 'currentColor');\n    this.setAttribute(result, svg.ele, 'stroke');\n    this.setAttribute(result, svg.ele, 'stroke-width');\n    this.setAttribute(result, svg.ele, 'stroke-linecap');\n    this.setAttribute(result, svg.ele, 'stroke-linejoin');\n\n    if (!result) {\n      warnSVGTagNotFound();\n    }\n\n    return result;\n  }\n\n  createSvg(svgStr) {\n    const div = this.document.createElement('div');\n    div.innerHTML = svgStr;\n    let svgEle = div.querySelector('svg');\n    if (!svgEle) return null;\n    return {\n      ele: svgEle,\n      children: svgEle.querySelectorAll('path, polyline, polygon, circle, line, rect')\n    };\n  }\n\n  setAttribute(svg, svgEle, attribute, def) {\n    let attr = svgEle.getAttribute(attribute);\n\n    if (attr) {\n      svg.setAttribute(attribute, attr);\n    } else if (def) {\n      svg.setAttribute(attribute, def);\n    }\n  } //<animate begin=\"mouseenter\" dur=\"500ms\" repeatCount=\"1\" attributeName=\"d\" from=\"M86.425,13.204l5.648,12.741H0.55   l0.125-12.616L0.55,0.544h91.523L86.425,13.204z\" to=\"M92.725,13.521l0.044,12.887H1.245   l7-12.616l-7-12.785h91.523L92.725,13.521z\" fill=\"freeze\"></animate>\n\n\n  setAnimates(svgs) {\n    if (svgs?.length > 0) {\n      let svg = this.createSvg(svgs.shift());\n\n      for (let i = 0; i < this._svgElement.children.length; i++) {\n        let child = this._svgElement.children[i];\n        let toChild = svg?.children[i];\n\n        if (child?.nodeName === 'path' && toChild?.nodeName === 'path') {\n          let toAnimate = document.createElement('animate');\n          toAnimate.setAttribute('dur', '500ms');\n          toAnimate.setAttribute('repeatCount', '1');\n          toAnimate.setAttribute('attributeName', 'd');\n          toAnimate.setAttribute('fill', 'freeze');\n          toAnimate.setAttribute('from', child.getAttribute('d'));\n          toAnimate.setAttribute('to', toChild.getAttribute('d'));\n          this.renderer.appendChild(child, toAnimate);\n        }\n      }\n    }\n  }\n\n}\n/** @nocollapse */\n\n\nXIconComponent.ɵfac = function XIconComponent_Factory(t) {\n  return new (t || XIconComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(XIconService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(DOCUMENT, 8), i0.ɵɵdirectiveInject(i2$1.XConfigService));\n};\n/** @nocollapse */\n\n\nXIconComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XIconComponent,\n  selectors: [[\"x-icon\"]],\n  hostVars: 2,\n  hostBindings: function XIconComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"x-icon-spin\", ctx.getSpin);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 0,\n  vars: 0,\n  template: function XIconComponent_Template(rf, ctx) {},\n  styles: [\"@keyframes x-icon-spin{to{transform:rotate(360deg)}}.x-icon{margin:0;padding:0;display:inline-block;line-height:0;text-align:center;vertical-align:-.125em}.x-icon-spin{animation:1s linear infinite x-icon-spin}.x-icon[left]{margin-right:.25rem}.x-icon[right]{margin-left:.25rem}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XIconComponent, [{\n    type: Component,\n    args: [{\n      selector: `${XIconPrefix}`,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"\\r\\n\",\n      styles: [\"@keyframes x-icon-spin{to{transform:rotate(360deg)}}.x-icon{margin:0;padding:0;display:inline-block;line-height:0;text-align:center;vertical-align:-.125em}.x-icon-spin{animation:1s linear infinite x-icon-spin}.x-icon[left]{margin-right:.25rem}.x-icon[right]{margin-left:.25rem}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: XIconService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i2$1.XConfigService\n    }];\n  }, {\n    getSpin: [{\n      type: HostBinding,\n      args: ['class.x-icon-spin']\n    }]\n  });\n})();\n\nclass XIconModule {}\n/** @nocollapse */\n\n\nXIconModule.ɵfac = function XIconModule_Factory(t) {\n  return new (t || XIconModule)();\n};\n/** @nocollapse */\n\n\nXIconModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: XIconModule\n});\n/** @nocollapse */\n\nXIconModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [XIconService],\n  imports: [CommonModule, HttpClientModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XIconModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [XIconComponent, XIconProperty],\n      exports: [XIconComponent],\n      imports: [CommonModule, HttpClientModule],\n      providers: [XIconService]\n    }]\n  }], null, null);\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { XIconComponent, XIconHref, XIconModule, XIconPrefix, XIconProperty, XIconService, XSouceUrl, XViewBox };","map":{"version":3,"names":["i0","Component","Input","SecurityContext","Injectable","ViewEncapsulation","ChangeDetectionStrategy","Optional","Inject","HostBinding","NgModule","DOCUMENT","CommonModule","__decorate","i2$1","XProperty","XWithConfig","XInputNumber","XInputBoolean","XHasIn","XIsChange","XIsEmpty","warnIconTypeNotFound","warnSVGTagNotFound","Observable","i1","i2","HttpClientModule","XIconPrefix","X_CONFIG_NAME","XIconHref","XIconProperty","ɵfac","ɵcmp","prototype","type","args","template","href","color","rotate","spin","to","XIconService","constructor","sanitizer","http","rootUrl","caches","queue","activeTaskXm","isRunningTask","limit","addTask","task","push","runTask","execute","name","callback","observable","subscribe","result","error","console","length","shift","getSvgs","icons","create","subscriber","forEach","icon","index","getSvgElement","svg","next","complete","url","safeUrl","sanitize","URL","get","responseType","DomSanitizer","HttpClient","ɵprov","XSouceUrl","adf","ado","adt","eaf","eao","fto","fab","far","fas","mdf","mdo","XViewBox","XIconComponent","elementRef","renderer","iconService","cdr","document","configService","_loaded","addClass","nativeElement","getSpin","ngOnInit","ngOnChanges","changes","setSvgElement","removeClass","previousValue","detectChanges","getSvg","height","documentElement","clientHeight","width","clientWidth","box","getBoundingClientRect","top","left","typeIcon","setSourceUrl","toIcon","x","setSvgs","svgs","firstChild","removeChild","_svgElement","buildSvg","setAttributes","appendChild","markForCheck","split","souce","souceUrl","fileName","join","svgEle","setAttribute","svgStr","createElementNS","createSvg","children","removeAttribute","tagName","ele","div","createElement","innerHTML","querySelector","querySelectorAll","attribute","def","attr","getAttribute","setAnimates","i","child","toChild","nodeName","toAnimate","ElementRef","Renderer2","ChangeDetectorRef","XConfigService","selector","encapsulation","None","changeDetection","OnPush","styles","undefined","decorators","XIconModule","ɵmod","ɵinj","declarations","exports","imports","providers"],"sources":["/Users/lzl/my-angular-app/node_modules/@ng-nest/ui/fesm2020/ng-nest-ui-icon.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, Input, SecurityContext, Injectable, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, HostBinding, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { __decorate } from 'tslib';\nimport * as i2$1 from '@ng-nest/ui/core';\nimport { XProperty, XWithConfig, XInputNumber, XInputBoolean, XHasIn, XIsChange, XIsEmpty, warnIconTypeNotFound, warnSVGTagNotFound } from '@ng-nest/ui/core';\nimport { Observable } from 'rxjs';\nimport * as i1 from '@angular/platform-browser';\nimport * as i2 from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\n\n/**\r\n * Icon\r\n * @selector x-icon\r\n * @decorator component\r\n */\r\nconst XIconPrefix = 'x-icon';\r\nconst X_CONFIG_NAME = 'icon';\r\nconst XIconHref = 'https://ngnest.com/static/icons/';\r\n/**\r\n * Icon Property\r\n */\r\nclass XIconProperty extends XProperty {\r\n}\r\n/** @nocollapse */ XIconProperty.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XIconProperty, deps: null, target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XIconProperty.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XIconProperty, selector: \"ng-component\", inputs: { href: \"href\", type: \"type\", color: \"color\", rotate: \"rotate\", spin: \"spin\", to: \"to\" }, usesInheritance: true, ngImport: i0, template: '', isInline: true });\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, XIconHref)\r\n], XIconProperty.prototype, \"href\", void 0);\r\n__decorate([\r\n    XInputNumber()\r\n], XIconProperty.prototype, \"rotate\", void 0);\r\n__decorate([\r\n    XInputBoolean()\r\n], XIconProperty.prototype, \"spin\", void 0);\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XIconProperty, decorators: [{\r\n            type: Component,\r\n            args: [{ template: '' }]\r\n        }], propDecorators: { href: [{\r\n                type: Input\r\n            }], type: [{\r\n                type: Input\r\n            }], color: [{\r\n                type: Input\r\n            }], rotate: [{\r\n                type: Input\r\n            }], spin: [{\r\n                type: Input\r\n            }], to: [{\r\n                type: Input\r\n            }] } });\n\n// @dynamic\r\nclass XIconService {\r\n    constructor(sanitizer, http) {\r\n        this.sanitizer = sanitizer;\r\n        this.http = http;\r\n        this.rootUrl = `https://ngnest.com/static/icons/`;\r\n        this.caches = {};\r\n        this.queue = [];\r\n        this.activeTaskXm = 0;\r\n        this.isRunningTask = false;\r\n        this.limit = 10;\r\n    }\r\n    addTask(task) {\r\n        this.queue.push(task);\r\n        this.runTask();\r\n    }\r\n    execute(task) {\r\n        this.isRunningTask = true;\r\n        if (XHasIn(this.caches, task.name)) {\r\n            task.callback(this.caches[task.name]);\r\n            this.activeTaskXm--;\r\n            this.isRunningTask = false;\r\n            this.runTask();\r\n            return;\r\n        }\r\n        return task.observable.subscribe((result) => {\r\n            this.caches[task.name] = result;\r\n            task.callback(result);\r\n            return result;\r\n        }, (error) => {\r\n            console.error(error);\r\n            this.activeTaskXm--;\r\n            this.isRunningTask = false;\r\n            this.runTask();\r\n        }, () => {\r\n            this.activeTaskXm--;\r\n            this.isRunningTask = false;\r\n            this.runTask();\r\n        });\r\n    }\r\n    runTask() {\r\n        if (!this.isRunningTask && this.activeTaskXm < this.limit && this.queue.length > 0) {\r\n            const task = this.queue.shift();\r\n            this.activeTaskXm++;\r\n            this.execute(task);\r\n        }\r\n    }\r\n    getSvgs(...icons) {\r\n        return Observable.create((subscriber) => {\r\n            let result = [];\r\n            icons.forEach((icon, index) => this.addTask({\r\n                name: icon,\r\n                observable: this.getSvgElement(icon),\r\n                callback: (svg) => {\r\n                    result.push(svg);\r\n                    if (index === icons.length - 1) {\r\n                        subscriber.next(result);\r\n                        subscriber.complete();\r\n                    }\r\n                }\r\n            }));\r\n        });\r\n    }\r\n    getSvgElement(icon) {\r\n        const url = `${this.rootUrl}${icon}.svg`;\r\n        const safeUrl = this.sanitizer.sanitize(SecurityContext.URL, url);\r\n        return this.http.get(safeUrl, { responseType: 'text' });\r\n    }\r\n}\r\n/** @nocollapse */ XIconService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XIconService, deps: [{ token: i1.DomSanitizer }, { token: i2.HttpClient }], target: i0.ɵɵFactoryTarget.Injectable });\r\n/** @nocollapse */ XIconService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XIconService });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XIconService, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: i1.DomSanitizer }, { type: i2.HttpClient }]; } });\n\n// 来源路径对应\r\nconst XSouceUrl = {\r\n    adf: `ant-design/fill/`,\r\n    ado: `ant-design/outline/`,\r\n    adt: `ant-design/twotone/`,\r\n    eaf: `eva/fill/`,\r\n    eao: `eva/outline/`,\r\n    fto: `feather/`,\r\n    fab: `font-awesome/brands/`,\r\n    far: `font-awesome/regular/`,\r\n    fas: `font-awesome/solid/`,\r\n    mdf: `material-design/fill/`,\r\n    mdo: `material-design/outline/`\r\n};\r\nconst XViewBox = [\r\n// { souces: [\"adf\", \"ado\", \"adt\"], value: \"0 0 1024 1024\" },\r\n// { souces: [\"eaf\", \"eao\"], value: \"0 0 24 24\" },\r\n// { souces: [\"fto\"], value: \"0 0 24 24\" }\r\n];\r\nclass XIconComponent extends XIconProperty {\r\n    constructor(elementRef, renderer, iconService, cdr, document, configService) {\r\n        super();\r\n        this.elementRef = elementRef;\r\n        this.renderer = renderer;\r\n        this.iconService = iconService;\r\n        this.cdr = cdr;\r\n        this.document = document;\r\n        this.configService = configService;\r\n        this._loaded = false;\r\n        this.iconService.rootUrl = this.href;\r\n        this.renderer.addClass(this.elementRef.nativeElement, XIconPrefix);\r\n    }\r\n    get getSpin() {\r\n        return this.spin;\r\n    }\r\n    ngOnInit() { }\r\n    ngOnChanges(changes) {\r\n        const { type, spin } = changes;\r\n        if (XIsChange(type)) {\r\n            this.setSvgElement();\r\n            this.renderer.removeClass(this.elementRef.nativeElement, type.previousValue);\r\n            this.renderer.addClass(this.elementRef.nativeElement, `${this.type}`);\r\n            this.cdr.detectChanges();\r\n        }\r\n        if (XIsChange(spin)) {\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n    getSvg() {\r\n        if (this._loaded)\r\n            return;\r\n        let height = this.document.documentElement.clientHeight;\r\n        let width = this.document.documentElement.clientWidth;\r\n        let box = this.elementRef.nativeElement.getBoundingClientRect();\r\n        if (box.top <= height && box.left <= width) {\r\n            this.setSvgElement();\r\n            this.renderer.addClass(this.elementRef.nativeElement, `${this.type}`);\r\n            this._loaded = true;\r\n        }\r\n    }\r\n    setSvgElement() {\r\n        const typeIcon = this.setSourceUrl(this.type);\r\n        const toIcon = this.setSourceUrl(this.to);\r\n        let icons = [typeIcon];\r\n        if (XIsEmpty(typeIcon))\r\n            return;\r\n        if (!XIsEmpty(toIcon)) {\r\n            icons = [...icons, toIcon];\r\n        }\r\n        this.iconService.getSvgs(...icons).subscribe((x) => this.setSvgs(x));\r\n    }\r\n    setSvgs(svgs) {\r\n        if (svgs?.length > 0) {\r\n            let firstChild = this.elementRef.nativeElement.firstChild;\r\n            if (firstChild) {\r\n                this.renderer.removeChild(this.elementRef.nativeElement, firstChild);\r\n            }\r\n            this._svgElement = this.buildSvg(svgs.shift());\r\n            // this.setAnimates(svgs);\r\n            this.setAttributes(this._svgElement);\r\n            this.renderer.appendChild(this.elementRef.nativeElement, this._svgElement);\r\n            this.cdr.markForCheck();\r\n        }\r\n    }\r\n    setSourceUrl(type) {\r\n        if (typeof type === 'undefined')\r\n            return '';\r\n        const split = type.split('-');\r\n        const souce = split.shift();\r\n        if (typeof souce === 'undefined')\r\n            return '';\r\n        const souceUrl = XSouceUrl[souce];\r\n        const fileName = split.join('-');\r\n        if (!souceUrl || !fileName) {\r\n            warnIconTypeNotFound();\r\n        }\r\n        return `${souceUrl}${fileName}`;\r\n    }\r\n    setAttributes(svgEle) {\r\n        if (svgEle) {\r\n            this.renderer.setAttribute(svgEle, 'width', '1em');\r\n            this.renderer.setAttribute(svgEle, 'height', '1em');\r\n        }\r\n    }\r\n    buildSvg(svgStr) {\r\n        const result = this.document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n        const svg = this.createSvg(svgStr);\r\n        if (!svg)\r\n            return;\r\n        svg.children.forEach((x) => {\r\n            x.removeAttribute('class');\r\n            if (x.tagName === 'rect') {\r\n                x.setAttribute('fill', 'none');\r\n            }\r\n            result.appendChild(x);\r\n        });\r\n        this.setAttribute(result, svg.ele, 'viewBox');\r\n        this.setAttribute(result, svg.ele, 'fill', 'currentColor');\r\n        this.setAttribute(result, svg.ele, 'stroke');\r\n        this.setAttribute(result, svg.ele, 'stroke-width');\r\n        this.setAttribute(result, svg.ele, 'stroke-linecap');\r\n        this.setAttribute(result, svg.ele, 'stroke-linejoin');\r\n        if (!result) {\r\n            warnSVGTagNotFound();\r\n        }\r\n        return result;\r\n    }\r\n    createSvg(svgStr) {\r\n        const div = this.document.createElement('div');\r\n        div.innerHTML = svgStr;\r\n        let svgEle = div.querySelector('svg');\r\n        if (!svgEle)\r\n            return null;\r\n        return {\r\n            ele: svgEle,\r\n            children: svgEle.querySelectorAll('path, polyline, polygon, circle, line, rect')\r\n        };\r\n    }\r\n    setAttribute(svg, svgEle, attribute, def) {\r\n        let attr = svgEle.getAttribute(attribute);\r\n        if (attr) {\r\n            svg.setAttribute(attribute, attr);\r\n        }\r\n        else if (def) {\r\n            svg.setAttribute(attribute, def);\r\n        }\r\n    }\r\n    //<animate begin=\"mouseenter\" dur=\"500ms\" repeatCount=\"1\" attributeName=\"d\" from=\"M86.425,13.204l5.648,12.741H0.55   l0.125-12.616L0.55,0.544h91.523L86.425,13.204z\" to=\"M92.725,13.521l0.044,12.887H1.245   l7-12.616l-7-12.785h91.523L92.725,13.521z\" fill=\"freeze\"></animate>\r\n    setAnimates(svgs) {\r\n        if (svgs?.length > 0) {\r\n            let svg = this.createSvg(svgs.shift());\r\n            for (let i = 0; i < this._svgElement.children.length; i++) {\r\n                let child = this._svgElement.children[i];\r\n                let toChild = svg?.children[i];\r\n                if (child?.nodeName === 'path' && toChild?.nodeName === 'path') {\r\n                    let toAnimate = document.createElement('animate');\r\n                    toAnimate.setAttribute('dur', '500ms');\r\n                    toAnimate.setAttribute('repeatCount', '1');\r\n                    toAnimate.setAttribute('attributeName', 'd');\r\n                    toAnimate.setAttribute('fill', 'freeze');\r\n                    toAnimate.setAttribute('from', child.getAttribute('d'));\r\n                    toAnimate.setAttribute('to', toChild.getAttribute('d'));\r\n                    this.renderer.appendChild(child, toAnimate);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/** @nocollapse */ XIconComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XIconComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: XIconService }, { token: i0.ChangeDetectorRef }, { token: DOCUMENT, optional: true }, { token: i2$1.XConfigService }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XIconComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XIconComponent, selector: \"x-icon\", host: { properties: { \"class.x-icon-spin\": \"this.getSpin\" } }, usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"\\r\\n\", styles: [\"@keyframes x-icon-spin{to{transform:rotate(360deg)}}.x-icon{margin:0;padding:0;display:inline-block;line-height:0;text-align:center;vertical-align:-.125em}.x-icon-spin{animation:1s linear infinite x-icon-spin}.x-icon[left]{margin-right:.25rem}.x-icon[right]{margin-left:.25rem}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XIconComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: `${XIconPrefix}`, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"\\r\\n\", styles: [\"@keyframes x-icon-spin{to{transform:rotate(360deg)}}.x-icon{margin:0;padding:0;display:inline-block;line-height:0;text-align:center;vertical-align:-.125em}.x-icon-spin{animation:1s linear infinite x-icon-spin}.x-icon[left]{margin-right:.25rem}.x-icon[right]{margin-left:.25rem}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: XIconService }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [DOCUMENT]\r\n                }] }, { type: i2$1.XConfigService }]; }, propDecorators: { getSpin: [{\r\n                type: HostBinding,\r\n                args: ['class.x-icon-spin']\r\n            }] } });\n\nclass XIconModule {\r\n}\r\n/** @nocollapse */ XIconModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XIconModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\n/** @nocollapse */ XIconModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.2\", ngImport: i0, type: XIconModule, declarations: [XIconComponent, XIconProperty], imports: [CommonModule, HttpClientModule], exports: [XIconComponent] });\r\n/** @nocollapse */ XIconModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XIconModule, providers: [XIconService], imports: [CommonModule, HttpClientModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XIconModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [XIconComponent, XIconProperty],\r\n                    exports: [XIconComponent],\r\n                    imports: [CommonModule, HttpClientModule],\r\n                    providers: [XIconService]\r\n                }]\r\n        }] });\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { XIconComponent, XIconHref, XIconModule, XIconPrefix, XIconProperty, XIconService, XSouceUrl, XViewBox };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}