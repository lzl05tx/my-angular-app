{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Injectable, NgModule } from '@angular/core';\nimport * as i2$1 from '@ng-nest/ui/core';\nimport { XIsEmpty, XMoveAnimation, XIsString, XIsXTemplate, fillDefault, XIsUndefined } from '@ng-nest/ui/core';\nimport { of } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@ng-nest/ui/alert';\nimport { XAlertModule } from '@ng-nest/ui/alert';\nimport * as i1$1 from '@ng-nest/ui/portal';\nimport { XPortalModule } from '@ng-nest/ui/portal';\n/**\r\n * Message\r\n * @selector x-message\r\n * @decorator component\r\n */\n\nfunction XMessageComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"x-alert\", 2);\n    i0.ɵɵlistener(\"@x-move-animation.done\", function XMessageComponent_ng_container_1_Template_x_alert_animation_x_move_animation_done_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.moveDone($event));\n    })(\"mouseenter\", function XMessageComponent_ng_container_1_Template_x_alert_mouseenter_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onEnter(item_r1));\n    })(\"mouseleave\", function XMessageComponent_ng_container_1_Template_x_alert_mouseleave_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onLeave(item_r1));\n    })(\"close\", function XMessageComponent_ng_container_1_Template_x_alert_close_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onClose(item_r1));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"@x-move-animation\", item_r1.placement)(\"hide\", item_r1.hide)(\"title\", item_r1.title)(\"content\", item_r1.content)(\"type\", item_r1.type)(\"effect\", item_r1.effect)(\"hideClose\", item_r1.hideClose)(\"closeText\", item_r1.closeText)(\"showIcon\", item_r1.showIcon);\n  }\n}\n\nconst XMessagePrefix = 'x-message';\nconst XMessagePortal = 'x-message-portal';\nconst X_MESSAGE_CONFIG_NAME = 'message';\n\nclass XMessageComponent {\n  constructor(renderer, elementRef, cdr) {\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.cdr = cdr;\n    this.message = {\n      ref: {},\n      list: [],\n      closeAll: () => {}\n    };\n  }\n\n  onClose(item) {\n    this.message.list?.splice(this.message.list.indexOf(item), 1);\n    item.duration$?.unsubscribe();\n    this.cdr.detectChanges();\n  }\n\n  moveDone($event) {\n    if ($event.toState === 'void' && XIsEmpty(this.message.list)) {\n      this.message.ref?.overlayRef?.detach();\n    }\n  }\n\n  onEnter(item) {\n    item.duration$?.unsubscribe();\n  }\n\n  onLeave(item) {\n    if (item.duration) {\n      item.duration$ = of(true).pipe(delay(item.duration)).subscribe(() => this.onClose(item));\n    }\n  }\n\n  trackByNode(_index, item) {\n    return item.id;\n  }\n\n}\n/** @nocollapse */\n\n\nXMessageComponent.ɵfac = function XMessageComponent_Factory(t) {\n  return new (t || XMessageComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n/** @nocollapse */\n\n\nXMessageComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XMessageComponent,\n  selectors: [[\"x-message\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[1, \"x-message\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"duration\", \"0\", \"manual\", \"\", \"disabledAnimation\", \"\", 3, \"hide\", \"title\", \"content\", \"type\", \"effect\", \"hideClose\", \"closeText\", \"showIcon\", \"mouseenter\", \"mouseleave\", \"close\"]],\n  template: function XMessageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, XMessageComponent_ng_container_1_Template, 2, 9, \"ng-container\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.message.list)(\"ngForTrackBy\", ctx.trackByNode);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.XAlertComponent],\n  styles: [\".x-message{margin:0;padding:0}.x-message>x-alert{padding:.25rem 0}.x-message>x-alert>.x-alert{box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color)}.x-message-portal x-message{width:100%}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [XMoveAnimation]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XMessageComponent, [{\n    type: Component,\n    args: [{\n      selector: `${XMessagePrefix}`,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [XMoveAnimation],\n      template: \"<div class=\\\"x-message\\\">\\r\\n  <ng-container *ngFor=\\\"let item of message.list; trackBy: trackByNode\\\">\\r\\n    <x-alert\\r\\n      [@x-move-animation]=\\\"item.placement\\\"\\r\\n      (@x-move-animation.done)=\\\"moveDone($event)\\\"\\r\\n      (mouseenter)=\\\"onEnter(item)\\\"\\r\\n      (mouseleave)=\\\"onLeave(item)\\\"\\r\\n      (close)=\\\"onClose(item)\\\"\\r\\n      [hide]=\\\"item.hide\\\"\\r\\n      [title]=\\\"item.title\\\"\\r\\n      [content]=\\\"item.content\\\"\\r\\n      [type]=\\\"item.type\\\"\\r\\n      [effect]=\\\"item.effect\\\"\\r\\n      [hideClose]=\\\"item.hideClose\\\"\\r\\n      [closeText]=\\\"item.closeText\\\"\\r\\n      [showIcon]=\\\"item.showIcon\\\"\\r\\n      duration=\\\"0\\\"\\r\\n      manual\\r\\n      disabledAnimation\\r\\n    ></x-alert>\\r\\n  </ng-container>\\r\\n</div>\\r\\n\",\n      styles: [\".x-message{margin:0;padding:0}.x-message>x-alert{padding:.25rem 0}.x-message>x-alert>.x-alert{box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color)}.x-message-portal x-message{width:100%}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, null);\n})(); // TODO: add more function\n\n\nclass XMessageRef {\n  constructor(option) {\n    this.close = () => {};\n\n    this.closeAll = () => {};\n\n    this.update = _option => {};\n\n    if (!option.id) option.id = `${new Date().getTime()}`;\n    this.option = option;\n  }\n\n}\n\nclass XMessageService {\n  constructor(portal, configService) {\n    this.portal = portal;\n    this.configService = configService;\n    this.messages = {};\n    this.default = {\n      type: 'info',\n      width: '16rem',\n      placement: 'top',\n      offset: '2rem',\n      effect: 'white',\n      displayType: 'list',\n      duration: 3000,\n      hideClose: true,\n      showIcon: true,\n      hide: false\n    };\n    this.configDefault = this.configService.getConfigForComponent(X_MESSAGE_CONFIG_NAME);\n    Object.assign(this.default, this.configDefault);\n  }\n\n  info(option) {\n    return this.createMessage(option, 'info');\n  }\n\n  success(option) {\n    return this.createMessage(option, 'success');\n  }\n\n  warning(option) {\n    return this.createMessage(option, 'warning');\n  }\n\n  error(option) {\n    return this.createMessage(option, 'error');\n  }\n\n  loading(option) {\n    return this.createMessage(option, 'loading');\n  }\n\n  create(option) {\n    const offset = XIsString(option.offset) ? [option.offset] : option.offset;\n    return this.portal.attach({\n      content: XMessageComponent,\n      overlayConfig: {\n        panelClass: XMessagePortal,\n        width: option.width,\n        height: option.height,\n        positionStrategy: this.portal.setPlace(option.placement, ...offset)\n      }\n    });\n  }\n\n  createMessage(option, type) {\n    let opt;\n\n    if (XIsXTemplate(option)) {\n      opt = {\n        title: option,\n        type: type\n      };\n    } else {\n      opt = option;\n      opt.type = type;\n    }\n\n    fillDefault(opt, this.default);\n    const ref = new XMessageRef(opt);\n\n    if (XIsUndefined(opt.placement)) {\n      return ref;\n    }\n\n    ref.close = () => {\n      this.removeMessage(opt);\n    };\n\n    ref.closeAll = () => {\n      this.closeAll();\n    };\n\n    ref.update = _opt => {\n      this.updateMessage(_opt, opt);\n    };\n\n    this.setDuration(opt);\n    this.createMessagePlacement(opt);\n    return ref;\n  }\n\n  closeAll(excludeOption) {\n    for (let key in this.messages) {\n      for (let option of this.messages[key].list) {\n        option !== excludeOption && this.removeMessage(option);\n      }\n    }\n  }\n\n  createMessagePlacement(option) {\n    let msgPlacement = this.messages[option.placement];\n\n    if (XIsEmpty(msgPlacement) || !msgPlacement.ref?.overlayRef?.hasAttached()) {\n      this.messages[option.placement] = {\n        ref: this.create(option),\n        list: [option],\n        closeAll: () => {\n          this.closeAll();\n        }\n      };\n      msgPlacement = this.messages[option.placement];\n    } else {\n      msgPlacement.list = [...this.messages[option.placement].list, option];\n    }\n\n    this.messageChange(msgPlacement);\n    option.displayType === 'single' && this.closeAll(option);\n  }\n\n  messageChange(message) {\n    if (!message.ref?.overlayRef?.hasAttached() || !message?.ref?.componentRef?.instance) return;\n    message.ref.componentRef.instance.message = message;\n    message.ref.componentRef.instance.cdr.detectChanges();\n  }\n\n  setDuration(option) {\n    if (option.duration && option.type !== 'loading') {\n      option.duration$ = of(true).pipe(delay(option.duration)).subscribe(() => {\n        this.removeMessage(option);\n      });\n    }\n  }\n\n  removeMessage(option) {\n    if (typeof option.placement === 'undefined') return;\n    this.messages[option.placement].ref?.componentRef?.instance.onClose(option);\n  }\n\n  updateMessage(newOption, oldOption) {\n    Object.assign(oldOption, newOption);\n    this.setDuration(oldOption);\n    const refs = this.messages[oldOption.placement];\n\n    if (refs) {\n      refs.ref.componentRef?.instance.cdr.detectChanges();\n    }\n  }\n\n}\n/** @nocollapse */\n\n\nXMessageService.ɵfac = function XMessageService_Factory(t) {\n  return new (t || XMessageService)(i0.ɵɵinject(i1$1.XPortalService), i0.ɵɵinject(i2$1.XConfigService));\n};\n/** @nocollapse */\n\n\nXMessageService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: XMessageService,\n  factory: XMessageService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XMessageService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.XPortalService\n    }, {\n      type: i2$1.XConfigService\n    }];\n  }, null);\n})();\n\nclass XMessageModule {}\n/** @nocollapse */\n\n\nXMessageModule.ɵfac = function XMessageModule_Factory(t) {\n  return new (t || XMessageModule)();\n};\n/** @nocollapse */\n\n\nXMessageModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: XMessageModule\n});\n/** @nocollapse */\n\nXMessageModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [XMessageService],\n  imports: [CommonModule, XPortalModule, XAlertModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XMessageModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [XMessageComponent],\n      exports: [XMessageComponent],\n      imports: [CommonModule, XPortalModule, XAlertModule],\n      providers: [XMessageService]\n    }]\n  }], null, null);\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { XMessageComponent, XMessageModule, XMessagePortal, XMessagePrefix, XMessageRef, XMessageService, X_MESSAGE_CONFIG_NAME };","map":{"version":3,"names":["i0","Component","ViewEncapsulation","ChangeDetectionStrategy","Injectable","NgModule","i2$1","XIsEmpty","XMoveAnimation","XIsString","XIsXTemplate","fillDefault","XIsUndefined","of","delay","i1","CommonModule","i2","XAlertModule","i1$1","XPortalModule","XMessagePrefix","XMessagePortal","X_MESSAGE_CONFIG_NAME","XMessageComponent","constructor","renderer","elementRef","cdr","message","ref","list","closeAll","onClose","item","splice","indexOf","duration$","unsubscribe","detectChanges","moveDone","$event","toState","overlayRef","detach","onEnter","onLeave","duration","pipe","subscribe","trackByNode","_index","id","ɵfac","Renderer2","ElementRef","ChangeDetectorRef","ɵcmp","NgForOf","XAlertComponent","type","args","selector","encapsulation","None","changeDetection","OnPush","animations","template","styles","XMessageRef","option","close","update","_option","Date","getTime","XMessageService","portal","configService","messages","default","width","placement","offset","effect","displayType","hideClose","showIcon","hide","configDefault","getConfigForComponent","Object","assign","info","createMessage","success","warning","error","loading","create","attach","content","overlayConfig","panelClass","height","positionStrategy","setPlace","opt","title","removeMessage","_opt","updateMessage","setDuration","createMessagePlacement","excludeOption","key","msgPlacement","hasAttached","messageChange","componentRef","instance","newOption","oldOption","refs","XPortalService","XConfigService","ɵprov","XMessageModule","ɵmod","ɵinj","declarations","exports","imports","providers"],"sources":["/Users/lzl/my-angular-app/node_modules/@ng-nest/ui/fesm2020/ng-nest-ui-message.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Injectable, NgModule } from '@angular/core';\nimport * as i2$1 from '@ng-nest/ui/core';\nimport { XIsEmpty, XMoveAnimation, XIsString, XIsXTemplate, fillDefault, XIsUndefined } from '@ng-nest/ui/core';\nimport { of } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@ng-nest/ui/alert';\nimport { XAlertModule } from '@ng-nest/ui/alert';\nimport * as i1$1 from '@ng-nest/ui/portal';\nimport { XPortalModule } from '@ng-nest/ui/portal';\n\n/**\r\n * Message\r\n * @selector x-message\r\n * @decorator component\r\n */\r\nconst XMessagePrefix = 'x-message';\r\nconst XMessagePortal = 'x-message-portal';\r\nconst X_MESSAGE_CONFIG_NAME = 'message';\n\nclass XMessageComponent {\r\n    constructor(renderer, elementRef, cdr) {\r\n        this.renderer = renderer;\r\n        this.elementRef = elementRef;\r\n        this.cdr = cdr;\r\n        this.message = { ref: {}, list: [], closeAll: () => { } };\r\n    }\r\n    onClose(item) {\r\n        this.message.list?.splice(this.message.list.indexOf(item), 1);\r\n        item.duration$?.unsubscribe();\r\n        this.cdr.detectChanges();\r\n    }\r\n    moveDone($event) {\r\n        if ($event.toState === 'void' && XIsEmpty(this.message.list)) {\r\n            this.message.ref?.overlayRef?.detach();\r\n        }\r\n    }\r\n    onEnter(item) {\r\n        item.duration$?.unsubscribe();\r\n    }\r\n    onLeave(item) {\r\n        if (item.duration) {\r\n            item.duration$ = of(true)\r\n                .pipe(delay(item.duration))\r\n                .subscribe(() => this.onClose(item));\r\n        }\r\n    }\r\n    trackByNode(_index, item) {\r\n        return item.id;\r\n    }\r\n}\r\n/** @nocollapse */ XMessageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XMessageComponent, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XMessageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XMessageComponent, selector: \"x-message\", ngImport: i0, template: \"<div class=\\\"x-message\\\">\\r\\n  <ng-container *ngFor=\\\"let item of message.list; trackBy: trackByNode\\\">\\r\\n    <x-alert\\r\\n      [@x-move-animation]=\\\"item.placement\\\"\\r\\n      (@x-move-animation.done)=\\\"moveDone($event)\\\"\\r\\n      (mouseenter)=\\\"onEnter(item)\\\"\\r\\n      (mouseleave)=\\\"onLeave(item)\\\"\\r\\n      (close)=\\\"onClose(item)\\\"\\r\\n      [hide]=\\\"item.hide\\\"\\r\\n      [title]=\\\"item.title\\\"\\r\\n      [content]=\\\"item.content\\\"\\r\\n      [type]=\\\"item.type\\\"\\r\\n      [effect]=\\\"item.effect\\\"\\r\\n      [hideClose]=\\\"item.hideClose\\\"\\r\\n      [closeText]=\\\"item.closeText\\\"\\r\\n      [showIcon]=\\\"item.showIcon\\\"\\r\\n      duration=\\\"0\\\"\\r\\n      manual\\r\\n      disabledAnimation\\r\\n    ></x-alert>\\r\\n  </ng-container>\\r\\n</div>\\r\\n\", styles: [\".x-message{margin:0;padding:0}.x-message>x-alert{padding:.25rem 0}.x-message>x-alert>.x-alert{box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color)}.x-message-portal x-message{width:100%}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"component\", type: i2.XAlertComponent, selector: \"x-alert\" }], animations: [XMoveAnimation], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XMessageComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: `${XMessagePrefix}`, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [XMoveAnimation], template: \"<div class=\\\"x-message\\\">\\r\\n  <ng-container *ngFor=\\\"let item of message.list; trackBy: trackByNode\\\">\\r\\n    <x-alert\\r\\n      [@x-move-animation]=\\\"item.placement\\\"\\r\\n      (@x-move-animation.done)=\\\"moveDone($event)\\\"\\r\\n      (mouseenter)=\\\"onEnter(item)\\\"\\r\\n      (mouseleave)=\\\"onLeave(item)\\\"\\r\\n      (close)=\\\"onClose(item)\\\"\\r\\n      [hide]=\\\"item.hide\\\"\\r\\n      [title]=\\\"item.title\\\"\\r\\n      [content]=\\\"item.content\\\"\\r\\n      [type]=\\\"item.type\\\"\\r\\n      [effect]=\\\"item.effect\\\"\\r\\n      [hideClose]=\\\"item.hideClose\\\"\\r\\n      [closeText]=\\\"item.closeText\\\"\\r\\n      [showIcon]=\\\"item.showIcon\\\"\\r\\n      duration=\\\"0\\\"\\r\\n      manual\\r\\n      disabledAnimation\\r\\n    ></x-alert>\\r\\n  </ng-container>\\r\\n</div>\\r\\n\", styles: [\".x-message{margin:0;padding:0}.x-message>x-alert{padding:.25rem 0}.x-message>x-alert>.x-alert{box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color)}.x-message-portal x-message{width:100%}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; } });\n\n// TODO: add more function\r\nclass XMessageRef {\r\n    constructor(option) {\r\n        this.close = () => { };\r\n        this.closeAll = () => { };\r\n        this.update = (_option) => { };\r\n        if (!option.id)\r\n            option.id = `${new Date().getTime()}`;\r\n        this.option = option;\r\n    }\r\n}\n\nclass XMessageService {\r\n    constructor(portal, configService) {\r\n        this.portal = portal;\r\n        this.configService = configService;\r\n        this.messages = {};\r\n        this.default = {\r\n            type: 'info',\r\n            width: '16rem',\r\n            placement: 'top',\r\n            offset: '2rem',\r\n            effect: 'white',\r\n            displayType: 'list',\r\n            duration: 3000,\r\n            hideClose: true,\r\n            showIcon: true,\r\n            hide: false\r\n        };\r\n        this.configDefault = this.configService.getConfigForComponent(X_MESSAGE_CONFIG_NAME);\r\n        Object.assign(this.default, this.configDefault);\r\n    }\r\n    info(option) {\r\n        return this.createMessage(option, 'info');\r\n    }\r\n    success(option) {\r\n        return this.createMessage(option, 'success');\r\n    }\r\n    warning(option) {\r\n        return this.createMessage(option, 'warning');\r\n    }\r\n    error(option) {\r\n        return this.createMessage(option, 'error');\r\n    }\r\n    loading(option) {\r\n        return this.createMessage(option, 'loading');\r\n    }\r\n    create(option) {\r\n        const offset = XIsString(option.offset) ? [option.offset] : option.offset;\r\n        return this.portal.attach({\r\n            content: XMessageComponent,\r\n            overlayConfig: {\r\n                panelClass: XMessagePortal,\r\n                width: option.width,\r\n                height: option.height,\r\n                positionStrategy: this.portal.setPlace(option.placement, ...offset)\r\n            }\r\n        });\r\n    }\r\n    createMessage(option, type) {\r\n        let opt;\r\n        if (XIsXTemplate(option)) {\r\n            opt = { title: option, type: type };\r\n        }\r\n        else {\r\n            opt = option;\r\n            opt.type = type;\r\n        }\r\n        fillDefault(opt, this.default);\r\n        const ref = new XMessageRef(opt);\r\n        if (XIsUndefined(opt.placement)) {\r\n            return ref;\r\n        }\r\n        ref.close = () => {\r\n            this.removeMessage(opt);\r\n        };\r\n        ref.closeAll = () => {\r\n            this.closeAll();\r\n        };\r\n        ref.update = (_opt) => {\r\n            this.updateMessage(_opt, opt);\r\n        };\r\n        this.setDuration(opt);\r\n        this.createMessagePlacement(opt);\r\n        return ref;\r\n    }\r\n    closeAll(excludeOption) {\r\n        for (let key in this.messages) {\r\n            for (let option of this.messages[key].list) {\r\n                option !== excludeOption && this.removeMessage(option);\r\n            }\r\n        }\r\n    }\r\n    createMessagePlacement(option) {\r\n        let msgPlacement = this.messages[option.placement];\r\n        if (XIsEmpty(msgPlacement) || !msgPlacement.ref?.overlayRef?.hasAttached()) {\r\n            this.messages[option.placement] = {\r\n                ref: this.create(option),\r\n                list: [option],\r\n                closeAll: () => {\r\n                    this.closeAll();\r\n                }\r\n            };\r\n            msgPlacement = this.messages[option.placement];\r\n        }\r\n        else {\r\n            msgPlacement.list = [...this.messages[option.placement].list, option];\r\n        }\r\n        this.messageChange(msgPlacement);\r\n        option.displayType === 'single' && this.closeAll(option);\r\n    }\r\n    messageChange(message) {\r\n        if (!message.ref?.overlayRef?.hasAttached() || !message?.ref?.componentRef?.instance)\r\n            return;\r\n        message.ref.componentRef.instance.message = message;\r\n        message.ref.componentRef.instance.cdr.detectChanges();\r\n    }\r\n    setDuration(option) {\r\n        if (option.duration && option.type !== 'loading') {\r\n            option.duration$ = of(true)\r\n                .pipe(delay(option.duration))\r\n                .subscribe(() => {\r\n                this.removeMessage(option);\r\n            });\r\n        }\r\n    }\r\n    removeMessage(option) {\r\n        if (typeof option.placement === 'undefined')\r\n            return;\r\n        this.messages[option.placement].ref?.componentRef?.instance.onClose(option);\r\n    }\r\n    updateMessage(newOption, oldOption) {\r\n        Object.assign(oldOption, newOption);\r\n        this.setDuration(oldOption);\r\n        const refs = this.messages[oldOption.placement];\r\n        if (refs) {\r\n            refs.ref.componentRef?.instance.cdr.detectChanges();\r\n        }\r\n    }\r\n}\r\n/** @nocollapse */ XMessageService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XMessageService, deps: [{ token: i1$1.XPortalService }, { token: i2$1.XConfigService }], target: i0.ɵɵFactoryTarget.Injectable });\r\n/** @nocollapse */ XMessageService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XMessageService });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XMessageService, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: i1$1.XPortalService }, { type: i2$1.XConfigService }]; } });\n\nclass XMessageModule {\r\n}\r\n/** @nocollapse */ XMessageModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XMessageModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\n/** @nocollapse */ XMessageModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.2\", ngImport: i0, type: XMessageModule, declarations: [XMessageComponent], imports: [CommonModule, XPortalModule, XAlertModule], exports: [XMessageComponent] });\r\n/** @nocollapse */ XMessageModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XMessageModule, providers: [XMessageService], imports: [CommonModule, XPortalModule, XAlertModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XMessageModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [XMessageComponent],\r\n                    exports: [XMessageComponent],\r\n                    imports: [CommonModule, XPortalModule, XAlertModule],\r\n                    providers: [XMessageService]\r\n                }]\r\n        }] });\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { XMessageComponent, XMessageModule, XMessagePortal, XMessagePrefix, XMessageRef, XMessageService, X_MESSAGE_CONFIG_NAME };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}