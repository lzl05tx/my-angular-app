{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, forwardRef, NgModule } from '@angular/core';\nimport { XProperty, XInputBoolean, XIsEmpty, setFlex } from '@ng-nest/ui/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n/**\r\n * 表单对象共有的参数\r\n */\n\nclass XFormProp extends XProperty {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * 标签\r\n     */\n\n    this.label = '';\n    /**\r\n     * 标签宽度\r\n     */\n\n    this.labelWidth = '';\n    /**\r\n     * 标签文字对齐方式\r\n     */\n\n    this.labelAlign = 'start';\n    /**\r\n     * flex 布局下的子元素水平排列方式\r\n     */\n\n    this.justify = 'start';\n    /**\r\n     * flex 布局下的子元素垂直排列方式\r\n     */\n\n    this.align = 'start';\n    /**\r\n     * flex 布局下的子元素排列方向\r\n     */\n\n    this.direction = 'column';\n    /**\r\n     * 尺寸\r\n     */\n\n    this.size = 'medium';\n    /**\r\n     * 输入提示信息\r\n     */\n\n    this.placeholder = '';\n    /**\r\n     * 禁用\r\n     */\n\n    this.disabled = false;\n    /**\r\n     * 必填\r\n     */\n\n    this.required = false;\n    /**\r\n     * 只读\r\n     */\n\n    this.readonly = false;\n    /**\r\n     * 激活状态\r\n     */\n\n    this.active = false;\n    /**\r\n     * 输入框点击样式\r\n     */\n\n    this.pointer = false;\n    /**\r\n     * 激活状态\r\n     */\n\n    this.activeChange = new EventEmitter();\n  }\n\n}\n/** @nocollapse */\n\n\nXFormProp.ɵfac = /* @__PURE__ */function () {\n  let ɵXFormProp_BaseFactory;\n  return function XFormProp_Factory(t) {\n    return (ɵXFormProp_BaseFactory || (ɵXFormProp_BaseFactory = i0.ɵɵgetInheritedFactory(XFormProp)))(t || XFormProp);\n  };\n}();\n/** @nocollapse */\n\n\nXFormProp.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XFormProp,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    label: \"label\",\n    labelWidth: \"labelWidth\",\n    labelAlign: \"labelAlign\",\n    justify: \"justify\",\n    align: \"align\",\n    direction: \"direction\",\n    size: \"size\",\n    placeholder: \"placeholder\",\n    disabled: \"disabled\",\n    required: \"required\",\n    readonly: \"readonly\",\n    valueTpl: \"valueTpl\",\n    valueTplContext: \"valueTplContext\",\n    before: \"before\",\n    after: \"after\",\n    pattern: \"pattern\",\n    message: \"message\",\n    active: \"active\",\n    pointer: \"pointer\"\n  },\n  outputs: {\n    activeChange: \"activeChange\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function XFormProp_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n__decorate([XInputBoolean()], XFormProp.prototype, \"disabled\", void 0);\n\n__decorate([XInputBoolean()], XFormProp.prototype, \"required\", void 0);\n\n__decorate([XInputBoolean()], XFormProp.prototype, \"readonly\", void 0);\n\n__decorate([XInputBoolean()], XFormProp.prototype, \"active\", void 0);\n\n__decorate([XInputBoolean()], XFormProp.prototype, \"pointer\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XFormProp, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], null, {\n    label: [{\n      type: Input\n    }],\n    labelWidth: [{\n      type: Input\n    }],\n    labelAlign: [{\n      type: Input\n    }],\n    justify: [{\n      type: Input\n    }],\n    align: [{\n      type: Input\n    }],\n    direction: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    valueTpl: [{\n      type: Input\n    }],\n    valueTplContext: [{\n      type: Input\n    }],\n    before: [{\n      type: Input\n    }],\n    after: [{\n      type: Input\n    }],\n    pattern: [{\n      type: Input\n    }],\n    message: [{\n      type: Input\n    }],\n    active: [{\n      type: Input\n    }],\n    pointer: [{\n      type: Input\n    }],\n    activeChange: [{\n      type: Output\n    }]\n  });\n})();\n\nclass XControlValueAccessor extends XFormProp {\n  constructor() {\n    super(...arguments);\n    this.invalidIndex = 0;\n    this.labelMap = {};\n    this.validator = false;\n  }\n\n  get invalid() {\n    return this.validator && !XIsEmpty(this.value) && this.invalidPattern;\n  }\n\n  get invalidPattern() {\n    if (!this.validator) return false;\n    let result = false;\n    let index = 0;\n\n    if (Array.isArray(this.pattern)) {\n      for (const pt of this.pattern) {\n        result = !new RegExp(pt).test(this.value);\n\n        if (result) {\n          this.invalidIndex = index;\n          break;\n        }\n\n        index++;\n      }\n    } else {\n      result = !new RegExp(this.pattern).test(this.value);\n    }\n\n    return result;\n  }\n\n  get requiredIsEmpty() {\n    return this.validator && this.required && XIsEmpty(this.value);\n  }\n\n  get invalidMessage() {\n    if (!this.validator) return '';\n\n    if (Array.isArray(this.message)) {\n      return this.message.length > this.invalidIndex ? this.message[this.invalidIndex] : '';\n    } else {\n      return this.message;\n    }\n  }\n\n  writeValue(value) {\n    this.value = value;\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled) {\n    this.disabled = disabled;\n  }\n\n  setFlex(ele, renderer, justify, align, direction) {\n    return setFlex(ele, renderer, justify, align, direction);\n  }\n\n  formControlValidator() {\n    this.validator = true;\n  }\n\n}\n/** @nocollapse */\n\n\nXControlValueAccessor.ɵfac = /* @__PURE__ */function () {\n  let ɵXControlValueAccessor_BaseFactory;\n  return function XControlValueAccessor_Factory(t) {\n    return (ɵXControlValueAccessor_BaseFactory || (ɵXControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(XControlValueAccessor)))(t || XControlValueAccessor);\n  };\n}();\n/** @nocollapse */\n\n\nXControlValueAccessor.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XControlValueAccessor,\n  selectors: [[\"ng-component\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function XControlValueAccessor_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XControlValueAccessor, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], null, null);\n})();\n\nfunction XValueAccessor(component) {\n  return {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => component),\n    multi: true\n  };\n}\n\nclass XBaseFormModule {}\n/** @nocollapse */\n\n\nXBaseFormModule.ɵfac = function XBaseFormModule_Factory(t) {\n  return new (t || XBaseFormModule)();\n};\n/** @nocollapse */\n\n\nXBaseFormModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: XBaseFormModule\n});\n/** @nocollapse */\n\nXBaseFormModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XBaseFormModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [XControlValueAccessor, XFormProp],\n      exports: [XControlValueAccessor, XFormProp]\n    }]\n  }], null, null);\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { XBaseFormModule, XControlValueAccessor, XFormProp, XValueAccessor };","map":{"version":3,"names":["__decorate","i0","EventEmitter","Component","Input","Output","forwardRef","NgModule","XProperty","XInputBoolean","XIsEmpty","setFlex","NG_VALUE_ACCESSOR","XFormProp","constructor","arguments","label","labelWidth","labelAlign","justify","align","direction","size","placeholder","disabled","required","readonly","active","pointer","activeChange","ɵfac","ɵcmp","prototype","type","args","template","valueTpl","valueTplContext","before","after","pattern","message","XControlValueAccessor","invalidIndex","labelMap","validator","invalid","value","invalidPattern","result","index","Array","isArray","pt","RegExp","test","requiredIsEmpty","invalidMessage","length","writeValue","registerOnChange","fn","onChange","registerOnTouched","onTouched","setDisabledState","ele","renderer","formControlValidator","XValueAccessor","component","provide","useExisting","multi","XBaseFormModule","ɵmod","ɵinj","declarations","exports"],"sources":["/Users/lzl/my-angular-app/node_modules/@ng-nest/ui/fesm2020/ng-nest-ui-base-form.mjs"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, forwardRef, NgModule } from '@angular/core';\nimport { XProperty, XInputBoolean, XIsEmpty, setFlex } from '@ng-nest/ui/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\r\n * 表单对象共有的参数\r\n */\r\nclass XFormProp extends XProperty {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * 标签\r\n         */\r\n        this.label = '';\r\n        /**\r\n         * 标签宽度\r\n         */\r\n        this.labelWidth = '';\r\n        /**\r\n         * 标签文字对齐方式\r\n         */\r\n        this.labelAlign = 'start';\r\n        /**\r\n         * flex 布局下的子元素水平排列方式\r\n         */\r\n        this.justify = 'start';\r\n        /**\r\n         * flex 布局下的子元素垂直排列方式\r\n         */\r\n        this.align = 'start';\r\n        /**\r\n         * flex 布局下的子元素排列方向\r\n         */\r\n        this.direction = 'column';\r\n        /**\r\n         * 尺寸\r\n         */\r\n        this.size = 'medium';\r\n        /**\r\n         * 输入提示信息\r\n         */\r\n        this.placeholder = '';\r\n        /**\r\n         * 禁用\r\n         */\r\n        this.disabled = false;\r\n        /**\r\n         * 必填\r\n         */\r\n        this.required = false;\r\n        /**\r\n         * 只读\r\n         */\r\n        this.readonly = false;\r\n        /**\r\n         * 激活状态\r\n         */\r\n        this.active = false;\r\n        /**\r\n         * 输入框点击样式\r\n         */\r\n        this.pointer = false;\r\n        /**\r\n         * 激活状态\r\n         */\r\n        this.activeChange = new EventEmitter();\r\n    }\r\n}\r\n/** @nocollapse */ XFormProp.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XFormProp, deps: null, target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XFormProp.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XFormProp, selector: \"ng-component\", inputs: { label: \"label\", labelWidth: \"labelWidth\", labelAlign: \"labelAlign\", justify: \"justify\", align: \"align\", direction: \"direction\", size: \"size\", placeholder: \"placeholder\", disabled: \"disabled\", required: \"required\", readonly: \"readonly\", valueTpl: \"valueTpl\", valueTplContext: \"valueTplContext\", before: \"before\", after: \"after\", pattern: \"pattern\", message: \"message\", active: \"active\", pointer: \"pointer\" }, outputs: { activeChange: \"activeChange\" }, usesInheritance: true, ngImport: i0, template: '', isInline: true });\r\n__decorate([\r\n    XInputBoolean()\r\n], XFormProp.prototype, \"disabled\", void 0);\r\n__decorate([\r\n    XInputBoolean()\r\n], XFormProp.prototype, \"required\", void 0);\r\n__decorate([\r\n    XInputBoolean()\r\n], XFormProp.prototype, \"readonly\", void 0);\r\n__decorate([\r\n    XInputBoolean()\r\n], XFormProp.prototype, \"active\", void 0);\r\n__decorate([\r\n    XInputBoolean()\r\n], XFormProp.prototype, \"pointer\", void 0);\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XFormProp, decorators: [{\r\n            type: Component,\r\n            args: [{ template: '' }]\r\n        }], propDecorators: { label: [{\r\n                type: Input\r\n            }], labelWidth: [{\r\n                type: Input\r\n            }], labelAlign: [{\r\n                type: Input\r\n            }], justify: [{\r\n                type: Input\r\n            }], align: [{\r\n                type: Input\r\n            }], direction: [{\r\n                type: Input\r\n            }], size: [{\r\n                type: Input\r\n            }], placeholder: [{\r\n                type: Input\r\n            }], disabled: [{\r\n                type: Input\r\n            }], required: [{\r\n                type: Input\r\n            }], readonly: [{\r\n                type: Input\r\n            }], valueTpl: [{\r\n                type: Input\r\n            }], valueTplContext: [{\r\n                type: Input\r\n            }], before: [{\r\n                type: Input\r\n            }], after: [{\r\n                type: Input\r\n            }], pattern: [{\r\n                type: Input\r\n            }], message: [{\r\n                type: Input\r\n            }], active: [{\r\n                type: Input\r\n            }], pointer: [{\r\n                type: Input\r\n            }], activeChange: [{\r\n                type: Output\r\n            }] } });\n\nclass XControlValueAccessor extends XFormProp {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.invalidIndex = 0;\r\n        this.labelMap = {};\r\n        this.validator = false;\r\n    }\r\n    get invalid() {\r\n        return this.validator && !XIsEmpty(this.value) && this.invalidPattern;\r\n    }\r\n    get invalidPattern() {\r\n        if (!this.validator)\r\n            return false;\r\n        let result = false;\r\n        let index = 0;\r\n        if (Array.isArray(this.pattern)) {\r\n            for (const pt of this.pattern) {\r\n                result = !new RegExp(pt).test(this.value);\r\n                if (result) {\r\n                    this.invalidIndex = index;\r\n                    break;\r\n                }\r\n                index++;\r\n            }\r\n        }\r\n        else {\r\n            result = !new RegExp(this.pattern).test(this.value);\r\n        }\r\n        return result;\r\n    }\r\n    get requiredIsEmpty() {\r\n        return this.validator && this.required && XIsEmpty(this.value);\r\n    }\r\n    get invalidMessage() {\r\n        if (!this.validator)\r\n            return '';\r\n        if (Array.isArray(this.message)) {\r\n            return this.message.length > this.invalidIndex ? this.message[this.invalidIndex] : '';\r\n        }\r\n        else {\r\n            return this.message;\r\n        }\r\n    }\r\n    writeValue(value) {\r\n        this.value = value;\r\n    }\r\n    registerOnChange(fn) {\r\n        this.onChange = fn;\r\n    }\r\n    registerOnTouched(fn) {\r\n        this.onTouched = fn;\r\n    }\r\n    setDisabledState(disabled) {\r\n        this.disabled = disabled;\r\n    }\r\n    setFlex(ele, renderer, justify, align, direction) {\r\n        return setFlex(ele, renderer, justify, align, direction);\r\n    }\r\n    formControlValidator() {\r\n        this.validator = true;\r\n    }\r\n}\r\n/** @nocollapse */ XControlValueAccessor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XControlValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XControlValueAccessor.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XControlValueAccessor, selector: \"ng-component\", usesInheritance: true, ngImport: i0, template: '', isInline: true });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XControlValueAccessor, decorators: [{\r\n            type: Component,\r\n            args: [{ template: '' }]\r\n        }] });\r\nfunction XValueAccessor(component) {\r\n    return { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => component), multi: true };\r\n}\n\nclass XBaseFormModule {\r\n}\r\n/** @nocollapse */ XBaseFormModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XBaseFormModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\n/** @nocollapse */ XBaseFormModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.2\", ngImport: i0, type: XBaseFormModule, declarations: [XControlValueAccessor, XFormProp], exports: [XControlValueAccessor, XFormProp] });\r\n/** @nocollapse */ XBaseFormModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XBaseFormModule });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XBaseFormModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [XControlValueAccessor, XFormProp],\r\n                    exports: [XControlValueAccessor, XFormProp]\r\n                }]\r\n        }] });\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { XBaseFormModule, XControlValueAccessor, XFormProp, XValueAccessor };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}