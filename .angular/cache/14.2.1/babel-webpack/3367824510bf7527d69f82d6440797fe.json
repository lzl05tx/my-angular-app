{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, Directive, Inject, ViewEncapsulation, ViewChild, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport * as i1 from '@ng-nest/ui/core';\nimport { XWithConfig, XInputNumber, XInputBoolean, XProperty, XIsChange, removeNgTag, XIsEmpty, XResize, stripTags, XIsUndefined } from '@ng-nest/ui/core';\nimport * as i3$1 from '@ng-nest/ui/pagination';\nimport { XPaginationProperty, XPaginationModule } from '@ng-nest/ui/pagination';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject, fromEvent } from 'rxjs';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i4 from '@ng-nest/ui/outlet';\nimport { XOutletModule } from '@ng-nest/ui/outlet';\nimport * as i5$1 from '@ng-nest/ui/loading';\nimport { XLoadingModule } from '@ng-nest/ui/loading';\nimport * as i3 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i5 from '@ng-nest/ui/checkbox';\nimport { XCheckboxModule } from '@ng-nest/ui/checkbox';\nimport * as i6 from '@ng-nest/ui/icon';\nimport { XIconModule } from '@ng-nest/ui/icon';\nimport * as i6$1 from '@ng-nest/ui/button';\nimport { XButtonModule } from '@ng-nest/ui/button';\nimport * as i7 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport * as i8 from '@ng-nest/ui/empty';\nimport { XEmptyModule } from '@ng-nest/ui/empty';\n/**\r\n * Table\r\n * @selector x-table\r\n * @decorator component\r\n */\n\nconst _c0 = [\"thead\"];\n\nfunction XTableHeadComponent_ng_container_2_th_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction XTableHeadComponent_ng_container_2_th_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵlistener(\"draging\", function XTableHeadComponent_ng_container_2_th_2_div_2_Template_div_draging_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const column_r10 = i0.ɵɵnextContext().$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.dragWidth($event, column_r10));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    column: a0\n  };\n};\n\nfunction XTableHeadComponent_ng_container_2_th_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 8);\n    i0.ɵɵtemplate(1, XTableHeadComponent_ng_container_2_th_2_ng_container_1_Template, 1, 0, \"ng-container\", 9);\n    i0.ɵɵtemplate(2, XTableHeadComponent_ng_container_2_th_2_div_2_Template, 1, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r10 = ctx.$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n\n    const _r5 = i0.ɵɵreference(7);\n\n    i0.ɵɵstyleProp(\"grid-area\", column_r10.gridArea)(\"left\", column_r10.left, \"px\")(\"right\", column_r10.right, \"px\")(\"min-height\", ctx_r9.getRowHeight, \"px\");\n    i0.ɵɵclassProp(\"x-table-sticky\", ctx_r9.table.getStickyLeft(column_r10) || ctx_r9.table.getStickyRight(column_r10))(\"x-table-sticky-left\", ctx_r9.table.getStickyLeft(column_r10))(\"x-table-sticky-right\", ctx_r9.table.getStickyRight(column_r10))(\"x-table-sticky-left-last\", ctx_r9.table.getStickyLeftLast(column_r10))(\"x-table-sticky-right-first\", ctx_r9.table.getStickyRightFirst(column_r10))(\"x-table-width-drag\", column_r10.dragWidth);\n    i0.ɵɵproperty(\"title\", column_r10 == null ? null : column_r10.label);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r5)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(24, _c1, column_r10));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", column_r10.dragWidth);\n  }\n}\n\nfunction XTableHeadComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtemplate(2, XTableHeadComponent_ng_container_2_th_2_Template, 3, 26, \"th\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"grid-template-columns\", ctx_r1.cellConfig.gridTemplateColumns)(\"min-height\", ctx_r1.getRowHeight, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.cellConfig.cells);\n  }\n}\n\nfunction XTableHeadComponent_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c2 = function () {\n  return {\n    case: \"search\"\n  };\n};\n\nfunction XTableHeadComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, XTableHeadComponent_ng_container_3_ng_container_1_Template, 1, 0, \"ng-container\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r3 = i0.ɵɵreference(5);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction0(2, _c2));\n  }\n}\n\nfunction XTableHeadComponent_ng_template_4_th_1_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c3 = function (a0) {\n  return {\n    $column: a0\n  };\n};\n\nfunction XTableHeadComponent_ng_template_4_th_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, XTableHeadComponent_ng_template_4_th_1_ng_container_2_ng_container_1_Template, 1, 0, \"ng-container\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r19 = i0.ɵɵnextContext().$implicit;\n    const ctx_r20 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r20.table.headSearchTpl)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c3, column_r19));\n  }\n}\n\nfunction XTableHeadComponent_ng_template_4_th_1_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction XTableHeadComponent_ng_template_4_th_1_ng_container_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵlistener(\"draging\", function XTableHeadComponent_ng_template_4_th_1_ng_container_3_div_2_Template_div_draging_0_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const column_r19 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r26 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r26.dragWidth($event, column_r19));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction XTableHeadComponent_ng_template_4_th_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, XTableHeadComponent_ng_template_4_th_1_ng_container_3_ng_container_1_Template, 1, 0, \"ng-container\", 9);\n    i0.ɵɵtemplate(2, XTableHeadComponent_ng_template_4_th_1_ng_container_3_div_2_Template, 1, 0, \"div\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r19 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵnextContext(2);\n\n    const _r5 = i0.ɵɵreference(7);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r5)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(3, _c1, column_r19));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", column_r19.dragWidth);\n  }\n}\n\nfunction XTableHeadComponent_ng_template_4_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵelementContainerStart(1, 13);\n    i0.ɵɵtemplate(2, XTableHeadComponent_ng_template_4_th_1_ng_container_2_Template, 2, 4, \"ng-container\", 14);\n    i0.ɵɵtemplate(3, XTableHeadComponent_ng_template_4_th_1_ng_container_3_Template, 3, 5, \"ng-container\", 15);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r19 = ctx.$implicit;\n    const case_r17 = i0.ɵɵnextContext().case;\n    const ctx_r18 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"min-height\", ctx_r18.getRowHeight, \"px\")(\"width\", ctx_r18.getColumnWidth(column_r19), \"px\")(\"left\", column_r19.left, \"px\")(\"right\", ctx_r18.getColumnRight(column_r19.right), \"px\")(\"flex\", ctx_r18.getFlex(column_r19));\n    i0.ɵɵclassProp(\"x-table-sticky\", ctx_r18.table.getStickyLeft(column_r19) || ctx_r18.table.getStickyRight(column_r19))(\"x-table-sticky-left\", ctx_r18.table.getStickyLeft(column_r19))(\"x-table-sticky-right\", ctx_r18.table.getStickyRight(column_r19))(\"x-table-sticky-left-last\", ctx_r18.table.getStickyLeftLast(column_r19))(\"x-table-sticky-right-first\", ctx_r18.table.getStickyRightFirst(column_r19));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitch\", case_r17);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"search\");\n  }\n}\n\nfunction XTableHeadComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, XTableHeadComponent_ng_template_4_th_1_Template, 4, 22, \"th\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const case_r17 = ctx.case;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"height\", ctx_r4.getRowHeight, \"px\")(\"min-height\", ctx_r4.getRowHeight, \"px\")(\"padding-right\", ctx_r4.scrollYWidth, \"px\")(\"width\", ctx_r4.scrollXWidth, \"px\");\n    i0.ɵɵclassProp(\"x-table-search\", case_r17 === \"search\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.columns)(\"ngForTrackBy\", ctx_r4.trackByItem);\n  }\n}\n\nconst _c4 = function (a1) {\n  return {\n    id: true,\n    label: a1\n  };\n};\n\nconst _c5 = function (a0) {\n  return [a0];\n};\n\nfunction XTableHeadComponent_ng_template_6_ng_container_1_x_checkbox_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"x-checkbox\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function XTableHeadComponent_ng_template_6_ng_container_1_x_checkbox_1_Template_x_checkbox_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r38);\n      const column_r31 = i0.ɵɵnextContext(2).column;\n      const ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView((ctx_r37.table.checkedValues[column_r31.id] = $event));\n    })(\"ngModelChange\", function XTableHeadComponent_ng_template_6_ng_container_1_x_checkbox_1_Template_x_checkbox_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r38);\n      const column_r31 = i0.ɵɵnextContext(2).column;\n      const ctx_r40 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r40.table.headChecked($event, column_r31));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r31 = i0.ɵɵnextContext(2).column;\n    const ctx_r35 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", i0.ɵɵpureFunction1(5, _c5, i0.ɵɵpureFunction1(3, _c4, column_r31.label)))(\"ngModel\", ctx_r35.table.checkedValues[column_r31.id])(\"indeterminate\", ctx_r35.table.checkedValues[column_r31.id + ctx_r35.table.indeterminate]);\n  }\n}\n\nfunction XTableHeadComponent_ng_template_6_ng_container_1_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction XTableHeadComponent_ng_template_6_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, XTableHeadComponent_ng_template_6_ng_container_1_ng_container_2_ng_container_1_Template, 1, 0, \"ng-container\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r31 = i0.ɵɵnextContext(2).column;\n    i0.ɵɵnextContext();\n\n    const _r7 = i0.ɵɵreference(9);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r7)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c1, column_r31));\n  }\n}\n\nfunction XTableHeadComponent_ng_template_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, XTableHeadComponent_ng_template_6_ng_container_1_x_checkbox_1_Template, 1, 7, \"x-checkbox\", 16);\n    i0.ɵɵtemplate(2, XTableHeadComponent_ng_template_6_ng_container_1_ng_container_2_Template, 2, 4, \"ng-container\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r31 = i0.ɵɵnextContext().column;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", column_r31.headChecked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !column_r31.headChecked);\n  }\n}\n\nfunction XTableHeadComponent_ng_template_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"a\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r31 = i0.ɵɵnextContext().column;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(column_r31.label);\n  }\n}\n\nfunction XTableHeadComponent_ng_template_6_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction XTableHeadComponent_ng_template_6_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, XTableHeadComponent_ng_template_6_ng_container_3_ng_container_1_Template, 1, 0, \"ng-container\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r31 = i0.ɵɵnextContext().column;\n    i0.ɵɵnextContext();\n\n    const _r7 = i0.ɵɵreference(9);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r7)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c1, column_r31));\n  }\n}\n\nfunction XTableHeadComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 13);\n    i0.ɵɵtemplate(1, XTableHeadComponent_ng_template_6_ng_container_1_Template, 3, 2, \"ng-container\", 14);\n    i0.ɵɵtemplate(2, XTableHeadComponent_ng_template_6_ng_container_2_Template, 3, 1, \"ng-container\", 14);\n    i0.ɵɵtemplate(3, XTableHeadComponent_ng_template_6_ng_container_3_Template, 2, 4, \"ng-container\", 15);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r31 = ctx.column;\n    i0.ɵɵproperty(\"ngSwitch\", column_r31.type);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"checkbox\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"index\");\n  }\n}\n\nfunction XTableHeadComponent_ng_template_8_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r49 = i0.ɵɵnextContext().column;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", column_r49.label, \" \");\n  }\n}\n\nfunction XTableHeadComponent_ng_template_8_x_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"x-icon\", 21);\n  }\n\n  if (rf & 2) {\n    const column_r49 = i0.ɵɵnextContext().column;\n    const ctx_r51 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"x-table-icon-up\", ctx_r51.sortStr === column_r49.id + \" desc\")(\"x-table-icon-down\", ctx_r51.sortStr === column_r49.id + \" asc\");\n  }\n}\n\nfunction XTableHeadComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r55 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 18);\n    i0.ɵɵlistener(\"click\", function XTableHeadComponent_ng_template_8_Template_a_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r55);\n      const column_r49 = restoredCtx.column;\n      const ctx_r54 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r54.onSort(column_r49));\n    });\n    i0.ɵɵtemplate(1, XTableHeadComponent_ng_template_8_ng_container_1_Template, 2, 1, \"ng-container\", 19);\n    i0.ɵɵtemplate(2, XTableHeadComponent_ng_template_8_x_icon_2_Template, 1, 4, \"x-icon\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r49 = ctx.column;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"text-align\", column_r49.textAlign);\n    i0.ɵɵclassProp(\"x-table-sort\", column_r49.sort);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xOutlet\", ctx_r8.columnTpl[column_r49.id])(\"xOutletContext\", i0.ɵɵpureFunction1(7, _c3, column_r49));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", column_r49.sort);\n  }\n}\n\nconst _c6 = [\"tbody\"];\nconst _c7 = [\"virtualBody\"];\n\nfunction XTableBodyComponent_ng_container_2_tr_1_td_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c8 = function (a0, a1, a2) {\n  return {\n    column: a0,\n    row: a1,\n    i: a2\n  };\n};\n\nfunction XTableBodyComponent_ng_container_2_tr_1_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 10);\n    i0.ɵɵtemplate(1, XTableBodyComponent_ng_container_2_tr_1_td_1_ng_container_1_Template, 1, 0, \"ng-container\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r17 = ctx.$implicit;\n    const ctx_r20 = i0.ɵɵnextContext();\n    const row_r14 = ctx_r20.$implicit;\n    const i_r15 = ctx_r20.index;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n\n    const _r11 = i0.ɵɵreference(13);\n\n    i0.ɵɵstyleProp(\"left\", column_r17.left, \"px\")(\"right\", column_r17.right, \"px\")(\"grid-area\", column_r17.gridArea);\n    i0.ɵɵclassProp(\"x-table-sticky\", ctx_r16.table.getStickyLeft(column_r17) || ctx_r16.table.getStickyRight(column_r17))(\"x-table-sticky-left\", ctx_r16.table.getStickyLeft(column_r17))(\"x-table-sticky-right\", ctx_r16.table.getStickyRight(column_r17))(\"x-table-sticky-left-last\", ctx_r16.table.getStickyLeftLast(column_r17))(\"x-table-sticky-right-first\", ctx_r16.table.getStickyRightFirst(column_r17));\n    i0.ɵɵproperty(\"title\", ctx_r16.getTitle(row_r14, column_r17));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r11)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(19, _c8, column_r17, row_r14, i_r15));\n  }\n}\n\nfunction XTableBodyComponent_ng_container_2_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, XTableBodyComponent_ng_container_2_tr_1_td_1_Template, 2, 23, \"td\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"grid-template-columns\", ctx_r13.cellConfig.gridTemplateColumns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r13.cellConfig.cells);\n  }\n}\n\nfunction XTableBodyComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, XTableBodyComponent_ng_container_2_tr_1_Template, 2, 3, \"tr\", 8);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.data)(\"ngForTrackBy\", ctx_r1.trackByItem);\n  }\n}\n\nfunction XTableBodyComponent_x_empty_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"x-empty\");\n  }\n}\n\nfunction XTableBodyComponent_ng_template_4_cdk_virtual_scroll_viewport_0_tr_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c9 = function (a0, a1) {\n  return {\n    row: a0,\n    i: a1\n  };\n};\n\nfunction XTableBodyComponent_ng_template_4_cdk_virtual_scroll_viewport_0_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 16);\n    i0.ɵɵlistener(\"click\", function XTableBodyComponent_ng_template_4_cdk_virtual_scroll_viewport_0_tr_2_Template_tr_click_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r28);\n      const row_r24 = restoredCtx.$implicit;\n      const ctx_r27 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r27.rowClick($event, row_r24));\n    });\n    i0.ɵɵtemplate(1, XTableBodyComponent_ng_template_4_cdk_virtual_scroll_viewport_0_tr_2_ng_container_1_Template, 1, 0, \"ng-container\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r24 = ctx.$implicit;\n    const index_r25 = ctx.index;\n    const ctx_r23 = i0.ɵɵnextContext(3);\n\n    const _r7 = i0.ɵɵreference(9);\n\n    i0.ɵɵstyleProp(\"height\", ctx_r23.getRowHeight, \"px\")(\"min-height\", ctx_r23.getRowHeight, \"px\");\n    i0.ɵɵclassProp(\"x-table-activated\", ctx_r23.allowSelectRow && (ctx_r23.activatedRow == null ? null : ctx_r23.activatedRow.id) === row_r24.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r7)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(8, _c9, row_r24, ctx_r23.getIndex(index_r25, row_r24)));\n  }\n}\n\nfunction XTableBodyComponent_ng_template_4_cdk_virtual_scroll_viewport_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"cdk-virtual-scroll-viewport\", 13, 14);\n    i0.ɵɵtemplate(2, XTableBodyComponent_ng_template_4_cdk_virtual_scroll_viewport_0_tr_2_Template, 2, 11, \"tr\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"height\", ctx_r21.bodyHeight, \"px\");\n    i0.ɵɵproperty(\"itemSize\", ctx_r21.getItemSize)(\"minBufferPx\", ctx_r21.minBufferPx)(\"maxBufferPx\", ctx_r21.maxBufferPx);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"cdkVirtualForOf\", ctx_r21.data)(\"cdkVirtualForTrackBy\", ctx_r21.trackByItem);\n  }\n}\n\nfunction XTableBodyComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, XTableBodyComponent_ng_template_4_cdk_virtual_scroll_viewport_0_Template, 3, 7, \"cdk-virtual-scroll-viewport\", 12);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n\n    const _r5 = i0.ɵɵreference(7);\n\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.virtualScroll)(\"ngIfElse\", _r5);\n  }\n}\n\nfunction XTableBodyComponent_ng_template_6_ng_container_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction XTableBodyComponent_ng_template_6_ng_container_0_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"x-table-body\", 20);\n    i0.ɵɵlistener(\"activatedRowChange\", function XTableBodyComponent_ng_template_6_ng_container_0_div_3_Template_x_table_body_activatedRowChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r34 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r34.table.activatedRow = $event);\n    })(\"activatedRowChange\", function XTableBodyComponent_ng_template_6_ng_container_0_div_3_Template_x_table_body_activatedRowChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r36 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r36.table.activatedRowChange.emit($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const row_r30 = i0.ɵɵnextContext().$implicit;\n    const ctx_r33 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"x-table-expandTpl\", ctx_r33.expandTpl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"data\", row_r30.children)(\"columns\", ctx_r33.table.columns)(\"itemSize\", ctx_r33.table.itemSize)(\"rowHeight\", ctx_r33.table.rowHeight)(\"columnTpl\", ctx_r33.table.bodyColumnTpl)(\"allowSelectRow\", ctx_r33.table.allowSelectRow)(\"rowClass\", ctx_r33.table.rowClass)(\"cellConfig\", ctx_r33.table.cellConfig == null ? null : ctx_r33.table.cellConfig.tbody)(\"activatedRow\", ctx_r33.table.activatedRow)(\"expandedAll\", ctx_r33.expandedAll)(\"expandTpl\", ctx_r33.expandTpl)(\"level\", row_r30.level + 1)(\"table\", ctx_r33.table);\n  }\n}\n\nfunction XTableBodyComponent_ng_template_6_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"tr\", 16);\n    i0.ɵɵlistener(\"click\", function XTableBodyComponent_ng_template_6_ng_container_0_Template_tr_click_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r39);\n      const row_r30 = restoredCtx.$implicit;\n      const ctx_r38 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r38.rowClick($event, row_r30));\n    });\n    i0.ɵɵtemplate(2, XTableBodyComponent_ng_template_6_ng_container_0_ng_container_2_Template, 1, 0, \"ng-container\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, XTableBodyComponent_ng_template_6_ng_container_0_div_3_Template, 2, 15, \"div\", 18);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const row_r30 = ctx.$implicit;\n    const i_r31 = ctx.index;\n    const ctx_r29 = i0.ɵɵnextContext(2);\n\n    const _r7 = i0.ɵɵreference(9);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"height\", ctx_r29.getRowHeight, \"px\")(\"min-height\", ctx_r29.getRowHeight, \"px\");\n    i0.ɵɵclassProp(\"x-table-activated\", ctx_r29.allowSelectRow && (ctx_r29.activatedRow == null ? null : ctx_r29.activatedRow.id) === row_r30.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r7)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(9, _c9, row_r30, i_r31));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r29.table.treeTable && row_r30.children && row_r30.expanded);\n  }\n}\n\nfunction XTableBodyComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, XTableBodyComponent_ng_template_6_ng_container_0_Template, 4, 12, \"ng-container\", 17);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.data)(\"ngForTrackBy\", ctx_r6.trackByItem);\n  }\n}\n\nfunction XTableBodyComponent_ng_template_8_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c10 = function (a0, a1, a2) {\n  return {\n    $row: a0,\n    $index: a1,\n    $level: a2\n  };\n};\n\nfunction XTableBodyComponent_ng_template_8_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, XTableBodyComponent_ng_template_8_ng_container_0_ng_container_1_Template, 1, 0, \"ng-container\", 21);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r45 = i0.ɵɵnextContext();\n    const row_r40 = ctx_r45.row;\n    const i_r41 = ctx_r45.i;\n    const ctx_r42 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xOutlet\", ctx_r42.expandTpl)(\"xOutletContext\", i0.ɵɵpureFunction3(2, _c10, row_r40, i_r41, ctx_r42.level));\n  }\n}\n\nfunction XTableBodyComponent_ng_template_8_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c11 = function (a0, a1, a2) {\n  return {\n    row: a0,\n    i: a1,\n    level: a2\n  };\n};\n\nfunction XTableBodyComponent_ng_template_8_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, XTableBodyComponent_ng_template_8_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 21);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r47 = i0.ɵɵnextContext();\n    const row_r40 = ctx_r47.row;\n    const i_r41 = ctx_r47.i;\n    const ctx_r43 = i0.ɵɵnextContext();\n\n    const _r9 = i0.ɵɵreference(11);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xOutlet\", _r9)(\"xOutletContext\", i0.ɵɵpureFunction3(2, _c11, row_r40, i_r41, ctx_r43.level));\n  }\n}\n\nfunction XTableBodyComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, XTableBodyComponent_ng_template_8_ng_container_0_Template, 2, 6, \"ng-container\", 2);\n    i0.ɵɵtemplate(1, XTableBodyComponent_ng_template_8_ng_container_1_Template, 2, 6, \"ng-container\", 2);\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.level > 0 && ctx_r8.expandTpl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.level === 0 || !ctx_r8.expandTpl);\n  }\n}\n\nfunction XTableBodyComponent_ng_template_10_ng_container_0_2_ng_template_0_Template(rf, ctx) {}\n\nfunction XTableBodyComponent_ng_template_10_ng_container_0_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, XTableBodyComponent_ng_template_10_ng_container_0_2_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\n\nconst _c12 = function () {\n  return {};\n};\n\nfunction XTableBodyComponent_ng_template_10_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"td\", 22);\n    i0.ɵɵtemplate(2, XTableBodyComponent_ng_template_10_ng_container_0_2_Template, 1, 0, null, 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r51 = ctx.$implicit;\n    const ctx_r55 = i0.ɵɵnextContext();\n    const row_r48 = ctx_r55.row;\n    const i_r49 = ctx_r55.i;\n    const ctx_r50 = i0.ɵɵnextContext();\n\n    const _r11 = i0.ɵɵreference(13);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"width\", column_r51.width, \"px\")(\"flex\", ctx_r50.getFlex(column_r51))(\"left\", column_r51.left, \"px\")(\"right\", column_r51.right, \"px\");\n    i0.ɵɵclassProp(\"x-table-sticky\", ctx_r50.table.getStickyLeft(column_r51) || ctx_r50.table.getStickyRight(column_r51))(\"x-table-sticky-left\", ctx_r50.table.getStickyLeft(column_r51))(\"x-table-sticky-right\", ctx_r50.table.getStickyRight(column_r51))(\"x-table-sticky-left-last\", ctx_r50.table.getStickyLeftLast(column_r51))(\"x-table-sticky-right-first\", ctx_r50.table.getStickyRightFirst(column_r51));\n    i0.ɵɵproperty(\"title\", ctx_r50.getTitle(row_r48, column_r51))(\"ngClass\", !ctx_r50.rowClass ? i0.ɵɵpureFunction0(22, _c12) : ctx_r50.rowClass(row_r48, i_r49));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r11)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(23, _c8, column_r51, row_r48, i_r49));\n  }\n}\n\nfunction XTableBodyComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, XTableBodyComponent_ng_template_10_ng_container_0_Template, 3, 27, \"ng-container\", 17);\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r10.columns)(\"ngForTrackBy\", ctx_r10.trackByItem);\n  }\n}\n\nconst _c13 = function () {\n  return {\n    id: true,\n    label: \"\"\n  };\n};\n\nfunction XTableBodyComponent_ng_template_12_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r64 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"x-checkbox\", 26);\n    i0.ɵɵlistener(\"ngModelChange\", function XTableBodyComponent_ng_template_12_ng_container_1_Template_x_checkbox_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r64);\n      const ctx_r63 = i0.ɵɵnextContext();\n      const row_r57 = ctx_r63.row;\n      const column_r56 = ctx_r63.column;\n      return i0.ɵɵresetView((row_r57[column_r56.id] = $event));\n    })(\"ngModelChange\", function XTableBodyComponent_ng_template_12_ng_container_1_Template_x_checkbox_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r64);\n      const column_r56 = i0.ɵɵnextContext().column;\n      const ctx_r65 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r65.table.bodyChecked($event, column_r56));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r67 = i0.ɵɵnextContext();\n    const row_r57 = ctx_r67.row;\n    const column_r56 = ctx_r67.column;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"data\", i0.ɵɵpureFunction1(3, _c5, i0.ɵɵpureFunction0(2, _c13)))(\"ngModel\", row_r57[column_r56.id]);\n  }\n}\n\nfunction XTableBodyComponent_ng_template_12_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const i_r58 = i0.ɵɵnextContext().i;\n    const ctx_r60 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r60.table.getIndex(i_r58));\n  }\n}\n\nfunction XTableBodyComponent_ng_template_12_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r73 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"x-button\", 27);\n    i0.ɵɵlistener(\"click\", function XTableBodyComponent_ng_template_12_ng_container_3_ng_container_1_Template_x_button_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r73);\n      const row_r57 = i0.ɵɵnextContext(2).row;\n      const ctx_r71 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r71.onExpanded($event, row_r57));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const row_r57 = i0.ɵɵnextContext(2).row;\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"margin-left\", row_r57.level - 0.5, \"rem\");\n    i0.ɵɵclassProp(\"is-leaf\", !row_r57.leaf)(\"is-expanded\", row_r57.expanded);\n  }\n}\n\nfunction XTableBodyComponent_ng_template_12_ng_container_3_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"div\", 28);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r76 = i0.ɵɵnextContext(3);\n    const column_r56 = ctx_r76.column;\n    const row_r57 = ctx_r76.row;\n    const ctx_r75 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"text-align\", column_r56.textAlign);\n    i0.ɵɵproperty(\"innerHTML\", row_r57[column_r56.id], i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r75.table.rowExpandNext && ctx_r75.table.rowExpandNext.id === column_r56.id ? \"x-table-body-level-\" + row_r57.level : \"\", \" \");\n  }\n}\n\nconst _c14 = function (a0, a1, a2) {\n  return {\n    $column: a0,\n    $row: a1,\n    $index: a2\n  };\n};\n\nfunction XTableBodyComponent_ng_template_12_ng_container_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, XTableBodyComponent_ng_template_12_ng_container_3_ng_container_2_ng_container_1_Template, 3, 4, \"ng-container\", 21);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r77 = i0.ɵɵnextContext(2);\n    const column_r56 = ctx_r77.column;\n    const row_r57 = ctx_r77.row;\n    const i_r58 = ctx_r77.i;\n    const ctx_r70 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xOutlet\", ctx_r70.table.bodyTdTpl)(\"xOutletContext\", i0.ɵɵpureFunction3(2, _c14, column_r56, row_r57, ctx_r70.table.getIndex(i_r58)));\n  }\n}\n\nfunction XTableBodyComponent_ng_template_12_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, XTableBodyComponent_ng_template_12_ng_container_3_ng_container_1_Template, 2, 6, \"ng-container\", 2);\n    i0.ɵɵtemplate(2, XTableBodyComponent_ng_template_12_ng_container_3_ng_container_2_Template, 2, 6, \"ng-container\", 21);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r78 = i0.ɵɵnextContext();\n    const column_r56 = ctx_r78.column;\n    const row_r57 = ctx_r78.row;\n    const i_r58 = ctx_r78.i;\n    const ctx_r61 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r61.table.isExpandColumn(column_r56));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xOutlet\", ctx_r61.columnTpl[column_r56.id])(\"xOutletContext\", i0.ɵɵpureFunction3(3, _c14, column_r56, row_r57, ctx_r61.table.getIndex(i_r58)));\n  }\n}\n\nfunction XTableBodyComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 23);\n    i0.ɵɵtemplate(1, XTableBodyComponent_ng_template_12_ng_container_1_Template, 2, 5, \"ng-container\", 24);\n    i0.ɵɵtemplate(2, XTableBodyComponent_ng_template_12_ng_container_2_Template, 3, 1, \"ng-container\", 24);\n    i0.ɵɵtemplate(3, XTableBodyComponent_ng_template_12_ng_container_3_Template, 3, 7, \"ng-container\", 25);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r56 = ctx.column;\n    i0.ɵɵproperty(\"ngSwitch\", column_r56.type);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"checkbox\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"index\");\n  }\n}\n\nconst _c15 = [\"tfoot\"];\n\nfunction XTableFootComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.footer);\n  }\n}\n\nconst _c16 = [\"table\"];\nconst _c17 = [\"caption\"];\nconst _c18 = [\"pagination\"];\nconst _c19 = [\"stickyTopRightEle\"];\nconst _c20 = [\"stickyBottomRightEle\"];\n\nfunction XTableComponent_caption_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r11.header);\n  }\n}\n\nfunction XTableComponent_caption_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"caption\", 11, 12);\n    i0.ɵɵtemplate(2, XTableComponent_caption_2_ng_container_2_Template, 2, 1, \"ng-container\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"height\", ctx_r1.getRowHeight, \"px\")(\"min-height\", ctx_r1.getRowHeight, \"px\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"xOutlet\", ctx_r1.header);\n  }\n}\n\nfunction XTableComponent_x_table_head_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"x-table-head\", 14);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"columns\", ctx_r2.columns)(\"rowHeight\", ctx_r2.rowHeight)(\"columnTpl\", ctx_r2.headColumnTpl)(\"scrollYWidth\", ctx_r2.scrollYWidth)(\"scrollXWidth\", ctx_r2.scrollXWidth)(\"cellConfig\", ctx_r2.cellConfig == null ? null : ctx_r2.cellConfig.thead)(\"position\", \"top\")(\"table\", ctx_r2);\n  }\n}\n\nfunction XTableComponent_x_table_head_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"x-table-head\", 14);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"columns\", ctx_r3.columns)(\"rowHeight\", ctx_r3.rowHeight)(\"columnTpl\", ctx_r3.headColumnTpl)(\"scrollYWidth\", ctx_r3.scrollYWidth)(\"scrollXWidth\", ctx_r3.scrollXWidth)(\"cellConfig\", ctx_r3.cellConfig == null ? null : ctx_r3.cellConfig.thead)(\"position\", \"bottom\")(\"table\", ctx_r3);\n  }\n}\n\nfunction XTableComponent_x_table_foot_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"x-table-foot\", 15);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"table\", ctx_r4)(\"footer\", ctx_r4.footer)(\"rowHeight\", ctx_r4.rowHeight);\n  }\n}\n\nfunction XTableComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 16, 17);\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"top\", ctx_r5.getStickyTopScrollTop, \"px\")(\"width\", ctx_r5.scrollYWidth, \"px\")(\"height\", ctx_r5.getRowHeight, \"px\")(\"min-height\", ctx_r5.getRowHeight, \"px\");\n    i0.ɵɵclassProp(\"x-table-border-bottom\", ctx_r5.headSearchTpl);\n  }\n}\n\nfunction XTableComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 16);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"top\", ctx_r6.getStickyTopScrollTop + ctx_r6.getStickyTopRightEleHeight, \"px\")(\"width\", ctx_r6.scrollYWidth, \"px\")(\"height\", ctx_r6.getRowHeight, \"px\")(\"min-height\", ctx_r6.getRowHeight, \"px\");\n  }\n}\n\nfunction XTableComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 16, 18);\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"bottom\", ctx_r7.getStickyBottomScrollTop, \"px\")(\"width\", ctx_r7.scrollYWidth, \"px\")(\"height\", ctx_r7.getRowHeight, \"px\")(\"min-height\", ctx_r7.getRowHeight, \"px\");\n  }\n}\n\nfunction XTableComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 16);\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"bottom\", ctx_r8.getStickyBottomScrollTop + ctx_r8.getStickyBottomRightEleHeight, \"px\")(\"width\", ctx_r8.scrollYWidth, \"px\")(\"height\", ctx_r8.getRowHeight, \"px\")(\"min-height\", ctx_r8.getRowHeight, \"px\");\n    i0.ɵɵclassProp(\"x-table-border-bottom\", ctx_r8.headSearchTpl);\n  }\n}\n\nfunction XTableComponent_x_pagination_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"x-pagination\", 19, 20);\n    i0.ɵɵlistener(\"indexChange\", function XTableComponent_x_pagination_11_Template_x_pagination_indexChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.index = $event);\n    })(\"sizeChange\", function XTableComponent_x_pagination_11_Template_x_pagination_sizeChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.size = $event);\n    })(\"queryChange\", function XTableComponent_x_pagination_11_Template_x_pagination_queryChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.query = $event);\n    })(\"indexChange\", function XTableComponent_x_pagination_11_Template_x_pagination_indexChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.change($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"index\", ctx_r9.index)(\"size\", ctx_r9.size)(\"query\", ctx_r9.query)(\"total\", ctx_r9.total)(\"showEllipsis\", ctx_r9.showEllipsis)(\"showTotal\", ctx_r9.showTotal)(\"space\", ctx_r9.space)(\"hiddenBorder\", ctx_r9.hiddenBorder);\n  }\n}\n\nconst XTablePrefix = 'x-table';\nconst X_CONFIG_NAME = 'table';\n/**\r\n * Table Property\r\n */\n\nclass XTableProperty extends XPaginationProperty {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * @zh_CN 行数据\r\n     * @en_US Row data\r\n     */\n\n    this.data = [];\n    /**\r\n     * @zh_CN 列集合\r\n     * @en_US Column set\r\n     */\n\n    this.columns = [];\n    /**\r\n     * @zh_CN 当前选中行改变\r\n     * @en_US The currently selected row changes\r\n     */\n\n    this.activatedRowChange = new EventEmitter();\n    /**\r\n     * @zh_CN 列头自定义模板，通过 key-value 的方式指定每列的模版\r\n     * @en_US Column header custom template\r\n     */\n\n    this.headColumnTpl = {};\n    /**\r\n     * @zh_CN 列内容自定义模板，通过 key-value 的方式指定每列的模版\r\n     * @en_US Column content custom template\r\n     */\n\n    this.bodyColumnTpl = {};\n    /**\r\n     * @zh_CN 排序点击的事件\r\n     * @en_US Sort click events\r\n     */\n\n    this.sortChange = new EventEmitter();\n    /**\r\n     * @zh_CN 超出可视窗口缓冲区的最小值，对应 cdk scroll 中的参数\r\n     * @en_US Exceed the minimum value of the visible window buffer, corresponding to the parameters in cdk scroll\r\n     */\n\n    this.minBufferPx = 100;\n    /**\r\n     * @zh_CN 渲染新数据缓冲区的像素，对应 cdk scroll 中的参数\r\n     * @en_US Render the pixels of the new data buffer, corresponding to the parameters in cdk scroll\r\n     */\n\n    this.maxBufferPx = 200;\n    /**\r\n     * @zh_CN 文档高度百分比，弹窗百分比高度用到\r\n     * @en_US Document height percentage, used by pop-up window percentage height\r\n     */\n\n    this.docPercent = 1;\n    /**\r\n     * @zh_CN checkbox 列初始选中的数据，列中激活 checkbox\r\n     * @en_US Checkbox column initially selected data, checkbox is activated in column\r\n     */\n\n    this.checkedRow = {};\n    /**\r\n     * @zh_CN 如果 data 是函数类型，可以通过此参数控制请求，常用于弹框中的表格，弹出后再请求\r\n     * @en_US If data is a function type, you can use this parameter to control the request, which is often used in the form in the pop-up box, and then request it after it pops up\r\n     */\n\n    this.manual = true;\n    /**\r\n     * @zh_CN 参数控制请求改变事件\r\n     * @en_US Parameter control request change event\r\n     */\n\n    this.manualChange = new EventEmitter();\n    /**\r\n     * @zh_CN 分页器位置\r\n     * @en_US Pagination position\r\n     */\n\n    this.paginationPosition = 'bottom-left';\n    /**\r\n     * @zh_CN 展开的节点\r\n     * @en_US Expanded node\r\n     */\n\n    this.expanded = [];\n  }\n\n}\n/** @nocollapse */\n\n\nXTableProperty.ɵfac = /* @__PURE__ */function () {\n  let ɵXTableProperty_BaseFactory;\n  return function XTableProperty_Factory(t) {\n    return (ɵXTableProperty_BaseFactory || (ɵXTableProperty_BaseFactory = i0.ɵɵgetInheritedFactory(XTableProperty)))(t || XTableProperty);\n  };\n}();\n/** @nocollapse */\n\n\nXTableProperty.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XTableProperty,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    data: \"data\",\n    columns: \"columns\",\n    rowHeight: \"rowHeight\",\n    loading: \"loading\",\n    bordered: \"bordered\",\n    showHeader: \"showHeader\",\n    headerPosition: \"headerPosition\",\n    activatedRow: \"activatedRow\",\n    headColumnTpl: \"headColumnTpl\",\n    bodyColumnTpl: \"bodyColumnTpl\",\n    bodyTdTpl: \"bodyTdTpl\",\n    rowClass: \"rowClass\",\n    headSearchTpl: \"headSearchTpl\",\n    allowSelectRow: \"allowSelectRow\",\n    allowCheckRow: \"allowCheckRow\",\n    virtualScroll: \"virtualScroll\",\n    bodyHeight: \"bodyHeight\",\n    itemSize: \"itemSize\",\n    minBufferPx: \"minBufferPx\",\n    maxBufferPx: \"maxBufferPx\",\n    adaptionHeight: \"adaptionHeight\",\n    docPercent: \"docPercent\",\n    checkedRow: \"checkedRow\",\n    manual: \"manual\",\n    scroll: \"scroll\",\n    header: \"header\",\n    footer: \"footer\",\n    cellConfig: \"cellConfig\",\n    rowSize: \"rowSize\",\n    paginationPosition: \"paginationPosition\",\n    showPagination: \"showPagination\",\n    treeTable: \"treeTable\",\n    expandedAll: \"expandedAll\",\n    expandedLevel: \"expandedLevel\",\n    expanded: \"expanded\",\n    expandTpl: \"expandTpl\"\n  },\n  outputs: {\n    activatedRowChange: \"activatedRowChange\",\n    sortChange: \"sortChange\",\n    manualChange: \"manualChange\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function XTableProperty_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n__decorate([XWithConfig(X_CONFIG_NAME, 42), XInputNumber()], XTableProperty.prototype, \"rowHeight\", void 0);\n\n__decorate([XWithConfig(X_CONFIG_NAME, false), XInputBoolean()], XTableProperty.prototype, \"loading\", void 0);\n\n__decorate([XWithConfig(X_CONFIG_NAME, false), XInputBoolean()], XTableProperty.prototype, \"bordered\", void 0);\n\n__decorate([XWithConfig(X_CONFIG_NAME, true), XInputBoolean()], XTableProperty.prototype, \"showHeader\", void 0);\n\n__decorate([XWithConfig(X_CONFIG_NAME, 'top')], XTableProperty.prototype, \"headerPosition\", void 0);\n\n__decorate([XWithConfig(X_CONFIG_NAME, true), XInputBoolean()], XTableProperty.prototype, \"allowSelectRow\", void 0);\n\n__decorate([XWithConfig(X_CONFIG_NAME, true), XInputBoolean()], XTableProperty.prototype, \"allowCheckRow\", void 0);\n\n__decorate([XWithConfig(X_CONFIG_NAME), XInputBoolean()], XTableProperty.prototype, \"virtualScroll\", void 0);\n\n__decorate([XInputNumber()], XTableProperty.prototype, \"bodyHeight\", void 0);\n\n__decorate([XWithConfig(X_CONFIG_NAME, 42), XInputNumber()], XTableProperty.prototype, \"itemSize\", void 0);\n\n__decorate([XInputNumber()], XTableProperty.prototype, \"adaptionHeight\", void 0);\n\n__decorate([XInputNumber()], XTableProperty.prototype, \"docPercent\", void 0);\n\n__decorate([XInputBoolean()], XTableProperty.prototype, \"manual\", void 0);\n\n__decorate([XWithConfig(X_CONFIG_NAME, 'medium')], XTableProperty.prototype, \"rowSize\", void 0);\n\n__decorate([XWithConfig(X_CONFIG_NAME, true), XInputBoolean()], XTableProperty.prototype, \"showPagination\", void 0);\n\n__decorate([XWithConfig(X_CONFIG_NAME, false), XInputBoolean()], XTableProperty.prototype, \"treeTable\", void 0);\n\n__decorate([XWithConfig(X_CONFIG_NAME, false), XInputBoolean()], XTableProperty.prototype, \"expandedAll\", void 0);\n\n__decorate([XWithConfig(X_CONFIG_NAME, -1), XInputNumber()], XTableProperty.prototype, \"expandedLevel\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XTableProperty, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }],\n    rowHeight: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    bordered: [{\n      type: Input\n    }],\n    showHeader: [{\n      type: Input\n    }],\n    headerPosition: [{\n      type: Input\n    }],\n    activatedRow: [{\n      type: Input\n    }],\n    activatedRowChange: [{\n      type: Output\n    }],\n    headColumnTpl: [{\n      type: Input\n    }],\n    bodyColumnTpl: [{\n      type: Input\n    }],\n    bodyTdTpl: [{\n      type: Input\n    }],\n    rowClass: [{\n      type: Input\n    }],\n    headSearchTpl: [{\n      type: Input\n    }],\n    sortChange: [{\n      type: Output\n    }],\n    allowSelectRow: [{\n      type: Input\n    }],\n    allowCheckRow: [{\n      type: Input\n    }],\n    virtualScroll: [{\n      type: Input\n    }],\n    bodyHeight: [{\n      type: Input\n    }],\n    itemSize: [{\n      type: Input\n    }],\n    minBufferPx: [{\n      type: Input\n    }],\n    maxBufferPx: [{\n      type: Input\n    }],\n    adaptionHeight: [{\n      type: Input\n    }],\n    docPercent: [{\n      type: Input\n    }],\n    checkedRow: [{\n      type: Input\n    }],\n    manual: [{\n      type: Input\n    }],\n    scroll: [{\n      type: Input\n    }],\n    header: [{\n      type: Input\n    }],\n    footer: [{\n      type: Input\n    }],\n    manualChange: [{\n      type: Output\n    }],\n    cellConfig: [{\n      type: Input\n    }],\n    rowSize: [{\n      type: Input\n    }],\n    paginationPosition: [{\n      type: Input\n    }],\n    showPagination: [{\n      type: Input\n    }],\n    treeTable: [{\n      type: Input\n    }],\n    expandedAll: [{\n      type: Input\n    }],\n    expandedLevel: [{\n      type: Input\n    }],\n    expanded: [{\n      type: Input\n    }],\n    expandTpl: [{\n      type: Input\n    }]\n  });\n})();\n/**\r\n * Table Head\r\n * @selector x-table-head\r\n * @decorator component\r\n */\n\n\nconst XTableHeadPrefix = 'x-table-head';\n/**\r\n * Table Head Property\r\n */\n\nclass XTableHeadProperty extends XProperty {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * @zh_CN 列集合\r\n     * @en_US Column set\r\n     */\n\n    this.columns = [];\n    /**\r\n     * @zh_CN 高度，单位 px\r\n     * @en_US Height in px\r\n     */\n\n    this.rowHeight = 42;\n    /**\r\n     * @zh_CN 自定义模板\r\n     * @en_US Custom template\r\n     */\n\n    this.columnTpl = {};\n  }\n\n}\n/** @nocollapse */\n\n\nXTableHeadProperty.ɵfac = /* @__PURE__ */function () {\n  let ɵXTableHeadProperty_BaseFactory;\n  return function XTableHeadProperty_Factory(t) {\n    return (ɵXTableHeadProperty_BaseFactory || (ɵXTableHeadProperty_BaseFactory = i0.ɵɵgetInheritedFactory(XTableHeadProperty)))(t || XTableHeadProperty);\n  };\n}();\n/** @nocollapse */\n\n\nXTableHeadProperty.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XTableHeadProperty,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    columns: \"columns\",\n    rowHeight: \"rowHeight\",\n    columnTpl: \"columnTpl\",\n    scrollYWidth: \"scrollYWidth\",\n    scrollXWidth: \"scrollXWidth\",\n    cellConfig: \"cellConfig\",\n    position: \"position\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function XTableHeadProperty_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n__decorate([XInputNumber()], XTableHeadProperty.prototype, \"rowHeight\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XTableHeadProperty, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], null, {\n    columns: [{\n      type: Input\n    }],\n    rowHeight: [{\n      type: Input\n    }],\n    columnTpl: [{\n      type: Input\n    }],\n    scrollYWidth: [{\n      type: Input\n    }],\n    scrollXWidth: [{\n      type: Input\n    }],\n    cellConfig: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }]\n  });\n})();\n/**\r\n * Table Body\r\n * @selector x-table-body\r\n * @decorator component\r\n */\n\n\nconst XTableBodyPrefix = 'x-table-body';\n/**\r\n * Table Body Property\r\n */\n\nclass XTableBodyProperty extends XProperty {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * @zh_CN 行数据\r\n     * @en_US Row data\r\n     */\n\n    this.data = [];\n    /**\r\n     * @zh_CN 列集合\r\n     * @en_US Column set\r\n     */\n\n    this.columns = [];\n    /**\r\n     * @zh_CN 自定义模板\r\n     * @en_US Custom template\r\n     */\n\n    this.columnTpl = {};\n    /**\r\n     * @zh_CN 当前选中行改变\r\n     * @en_US The currently selected row changes\r\n     */\n\n    this.activatedRowChange = new EventEmitter();\n    /**\r\n     * @zh_CN 高度，单位 px。设置为 0 表示行高自适应内容高度。\r\n     * @en_US Height in px. set to 0 means that the row height is adaptive to the content height\r\n     */\n\n    this.rowHeight = 42;\n    /**\r\n     * @zh_CN 允许行点击选中\r\n     * @en_US Allow row click to select\r\n     */\n\n    this.allowSelectRow = true;\n    /**\r\n     * @zh_CN 开启虚拟滚动\r\n     * @en_US Turn on virtual scrolling\r\n     */\n\n    this.virtualScroll = false;\n    /**\r\n     * @zh_CN itemSize，对应 cdk scroll 中的参数\r\n     * @en_US itemSize，corresponding to the parameters in cdk scroll\r\n     */\n\n    this.itemSize = 42;\n    /**\r\n     * @zh_CN 超出可视窗口缓冲区的最小值，对应 cdk scroll 中的参数\r\n     * @en_US Exceed the minimum value of the visible window buffer, corresponding to the parameters in cdk scroll\r\n     */\n\n    this.minBufferPx = 100;\n    /**\r\n     * @zh_CN 渲染新数据缓冲区的像素，对应 cdk scroll 中的参数\r\n     * @en_US Render the pixels of the new data buffer, corresponding to the parameters in cdk scroll\r\n     */\n\n    this.maxBufferPx = 200;\n    /**\r\n     * @zh_CN 文档高度百分比，弹窗百分比高度用到\r\n     * @en_US Document height percentage, used by pop-up window percentage height\r\n     */\n\n    this.docPercent = 1;\n    /**\r\n     * @zh_CN 树形表格下的层级\r\n     * @en_US The level under the tree table\r\n     */\n\n    this.level = 0;\n  }\n\n}\n/** @nocollapse */\n\n\nXTableBodyProperty.ɵfac = /* @__PURE__ */function () {\n  let ɵXTableBodyProperty_BaseFactory;\n  return function XTableBodyProperty_Factory(t) {\n    return (ɵXTableBodyProperty_BaseFactory || (ɵXTableBodyProperty_BaseFactory = i0.ɵɵgetInheritedFactory(XTableBodyProperty)))(t || XTableBodyProperty);\n  };\n}();\n/** @nocollapse */\n\n\nXTableBodyProperty.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XTableBodyProperty,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    data: \"data\",\n    columns: \"columns\",\n    columnTpl: \"columnTpl\",\n    activatedRow: \"activatedRow\",\n    rowHeight: \"rowHeight\",\n    bodyHeight: \"bodyHeight\",\n    allowSelectRow: \"allowSelectRow\",\n    virtualScroll: \"virtualScroll\",\n    itemSize: \"itemSize\",\n    minBufferPx: \"minBufferPx\",\n    maxBufferPx: \"maxBufferPx\",\n    adaptionHeight: \"adaptionHeight\",\n    docPercent: \"docPercent\",\n    scroll: \"scroll\",\n    cellConfig: \"cellConfig\",\n    rowClass: \"rowClass\",\n    level: \"level\",\n    expandedAll: \"expandedAll\",\n    expandTpl: \"expandTpl\"\n  },\n  outputs: {\n    activatedRowChange: \"activatedRowChange\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function XTableBodyProperty_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n__decorate([XInputNumber()], XTableBodyProperty.prototype, \"rowHeight\", void 0);\n\n__decorate([XInputNumber()], XTableBodyProperty.prototype, \"bodyHeight\", void 0);\n\n__decorate([XInputBoolean()], XTableBodyProperty.prototype, \"allowSelectRow\", void 0);\n\n__decorate([XInputBoolean()], XTableBodyProperty.prototype, \"virtualScroll\", void 0);\n\n__decorate([XInputNumber()], XTableBodyProperty.prototype, \"itemSize\", void 0);\n\n__decorate([XInputNumber()], XTableBodyProperty.prototype, \"adaptionHeight\", void 0);\n\n__decorate([XInputNumber()], XTableBodyProperty.prototype, \"docPercent\", void 0);\n\n__decorate([XInputBoolean()], XTableBodyProperty.prototype, \"expandedAll\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XTableBodyProperty, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }],\n    columnTpl: [{\n      type: Input\n    }],\n    activatedRow: [{\n      type: Input\n    }],\n    activatedRowChange: [{\n      type: Output\n    }],\n    rowHeight: [{\n      type: Input\n    }],\n    bodyHeight: [{\n      type: Input\n    }],\n    allowSelectRow: [{\n      type: Input\n    }],\n    virtualScroll: [{\n      type: Input\n    }],\n    itemSize: [{\n      type: Input\n    }],\n    minBufferPx: [{\n      type: Input\n    }],\n    maxBufferPx: [{\n      type: Input\n    }],\n    adaptionHeight: [{\n      type: Input\n    }],\n    docPercent: [{\n      type: Input\n    }],\n    scroll: [{\n      type: Input\n    }],\n    cellConfig: [{\n      type: Input\n    }],\n    rowClass: [{\n      type: Input\n    }],\n    level: [{\n      type: Input\n    }],\n    expandedAll: [{\n      type: Input\n    }],\n    expandTpl: [{\n      type: Input\n    }]\n  });\n})();\n/**\r\n * Table Foot\r\n * @selector x-table-foot\r\n * @decorator component\r\n */\n\n\nconst XTableFootPrefix = 'x-table-foot';\n/**\r\n * Table Foot Property\r\n */\n\nclass XTableFootProperty extends XProperty {}\n/** @nocollapse */\n\n\nXTableFootProperty.ɵfac = /* @__PURE__ */function () {\n  let ɵXTableFootProperty_BaseFactory;\n  return function XTableFootProperty_Factory(t) {\n    return (ɵXTableFootProperty_BaseFactory || (ɵXTableFootProperty_BaseFactory = i0.ɵɵgetInheritedFactory(XTableFootProperty)))(t || XTableFootProperty);\n  };\n}();\n/** @nocollapse */\n\n\nXTableFootProperty.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XTableFootProperty,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    footer: \"footer\",\n    rowHeight: \"rowHeight\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function XTableFootProperty_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XTableFootProperty, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], null, {\n    footer: [{\n      type: Input\n    }],\n    rowHeight: [{\n      type: Input\n    }]\n  });\n})();\n\nclass XDragDirective {\n  constructor(elementRef, document, renderer) {\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.draging = new EventEmitter();\n    this._unSubject = new Subject();\n    this.doc = document;\n  }\n\n  ngOnInit() {\n    const mouseDown = fromEvent(this.elementRef.nativeElement, 'mousedown');\n    mouseDown.subscribe(downMe => {\n      let x = downMe.pageX;\n      let y = downMe.pageY;\n      let offsetX = 0;\n      let offsetY = 0;\n\n      const _unSub = new Subject();\n\n      this.renderer.setStyle(this.doc.documentElement, 'cursor', 'ew-resize');\n      this.renderer.setStyle(this.doc.documentElement, 'user-select', 'none');\n      fromEvent(this.doc.documentElement, 'mousemove').pipe(takeUntil(_unSub)).subscribe(moveMe => {\n        offsetX = moveMe.pageX - x;\n        offsetY = moveMe.pageY - y;\n        x = moveMe.pageX;\n        y = moveMe.pageY;\n        this.draging.emit({\n          x: offsetX,\n          y: offsetY\n        });\n      });\n      fromEvent(this.doc.documentElement, 'mouseup').pipe(takeUntil(_unSub)).subscribe(() => {\n        this.renderer.removeStyle(this.doc.documentElement, 'cursor');\n        this.renderer.removeStyle(this.doc.documentElement, 'user-select');\n\n        _unSub.next();\n\n        _unSub.complete();\n      });\n    }); // fromEvent(this.elementRef.nativeElement, 'mousedown')\n    //   .pipe(\n    //     tap((mouse: MouseEvent) => {\n    //       return { startX: mouse.clientX, startY: mouse.clientY };\n    //     }),\n    //     tap((x) => {\n    //       fromEvent(this.elementRef.nativeElement, 'mousemove').pipe()\n    //     }),\n    //     takeUntil(this._unSubject)\n    //   )\n    //   .subscribe((x) => {\n    //     console.log(x);\n    //   });\n  }\n\n  ngOnDestroy() {\n    this._unSubject.next();\n\n    this._unSubject.complete();\n  }\n\n}\n/** @nocollapse */\n\n\nXDragDirective.ɵfac = function XDragDirective_Factory(t) {\n  return new (t || XDragDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n/** @nocollapse */\n\n\nXDragDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: XDragDirective,\n  selectors: [[\"\", \"xDrag\", \"\"]],\n  outputs: {\n    draging: \"draging\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XDragDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[xDrag]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    draging: [{\n      type: Output\n    }]\n  });\n})();\n\nclass XTableHeadComponent extends XTableHeadProperty {\n  constructor( // @Optional() @Host() public table: XTableComponent,\n  renderer, elementRef, cdr, configService) {\n    super();\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.cdr = cdr;\n    this.configService = configService;\n    this.sort = [];\n    this.sortStr = '';\n    this.theadStyle = {};\n  }\n\n  get getRowHeight() {\n    return this.rowHeight == 0 ? '' : this.rowHeight;\n  }\n\n  ngOnChanges(simples) {\n    const {\n      columns,\n      scrollYWidth,\n      scrollXWidth,\n      cellConfig\n    } = simples;\n    XIsChange(columns, scrollYWidth, scrollXWidth, cellConfig) && this.cdr.detectChanges();\n  }\n\n  ngOnInit() {\n    removeNgTag(this.elementRef.nativeElement);\n    this.setStyle();\n  }\n\n  ngAfterViewInit() {\n    this.table.thead.push(this.thead);\n\n    this.table.headChange = () => this.cdr.detectChanges();\n  }\n\n  getFlex(column) {\n    if (column.width) return 'none';\n    if (!column.flex) return 1;\n    return column.flex;\n  }\n\n  getColumnRight(right) {\n    if (Number(right) >= 0) {\n      if (Number(this.scrollYWidth) >= 0) {\n        return Number(right) + Number(this.scrollYWidth);\n      }\n\n      return Number(right);\n    } // return right;\n\n\n    return '';\n  }\n\n  getColumnWidth(column) {\n    // if (Number(column.right) === 0) {\n    //   if (Number(this.scrollYWidth) >= 0) {\n    //     return Number(column.width) + Number(this.scrollYWidth);\n    //   }\n    //   return column.width;\n    // }\n    return column.width;\n  }\n\n  setStyle() {\n    let height = this.rowHeight == 0 ? '' : this.rowHeight;\n\n    if (this.cellConfig && this.cellConfig.cells) {\n      const spt = this.cellConfig.cells.map(x => {\n        const gridAreaSpt = x.gridArea?.split('/');\n        return gridAreaSpt && gridAreaSpt.length > 3 ? Number(gridAreaSpt[2]) : 2;\n      });\n      height = (Math.max(...spt) - 1) * height;\n    }\n\n    this.theadStyle = {\n      height: `${height}px`,\n      ['min-height']: `${this.getRowHeight}px`\n    };\n  }\n\n  onSort(column) {\n    if (!column.sort) return;\n    if (XIsEmpty(this.sort)) this.sort = [];\n    let sort = this.sort?.find(y => y.field === column.id);\n\n    if (sort) {\n      if (sort.value === 'asc') {\n        this.sort = [];\n        this.sortStr = '';\n      } else {\n        sort.value = 'asc';\n      }\n    } else {\n      sort = {\n        field: column.id,\n        value: 'desc'\n      };\n      this.sort = [sort];\n    }\n\n    if (!XIsEmpty(this.sort)) this.sortStr = `${sort.field} ${sort.value}`;\n    this.table.checkSort(this.sort);\n    this.table.sortChange.emit(this.sort);\n    this.table.resetScroll(false, true);\n    this.cdr.detectChanges();\n  }\n\n  dragWidth(dis, column) {\n    if (column.width) {\n      column.width += dis.x;\n      if (column.width < 60) column.width = 60;\n      this.cdr.detectChanges();\n      this.table.bodyChange();\n    }\n  }\n\n  trackByItem(_index, item) {\n    return item.id;\n  }\n\n}\n/** @nocollapse */\n\n\nXTableHeadComponent.ɵfac = function XTableHeadComponent_Factory(t) {\n  return new (t || XTableHeadComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.XConfigService));\n};\n/** @nocollapse */\n\n\nXTableHeadComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XTableHeadComponent,\n  selectors: [[\"x-table-head\"]],\n  viewQuery: function XTableHeadComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.thead = _t.first);\n    }\n  },\n  inputs: {\n    table: \"table\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 10,\n  vars: 8,\n  consts: [[3, \"ngStyle\"], [\"thead\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [4, \"ngIf\"], [\"columnsTpl\", \"\"], [\"columnBaseTpl\", \"\"], [\"cloumnDefaultTpl\", \"\"], [3, \"x-table-sticky\", \"x-table-sticky-left\", \"x-table-sticky-right\", \"x-table-sticky-left-last\", \"x-table-sticky-right-first\", \"x-table-width-drag\", \"grid-area\", \"left\", \"right\", \"min-height\", \"title\", 4, \"ngFor\", \"ngForOf\"], [3, \"title\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"x-table-drag-width\", \"xDrag\", \"\", 3, \"draging\", 4, \"ngIf\"], [\"xDrag\", \"\", 1, \"x-table-drag-width\", 3, \"draging\"], [3, \"x-table-sticky\", \"x-table-sticky-left\", \"x-table-sticky-right\", \"x-table-sticky-left-last\", \"x-table-sticky-right-first\", \"min-height\", \"width\", \"left\", \"right\", \"flex\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"data\", \"ngModel\", \"indeterminate\", \"ngModelChange\", 4, \"ngIf\"], [3, \"data\", \"ngModel\", \"indeterminate\", \"ngModelChange\"], [3, \"click\"], [4, \"xOutlet\", \"xOutletContext\"], [\"type\", \"fto-bar-chart\", \"class\", \"x-table-sort-icon\", 3, \"x-table-icon-up\", \"x-table-icon-down\", 4, \"ngIf\"], [\"type\", \"fto-bar-chart\", 1, \"x-table-sort-icon\"]],\n  template: function XTableHeadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"thead\", 0, 1);\n      i0.ɵɵtemplate(2, XTableHeadComponent_ng_container_2_Template, 3, 5, \"ng-container\", 2);\n      i0.ɵɵtemplate(3, XTableHeadComponent_ng_container_3_Template, 2, 3, \"ng-container\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, XTableHeadComponent_ng_template_4_Template, 2, 12, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(6, XTableHeadComponent_ng_template_6_Template, 4, 3, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(8, XTableHeadComponent_ng_template_8_Template, 3, 9, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r3 = i0.ɵɵreference(5);\n\n      i0.ɵɵclassProp(\"x-table-head-top\", ctx.position === \"top\")(\"x-table-head-bottom\", ctx.position === \"bottom\");\n      i0.ɵɵproperty(\"ngStyle\", ctx.theadStyle);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.cellConfig)(\"ngIfElse\", _r3);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.table.headSearchTpl);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i2.NgTemplateOutlet, i2.NgStyle, i2.NgSwitch, i2.NgSwitchCase, i2.NgSwitchDefault, i3.NgControlStatus, i3.NgModel, i4.XOutletDirective, i5.XCheckboxComponent, i6.XIconComponent, XDragDirective],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XTableHeadComponent, [{\n    type: Component,\n    args: [{\n      selector: `${XTableHeadPrefix}`,\n      encapsulation: ViewEncapsulation.None,\n      template: \"<thead #thead [ngStyle]=\\\"theadStyle\\\" [class.x-table-head-top]=\\\"position === 'top'\\\" [class.x-table-head-bottom]=\\\"position === 'bottom'\\\">\\r\\n  <ng-container *ngIf=\\\"cellConfig; else columnsTpl\\\">\\r\\n    <tr [style.gridTemplateColumns]=\\\"cellConfig.gridTemplateColumns\\\" [style.min-height.px]=\\\"getRowHeight\\\">\\r\\n      <th\\r\\n        *ngFor=\\\"let column of cellConfig.cells\\\"\\r\\n        [class.x-table-sticky]=\\\"table.getStickyLeft(column) || table.getStickyRight(column)\\\"\\r\\n        [class.x-table-sticky-left]=\\\"table.getStickyLeft(column)\\\"\\r\\n        [class.x-table-sticky-right]=\\\"table.getStickyRight(column)\\\"\\r\\n        [class.x-table-sticky-left-last]=\\\"table.getStickyLeftLast(column)\\\"\\r\\n        [class.x-table-sticky-right-first]=\\\"table.getStickyRightFirst(column)\\\"\\r\\n        [class.x-table-width-drag]=\\\"column.dragWidth\\\"\\r\\n        [style.grid-area]=\\\"column.gridArea\\\"\\r\\n        [style.left.px]=\\\"column.left\\\"\\r\\n        [style.right.px]=\\\"column.right\\\"\\r\\n        [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n        [title]=\\\"column?.label\\\"\\r\\n      >\\r\\n        <ng-container *ngTemplateOutlet=\\\"columnBaseTpl; context: { column: column }\\\"></ng-container>\\r\\n        <div *ngIf=\\\"column.dragWidth\\\" class=\\\"x-table-drag-width\\\" xDrag (draging)=\\\"dragWidth($event, column)\\\"></div>\\r\\n      </th>\\r\\n    </tr>\\r\\n  </ng-container>\\r\\n  <ng-container *ngIf=\\\"table.headSearchTpl\\\">\\r\\n    <ng-container *ngTemplateOutlet=\\\"columnsTpl; context: { case: 'search' }\\\"></ng-container>\\r\\n  </ng-container>\\r\\n</thead>\\r\\n\\r\\n<ng-template #columnsTpl let-case=\\\"case\\\">\\r\\n  <tr\\r\\n    [style.height.px]=\\\"getRowHeight\\\"\\r\\n    [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n    [style.padding-right.px]=\\\"scrollYWidth\\\"\\r\\n    [style.width.px]=\\\"scrollXWidth\\\"\\r\\n    [class.x-table-search]=\\\"case === 'search'\\\"\\r\\n  >\\r\\n    <th\\r\\n      *ngFor=\\\"let column of columns; trackBy: trackByItem\\\"\\r\\n      [class.x-table-sticky]=\\\"table.getStickyLeft(column) || table.getStickyRight(column)\\\"\\r\\n      [class.x-table-sticky-left]=\\\"table.getStickyLeft(column)\\\"\\r\\n      [class.x-table-sticky-right]=\\\"table.getStickyRight(column)\\\"\\r\\n      [class.x-table-sticky-left-last]=\\\"table.getStickyLeftLast(column)\\\"\\r\\n      [class.x-table-sticky-right-first]=\\\"table.getStickyRightFirst(column)\\\"\\r\\n      [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n      [style.width.px]=\\\"getColumnWidth(column)\\\"\\r\\n      [style.left.px]=\\\"column.left\\\"\\r\\n      [style.right.px]=\\\"getColumnRight(column.right)\\\"\\r\\n      [style.flex]=\\\"getFlex(column)\\\"\\r\\n    >\\r\\n      <ng-container [ngSwitch]=\\\"case\\\">\\r\\n        <ng-container *ngSwitchCase=\\\"'search'\\\">\\r\\n          <ng-container *ngTemplateOutlet=\\\"table.headSearchTpl; context: { $column: column }\\\"></ng-container>\\r\\n        </ng-container>\\r\\n        <ng-container *ngSwitchDefault>\\r\\n          <ng-container *ngTemplateOutlet=\\\"columnBaseTpl; context: { column: column }\\\"></ng-container>\\r\\n          <div *ngIf=\\\"column.dragWidth\\\" class=\\\"x-table-drag-width\\\" xDrag (draging)=\\\"dragWidth($event, column)\\\"></div>\\r\\n        </ng-container>\\r\\n      </ng-container>\\r\\n    </th>\\r\\n  </tr>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #columnBaseTpl let-column=\\\"column\\\">\\r\\n  <ng-container [ngSwitch]=\\\"column.type\\\">\\r\\n    <ng-container *ngSwitchCase=\\\"'checkbox'\\\">\\r\\n      <x-checkbox\\r\\n        *ngIf=\\\"column.headChecked\\\"\\r\\n        [data]=\\\"[{ id: true, label: column.label }]\\\"\\r\\n        [(ngModel)]=\\\"table.checkedValues[column.id]\\\"\\r\\n        (ngModelChange)=\\\"table.headChecked($event, column)\\\"\\r\\n        [indeterminate]=\\\"table.checkedValues[column.id + table.indeterminate]\\\"\\r\\n      ></x-checkbox>\\r\\n      <ng-container *ngIf=\\\"!column.headChecked\\\">\\r\\n        <ng-container *ngTemplateOutlet=\\\"cloumnDefaultTpl; context: { column: column }\\\"></ng-container>\\r\\n      </ng-container>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'index'\\\">\\r\\n      <a>{{ column.label }}</a>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchDefault>\\r\\n      <ng-container *ngTemplateOutlet=\\\"cloumnDefaultTpl; context: { column: column }\\\"></ng-container>\\r\\n    </ng-container>\\r\\n  </ng-container>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #cloumnDefaultTpl let-column=\\\"column\\\">\\r\\n  <a [class.x-table-sort]=\\\"column.sort\\\" (click)=\\\"onSort(column)\\\" [style.text-align]=\\\"column.textAlign\\\">\\r\\n    <ng-container *xOutlet=\\\"columnTpl[column.id]; context: { $column: column }\\\">\\r\\n      {{ column.label }}\\r\\n    </ng-container>\\r\\n    <x-icon\\r\\n      *ngIf=\\\"column.sort\\\"\\r\\n      type=\\\"fto-bar-chart\\\"\\r\\n      class=\\\"x-table-sort-icon\\\"\\r\\n      [class.x-table-icon-up]=\\\"sortStr === column.id + ' desc'\\\"\\r\\n      [class.x-table-icon-down]=\\\"sortStr === column.id + ' asc'\\\"\\r\\n    ></x-icon>\\r\\n  </a>\\r\\n</ng-template>\\r\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.XConfigService\n    }];\n  }, {\n    thead: [{\n      type: ViewChild,\n      args: ['thead']\n    }],\n    table: [{\n      type: Input\n    }]\n  });\n})();\n\nclass XTableBodyComponent extends XTableBodyProperty {\n  constructor( // @Optional() @Host() public table: XTableComponent,\n  renderer, elementRef, cdr, doc, configService) {\n    super();\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.cdr = cdr;\n    this.doc = doc;\n    this.configService = configService;\n    this.tbodyStyle = {};\n    this._unSubject = new Subject();\n  }\n\n  get isEmpty() {\n    return this.data?.length === 0;\n  }\n\n  get getRowHeight() {\n    return this.rowHeight == 0 ? '' : this.rowHeight;\n  }\n\n  get getItemSize() {\n    return this.rowHeight !== 0 && this.itemSize > this.rowHeight ? this.rowHeight : this.itemSize;\n  }\n\n  ngOnChanges(simples) {\n    const {\n      data,\n      columns,\n      activatedRow,\n      mergeRule,\n      expandedAll\n    } = simples;\n    XIsChange(data, columns, activatedRow, mergeRule, expandedAll) && this.cdr.detectChanges();\n  }\n\n  ngOnInit() {\n    removeNgTag(this.elementRef.nativeElement);\n    if (this.level > 0) removeNgTag(this.tbody.nativeElement);\n\n    if (this.scroll?.y && !this.bodyHeight) {\n      this.bodyHeight = this.scroll.y;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.table.virtualBody = this.virtualBody;\n\n    this.table.bodyChange = () => this.cdr.detectChanges();\n\n    this.setSubject();\n    this.setScroll();\n  }\n\n  ngOnDestroy() {\n    this._unSubject.next();\n\n    this._unSubject.unsubscribe();\n\n    this._resizeObserver?.disconnect();\n  }\n\n  setSubject() {\n    if (this.virtualBody) {\n      this.table.scrollContentEle = this.virtualBody?.elementRef?.nativeElement.querySelector('.cdk-virtual-scroll-content-wrapper');\n\n      if (this.scroll?.x) {\n        this.renderer.setStyle(this.table.scrollContentEle, 'width', `${this.scroll.x}px`);\n      }\n\n      XResize(this.table.table.nativeElement, this.table.scrollContentEle).pipe(takeUntil(this._unSubject)).subscribe(x => {\n        this._resizeObserver = x.resizeObserver;\n        this.setAdaptionHeight();\n        this.setScroll();\n      });\n      fromEvent(window, 'resize').pipe(takeUntil(this._unSubject)).subscribe(() => {\n        this.setAdaptionHeight();\n      });\n    }\n\n    if (this.table.scrollContentEle) {\n      fromEvent(this.virtualBody.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._unSubject)).subscribe(x => {\n        const ele = x.srcElement;\n        this.table.scrollTop = ele.scrollTop;\n        this.table.scrollLeft = ele.scrollLeft;\n\n        if (ele.scrollLeft >= 0 && this.table.thead.length > 0) {\n          for (let thead of this.table.thead) {\n            thead.nativeElement.scrollLeft = this.table.scrollLeft;\n          }\n        }\n\n        this.table.scrollLeftMax = ele.scrollLeft + ele.clientWidth === ele.scrollWidth;\n        this.table.cdr.detectChanges();\n      });\n    }\n  }\n\n  setScroll() {\n    if (!this.virtualBody) return;\n    const ele = this.virtualBody.elementRef.nativeElement;\n    const hasY = ele.scrollHeight > this.bodyHeight;\n    const hasX = this.table.scrollContentEle.clientWidth > ele.clientWidth;\n\n    if (!this.table.hasScrollY && hasY) {\n      this.table.hasScrollY = true;\n      this.table.scrollYWidth = ele.offsetWidth - ele.clientWidth;\n    } else if (this.table.hasScrollY && !hasY) {\n      this.table.hasScrollY = false;\n      this.table.scrollYWidth = 0;\n    }\n\n    if (!this.table.hasScrollX && hasX) {\n      this.table.hasScrollX = true;\n      this.table.scrollXHeight = ele.offsetHeight - ele.clientHeight;\n    } else if (this.table.hasScrollX && !hasX) {\n      this.table.hasScrollX = false;\n      this.table.scrollXHeight = 0;\n      this.table.scrollXWidth = null;\n    }\n\n    if (hasX) {\n      this.table.scrollXWidth = ele.offsetWidth + ele.scrollWidth - ele.clientWidth;\n    }\n\n    this.table.cdr.detectChanges();\n  }\n\n  setStyle() {\n    let height = this.rowHeight == 0 ? '' : this.rowHeight;\n\n    if (this.cellConfig && this.cellConfig.cells) {\n      const spt = this.cellConfig.cells.map(x => {\n        const gridAreaSpt = x.gridArea?.split('/');\n        return gridAreaSpt && gridAreaSpt.length > 3 ? Number(gridAreaSpt[2]) : 2;\n      });\n      height = (Math.max(...spt) - 1) * height;\n    }\n\n    this.tbodyStyle = {\n      height: `${height}px`\n    };\n  }\n\n  getIndex(index, item) {\n    if (!isNaN(index)) return index;\n    return this.data.indexOf(item);\n  }\n\n  getFlex(column) {\n    if (column.width) return 'none';\n    if (!column.flex) return 1;\n    return column.flex;\n  }\n\n  getTitle(row, column) {\n    let it = row[column.id];\n    return it ? stripTags(it) : '';\n  }\n\n  setAdaptionHeight() {\n    if (this.adaptionHeight > 0) {\n      const captionHeight = this.table.tcaption?.nativeElement.clientHeight || 0;\n      let headHeight = 0;\n\n      for (let thead of this.table.thead) {\n        headHeight += thead.nativeElement.clientHeight;\n      }\n\n      const footHeight = this.table.tfoot?.nativeElement.clientHeight || 0;\n      const paginationHeight = this.table.pagination?.elementRef.nativeElement.clientHeight || 0;\n      this.bodyHeight = Number(this.docPercent) * this.doc.documentElement.clientHeight - captionHeight - headHeight - footHeight - paginationHeight - Number(this.adaptionHeight);\n      if (this.bodyHeight < 0) this.bodyHeight = 0;\n      this.minBufferPx = this.bodyHeight;\n      this.maxBufferPx = this.bodyHeight * 1.2;\n      this.virtualBody['_scrollStrategy']['_minBufferPx'] = this.minBufferPx;\n      this.virtualBody['_scrollStrategy']['_maxBufferPx'] = this.maxBufferPx;\n      this.cdr.detectChanges();\n    }\n  }\n\n  rowClick(event, row) {\n    this.activatedRow = row;\n\n    if (this.table.allowCheckRow && this.table.rowChecked) {\n      if (!Array.from(event.path).find(x => x.localName == 'x-checkbox')) {\n        row[this.table.rowChecked.id] = !row[this.table.rowChecked.id];\n        this.table.bodyChecked(row[this.table.rowChecked.id], this.table.rowChecked);\n      }\n    }\n\n    this.activatedRowChange.emit(row);\n    this.cdr.detectChanges();\n  }\n\n  onExpanded(_event, node) {\n    node.expanded = !node.expanded;\n    this.cdr.detectChanges();\n  }\n\n  trackByItem(_index, item) {\n    return item.id;\n  }\n\n}\n/** @nocollapse */\n\n\nXTableBodyComponent.ɵfac = function XTableBodyComponent_Factory(t) {\n  return new (t || XTableBodyComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i1.XConfigService));\n};\n/** @nocollapse */\n\n\nXTableBodyComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XTableBodyComponent,\n  selectors: [[\"x-table-body\"]],\n  viewQuery: function XTableBodyComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c6, 5);\n      i0.ɵɵviewQuery(_c7, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tbody = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.virtualBody = _t.first);\n    }\n  },\n  inputs: {\n    table: \"table\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 14,\n  vars: 3,\n  consts: [[\"tbody\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [4, \"ngIf\"], [\"virtualScrollTpl\", \"\"], [\"bodyTpl\", \"\"], [\"rowTpl\", \"\"], [\"rowDefault\", \"\"], [\"cellTpl\", \"\"], [3, \"gridTemplateColumns\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"title\", \"x-table-sticky\", \"x-table-sticky-left\", \"x-table-sticky-right\", \"x-table-sticky-left-last\", \"x-table-sticky-right-first\", \"left\", \"right\", \"grid-area\", 4, \"ngFor\", \"ngForOf\"], [3, \"title\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"itemSize\", \"minBufferPx\", \"maxBufferPx\", \"height\", 4, \"ngIf\", \"ngIfElse\"], [3, \"itemSize\", \"minBufferPx\", \"maxBufferPx\"], [\"virtualBody\", \"\"], [3, \"x-table-activated\", \"height\", \"min-height\", \"click\", 4, \"cdkVirtualFor\", \"cdkVirtualForOf\", \"cdkVirtualForTrackBy\"], [3, \"click\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"class\", \"x-table-children\", 3, \"x-table-expandTpl\", 4, \"ngIf\"], [1, \"x-table-children\"], [3, \"data\", \"columns\", \"itemSize\", \"rowHeight\", \"columnTpl\", \"allowSelectRow\", \"rowClass\", \"cellConfig\", \"activatedRow\", \"expandedAll\", \"expandTpl\", \"level\", \"table\", \"activatedRowChange\"], [4, \"xOutlet\", \"xOutletContext\"], [3, \"title\", \"ngClass\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"data\", \"ngModel\", \"ngModelChange\"], [\"icon\", \"fto-chevron-right\", \"size\", \"mini\", \"onlyIcon\", \"\", 1, \"x-table-expand\", 3, \"click\"], [3, \"innerHTML\"]],\n  template: function XTableBodyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"tbody\", null, 0);\n      i0.ɵɵtemplate(2, XTableBodyComponent_ng_container_2_Template, 2, 2, \"ng-container\", 1);\n      i0.ɵɵtemplate(3, XTableBodyComponent_x_empty_3_Template, 1, 0, \"x-empty\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, XTableBodyComponent_ng_template_4_Template, 1, 2, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(6, XTableBodyComponent_ng_template_6_Template, 1, 2, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(8, XTableBodyComponent_ng_template_8_Template, 2, 2, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(10, XTableBodyComponent_ng_template_10_Template, 1, 2, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(12, XTableBodyComponent_ng_template_12_Template, 4, 3, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r3 = i0.ɵɵreference(5);\n\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.cellConfig)(\"ngIfElse\", _r3);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isEmpty && ctx.level === 0);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i2.NgTemplateOutlet, i2.NgSwitch, i2.NgSwitchCase, i2.NgSwitchDefault, i3.NgControlStatus, i3.NgModel, i4.XOutletDirective, i5.XCheckboxComponent, i6$1.XButtonComponent, i7.CdkFixedSizeVirtualScroll, i7.CdkVirtualForOf, i7.CdkVirtualScrollViewport, i8.XEmptyComponent, XTableBodyComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XTableBodyComponent, [{\n    type: Component,\n    args: [{\n      selector: `${XTableBodyPrefix}`,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<tbody #tbody>\\r\\n  <ng-container *ngIf=\\\"cellConfig; else virtualScrollTpl\\\">\\r\\n    <tr *ngFor=\\\"let row of data; index as i; trackBy: trackByItem\\\" [style.gridTemplateColumns]=\\\"cellConfig.gridTemplateColumns\\\">\\r\\n      <td\\r\\n        *ngFor=\\\"let column of cellConfig.cells; index as j\\\"\\r\\n        [title]=\\\"getTitle(row, column)\\\"\\r\\n        [class.x-table-sticky]=\\\"table.getStickyLeft(column) || table.getStickyRight(column)\\\"\\r\\n        [class.x-table-sticky-left]=\\\"table.getStickyLeft(column)\\\"\\r\\n        [class.x-table-sticky-right]=\\\"table.getStickyRight(column)\\\"\\r\\n        [class.x-table-sticky-left-last]=\\\"table.getStickyLeftLast(column)\\\"\\r\\n        [class.x-table-sticky-right-first]=\\\"table.getStickyRightFirst(column)\\\"\\r\\n        [style.left.px]=\\\"column.left\\\"\\r\\n        [style.right.px]=\\\"column.right\\\"\\r\\n        [style.grid-area]=\\\"column.gridArea\\\"\\r\\n      >\\r\\n        <ng-container *ngTemplateOutlet=\\\"cellTpl; context: { column: column, row: row, i: i }\\\"></ng-container>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </ng-container>\\r\\n  <x-empty *ngIf=\\\"isEmpty && level === 0\\\"></x-empty>\\r\\n</tbody>\\r\\n\\r\\n<ng-template #virtualScrollTpl>\\r\\n  <cdk-virtual-scroll-viewport\\r\\n    #virtualBody\\r\\n    *ngIf=\\\"virtualScroll; else bodyTpl\\\"\\r\\n    [itemSize]=\\\"getItemSize\\\"\\r\\n    [minBufferPx]=\\\"minBufferPx\\\"\\r\\n    [maxBufferPx]=\\\"maxBufferPx\\\"\\r\\n    [style.height.px]=\\\"bodyHeight\\\"\\r\\n  >\\r\\n    <tr\\r\\n      *cdkVirtualFor=\\\"let row of data; let index = index; trackBy: trackByItem\\\"\\r\\n      [class.x-table-activated]=\\\"allowSelectRow && activatedRow?.id === row.id\\\"\\r\\n      [style.height.px]=\\\"getRowHeight\\\"\\r\\n      [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n      (click)=\\\"rowClick($event, row)\\\"\\r\\n    >\\r\\n      <!-- rowHeight \\u4E3A 0 \\u7684\\u65F6\\u5019\\uFF0Cindex \\u4E0B\\u6807\\u83B7\\u53D6\\u4E0D\\u5230 -->\\r\\n      <ng-container *ngTemplateOutlet=\\\"rowTpl; context: { row: row, i: getIndex(index, row) }\\\"></ng-container>\\r\\n    </tr>\\r\\n  </cdk-virtual-scroll-viewport>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #bodyTpl>\\r\\n  <ng-container *ngFor=\\\"let row of data; index as i; trackBy: trackByItem\\\">\\r\\n    <tr\\r\\n      [class.x-table-activated]=\\\"allowSelectRow && activatedRow?.id === row.id\\\"\\r\\n      [style.height.px]=\\\"getRowHeight\\\"\\r\\n      [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n      (click)=\\\"rowClick($event, row)\\\"\\r\\n    >\\r\\n      <ng-container *ngTemplateOutlet=\\\"rowTpl; context: { row: row, i: i }\\\"></ng-container>\\r\\n    </tr>\\r\\n    <div class=\\\"x-table-children\\\" [class.x-table-expandTpl]=\\\"expandTpl\\\" *ngIf=\\\"table.treeTable && row.children && row.expanded\\\">\\r\\n      <x-table-body\\r\\n        [data]=\\\"row.children\\\"\\r\\n        [columns]=\\\"table.columns\\\"\\r\\n        [itemSize]=\\\"table.itemSize\\\"\\r\\n        [rowHeight]=\\\"table.rowHeight\\\"\\r\\n        [columnTpl]=\\\"table.bodyColumnTpl\\\"\\r\\n        [allowSelectRow]=\\\"table.allowSelectRow\\\"\\r\\n        [rowClass]=\\\"table.rowClass\\\"\\r\\n        [cellConfig]=\\\"table.cellConfig?.tbody\\\"\\r\\n        [(activatedRow)]=\\\"table.activatedRow\\\"\\r\\n        [expandedAll]=\\\"expandedAll\\\"\\r\\n        [expandTpl]=\\\"expandTpl\\\"\\r\\n        (activatedRowChange)=\\\"table.activatedRowChange.emit($event)\\\"\\r\\n        [level]=\\\"row.level! + 1\\\"\\r\\n        [table]=\\\"table\\\"\\r\\n      ></x-table-body>\\r\\n    </div>\\r\\n  </ng-container>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #rowTpl let-row=\\\"row\\\" let-i=\\\"i\\\">\\r\\n  <ng-container *ngIf=\\\"level > 0 && expandTpl\\\">\\r\\n    <ng-container *xOutlet=\\\"expandTpl; context: { $row: row, $index: i, $level: level }\\\"></ng-container>\\r\\n  </ng-container>\\r\\n  <ng-container *ngIf=\\\"level === 0 || !expandTpl\\\">\\r\\n    <ng-container *xOutlet=\\\"rowDefault; context: { row: row, i: i, level: level }\\\"></ng-container>\\r\\n  </ng-container>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #rowDefault let-row=\\\"row\\\" let-i=\\\"i\\\">\\r\\n  <ng-container *ngFor=\\\"let column of columns; index as j; trackBy: trackByItem\\\">\\r\\n    <td\\r\\n      [style.width.px]=\\\"column.width\\\"\\r\\n      [style.flex]=\\\"getFlex(column)\\\"\\r\\n      [title]=\\\"getTitle(row, column)\\\"\\r\\n      [class.x-table-sticky]=\\\"table.getStickyLeft(column) || table.getStickyRight(column)\\\"\\r\\n      [class.x-table-sticky-left]=\\\"table.getStickyLeft(column)\\\"\\r\\n      [class.x-table-sticky-right]=\\\"table.getStickyRight(column)\\\"\\r\\n      [class.x-table-sticky-left-last]=\\\"table.getStickyLeftLast(column)\\\"\\r\\n      [class.x-table-sticky-right-first]=\\\"table.getStickyRightFirst(column)\\\"\\r\\n      [style.left.px]=\\\"column.left\\\"\\r\\n      [style.right.px]=\\\"column.right\\\"\\r\\n      [ngClass]=\\\"!rowClass ? {} : rowClass(row, i)\\\"\\r\\n    >\\r\\n      <ng-template *ngTemplateOutlet=\\\"cellTpl; context: { column: column, row: row, i: i }\\\"></ng-template>\\r\\n    </td>\\r\\n  </ng-container>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #cellTpl let-column=\\\"column\\\" let-row=\\\"row\\\" let-i=\\\"i\\\">\\r\\n  <ng-container [ngSwitch]=\\\"column.type\\\">\\r\\n    <ng-container *ngSwitchCase=\\\"'checkbox'\\\">\\r\\n      <x-checkbox\\r\\n        [data]=\\\"[{ id: true, label: '' }]\\\"\\r\\n        [(ngModel)]=\\\"row[column.id]\\\"\\r\\n        (ngModelChange)=\\\"table.bodyChecked($event, column)\\\"\\r\\n      ></x-checkbox>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'index'\\\">\\r\\n      <div>{{ table.getIndex(i) }}</div>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchDefault>\\r\\n      <ng-container *ngIf=\\\"table.isExpandColumn(column)\\\">\\r\\n        <x-button\\r\\n          [class.is-leaf]=\\\"!row.leaf\\\"\\r\\n          [class.is-expanded]=\\\"row.expanded\\\"\\r\\n          (click)=\\\"onExpanded($event, row)\\\"\\r\\n          icon=\\\"fto-chevron-right\\\"\\r\\n          size=\\\"mini\\\"\\r\\n          onlyIcon\\r\\n          class=\\\"x-table-expand\\\"\\r\\n          [style.margin-left.rem]=\\\"row.level - 0.5\\\"\\r\\n        ></x-button>\\r\\n      </ng-container>\\r\\n      <ng-container *xOutlet=\\\"columnTpl[column.id]; context: { $column: column, $row: row, $index: table.getIndex(i) }\\\">\\r\\n        <ng-container *xOutlet=\\\"table.bodyTdTpl; context: { $column: column, $row: row, $index: table.getIndex(i) }\\\">\\r\\n          <div [innerHTML]=\\\"row[column.id]\\\" [style.text-align]=\\\"column.textAlign\\\"></div>\\r\\n          {{ table.rowExpandNext && table.rowExpandNext.id === column.id ? 'x-table-body-level-' + row.level : '' }}\\r\\n        </ng-container>\\r\\n      </ng-container>\\r\\n    </ng-container>\\r\\n  </ng-container>\\r\\n</ng-template>\\r\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i1.XConfigService\n    }];\n  }, {\n    tbody: [{\n      type: ViewChild,\n      args: ['tbody']\n    }],\n    virtualBody: [{\n      type: ViewChild,\n      args: ['virtualBody']\n    }],\n    table: [{\n      type: Input\n    }]\n  });\n})();\n\nclass XTableFootComponent extends XTableFootProperty {\n  constructor( // @Optional() @Host() public table: XTableComponent,\n  renderer, elementRef, cdr) {\n    super();\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.cdr = cdr;\n  }\n\n  get getRowHeight() {\n    return this.rowHeight == 0 ? '' : this.rowHeight;\n  }\n\n  ngOnInit() {\n    removeNgTag(this.elementRef.nativeElement);\n  }\n\n  ngAfterViewInit() {\n    this.table.tfoot = this.tfoot;\n  }\n\n}\n/** @nocollapse */\n\n\nXTableFootComponent.ɵfac = function XTableFootComponent_Factory(t) {\n  return new (t || XTableFootComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n/** @nocollapse */\n\n\nXTableFootComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XTableFootComponent,\n  selectors: [[\"x-table-foot\"]],\n  viewQuery: function XTableFootComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c15, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tfoot = _t.first);\n    }\n  },\n  inputs: {\n    table: \"table\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 5,\n  consts: [[1, \"x-table-footer\"], [\"tfoot\", \"\"], [4, \"xOutlet\"]],\n  template: function XTableFootComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"tfoot\", 0, 1);\n      i0.ɵɵtemplate(2, XTableFootComponent_ng_container_2_Template, 2, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"height\", ctx.getRowHeight, \"px\")(\"min-height\", ctx.getRowHeight, \"px\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"xOutlet\", ctx.footer);\n    }\n  },\n  dependencies: [i4.XOutletDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XTableFootComponent, [{\n    type: Component,\n    args: [{\n      selector: `${XTableFootPrefix}`,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<tfoot #tfoot class=\\\"x-table-footer\\\" [style.height.px]=\\\"getRowHeight\\\" [style.min-height.px]=\\\"getRowHeight\\\">\\r\\n  <ng-container *xOutlet=\\\"footer\\\">{{ footer }}</ng-container>\\r\\n</tfoot>\\r\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    tfoot: [{\n      type: ViewChild,\n      args: ['tfoot']\n    }],\n    table: [{\n      type: Input\n    }]\n  });\n})();\n\nclass XTableComponent extends XTableProperty {\n  constructor(renderer, elementRef, cdr, configService) {\n    super();\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.cdr = cdr;\n    this.configService = configService;\n    this.thead = [];\n    this.hasScrollY = false;\n    this.scrollYWidth = 0;\n    this.hasScrollX = false;\n    this.scrollXHeight = 0;\n    this.scrollLeft = 0;\n    this.scrollLeftMax = false;\n    this.scrollTop = 0;\n    this.dataIsFunc = false;\n    this.getting = false;\n    this.tableData = [];\n    this.treeTableData = [];\n    this.checkedValues = {};\n    this.indeterminate = '$$indeterminate';\n    this._unSubject = new Subject();\n  }\n\n  get getScrollLeft() {\n    return this.scrollLeft > 0;\n  }\n\n  get getScrollTop() {\n    return this.scrollTop > 0;\n  }\n\n  get getRowHeight() {\n    return this.rowHeight == 0 ? '' : this.rowHeight;\n  }\n\n  get getStickyTopScrollTop() {\n    return this.tcaption ? this.tcaption.nativeElement.offsetHeight : 0;\n  }\n\n  get getStickyBottomScrollTop() {\n    let top = 0;\n\n    if (this.footer && this.tfoot) {\n      top += this.tfoot?.nativeElement.clientHeight + 1;\n    }\n\n    return top;\n  }\n\n  get getStickyTopRightEleHeight() {\n    if (this.stickyTopRightEle) {\n      return this.stickyTopRightEle.nativeElement.offsetHeight;\n    } else {\n      return 0;\n    }\n  }\n\n  get getStickyBottomRightEleHeight() {\n    if (this.stickyBottomRightEle) {\n      return this.stickyBottomRightEle.nativeElement.offsetHeight;\n    } else {\n      return 0;\n    }\n  }\n\n  ngOnInit() {\n    this.setClassMap();\n    this.setRowChecked();\n    this.setRowExpand();\n    this.setMerge();\n    this.setPaginationPosition();\n  }\n\n  ngOnChanges(simples) {\n    const {\n      data,\n      checkedRow,\n      columns,\n      activatedRow,\n      manual,\n      showPagination,\n      expandedAll\n    } = simples;\n    XIsChange(expandedAll) && this.setExpandedAll();\n    XIsChange(data, checkedRow) && this.setData();\n    XIsChange(columns, activatedRow, showPagination) && this.cdr.detectChanges();\n    XIsChange(manual) && this.setManual();\n  }\n\n  ngOnDestroy() {\n    this._unSubject.next();\n\n    this._unSubject.complete();\n  }\n\n  ngAfterViewInit() {\n    this.tcaption = this.caption;\n  }\n\n  setClassMap() {\n    this.classMap = {\n      [`${XTablePrefix}-row-size-${this.rowSize}`]: !XIsEmpty(this.rowSize)\n    };\n    this.cdr.detectChanges();\n  }\n\n  setPaginationPosition() {\n    this.renderer.addClass(this.elementRef.nativeElement, `x-table-${this.paginationPosition}`);\n  }\n\n  getStickyLeft(column) {\n    return Number(column.left) >= 0;\n  }\n\n  getStickyLeftLast(column) {\n    let lefts = this.columns.filter(x => Number(x.left) >= 0);\n    if (lefts.length === 0) return false;\n    return lefts[lefts.length - 1].id === column.id;\n  }\n\n  getStickyRight(column) {\n    return Number(column.right) >= 0;\n  }\n\n  getStickyRightFirst(column) {\n    let rights = this.columns.filter(x => Number(x.right) >= 0);\n    if (rights.length === 0) return false;\n    return rights[0].id === column.id;\n  }\n\n  hasStickyTopRight() {\n    return this.showHeader && (this.headerPosition === 'top' || this.headerPosition === 'top-bottom') && this.columns.some(x => Number(x.right) >= 0);\n  }\n\n  hasStickyTopRightSearch() {\n    return this.headSearchTpl ? true : false;\n  }\n\n  hasStickyBottomRight() {\n    return this.showHeader && (this.headerPosition === 'bottom' || this.headerPosition === 'top-bottom') && this.columns.some(x => Number(x.right) >= 0);\n  }\n\n  getIndex(index) {\n    return (Number(this.index) - 1) * Number(this.size) + index + 1;\n  }\n\n  setData() {\n    if (Array.isArray(this.data)) {\n      this.dataIsFunc = false;\n      this.setChecked(this.data);\n      this.setHeadCheckboxList(this.data);\n      this.setExpand(this.data);\n      this.setHeadExpandList();\n      this.tableData = this.data;\n      this.detectChanges();\n    } else if (this.data instanceof Function) {\n      this.dataIsFunc = true;\n      this.getDataByFunc();\n    }\n  }\n\n  getDataByFunc() {\n    if (!this.manual) return;\n    this.getting = true;\n    this.cdr.detectChanges();\n\n    this._unSubject.next();\n\n    this.data(this.index, this.size, this.query).pipe(takeUntil(this._unSubject)).subscribe(x => {\n      let [data, total] = [x.list, x.total];\n\n      if (this.virtualBody) {\n        this.virtualBody.scrollToIndex(0);\n        this.virtualBody.checkViewportSize();\n      }\n\n      this.getting = false;\n      this.setChecked(data);\n      this.setHeadCheckboxList(data);\n      this.setExpand(data);\n      this.setHeadExpandList();\n      this.tableData = data;\n      this.total = total;\n      this.detectChanges();\n    });\n  }\n\n  setManual() {\n    if (this.dataIsFunc) this.getDataByFunc();\n  }\n\n  setRowChecked() {\n    this.rowChecked = this.columns.find(x => x.rowChecked);\n    this.headCheckboxList = this.columns.filter(x => x.type === 'checkbox' && x.headChecked);\n  }\n\n  setRowExpand() {\n    this.rowExpand = this.columns.find(x => x.rowExpand);\n  }\n\n  isExpandColumn(column) {\n    let expandColumn = this.columns.find(x => x.id === column.id && x.type === 'expand');\n\n    if (expandColumn) {\n      return true;\n    }\n\n    return false;\n  }\n\n  setMerge() {\n    if (!this.cellConfig) return;\n\n    const setRule = rule => {\n      if (!rule) return;\n      let gridTemplateColumns = '',\n          cells = [];\n\n      if (!rule.gridTemplateColumns) {\n        gridTemplateColumns = `${this.columns.map(x => {\n          if (x.width) return x.width;\n          if (x.flex) return `${x.flex}fr`;\n          return '1fr';\n        }).join(' ')}`;\n      }\n\n      if (!rule.cells) return;\n      cells = rule.cells.map(y => {\n        const col = this.columns.find(z => z.id === y.id);\n\n        if (col) {\n          return { ...col,\n            ...y\n          };\n        }\n\n        return y;\n      });\n      return {\n        gridTemplateColumns,\n        cells\n      };\n    };\n\n    this.cellConfig.thead = setRule(this.cellConfig.thead);\n    this.cellConfig.tbody = setRule(this.cellConfig.tbody);\n  }\n\n  change(index) {\n    this.index = index;\n    this.dataIsFunc && this.getDataByFunc();\n    this.indexChange.emit(index);\n    this.resetScroll();\n  }\n\n  resetScroll(x = true, y = true) {\n    if (this.hasScrollX && x) this.virtualBody?.scrollTo({\n      left: 0\n    });\n    if (this.hasScrollY && y) this.virtualBody?.scrollTo({\n      top: 0\n    });\n  }\n\n  setChecked(data) {\n    let result = [];\n    if (XIsEmpty(data) || !this.checkedRow) return;\n\n    for (let key in this.checkedRow) {\n      const arr = this.checkedRow[key];\n\n      for (let item of data) {\n        item[key] = arr.includes(item.id);\n        result = [...result, item];\n      }\n    }\n\n    if (result.length > 0) data = [...result];\n  }\n\n  setHeadCheckboxList(data) {\n    if (XIsEmpty(data) || !this.headCheckboxList) return;\n\n    for (let column of this.headCheckboxList) {\n      this.setCheckedValues(column);\n    }\n  }\n\n  setExpand(data) {\n    const getChildren = (node, level) => {\n      node.level = level;\n      node.expanded = Boolean(this.expandedAll) || level <= this.expandedLevel || this.expanded.includes(node.id);\n      if (XIsUndefined(node.children)) node.children = data.filter(y => y.pid === node.id);\n      if (XIsUndefined(node.leaf)) node.leaf = node.children?.length > 0;\n      if (node.leaf) node.children?.map(y => getChildren(y, level + 1));\n      return node;\n    };\n\n    this.treeTableData = data.filter(x => XIsEmpty(x.pid)).map((x, index) => {\n      if (XIsUndefined(x.id)) x.id = index + 1;\n      return getChildren(x, 0);\n    });\n  }\n\n  setExpandedAll() {\n    if (!this.treeTable || this.treeTableData?.length === 0) return;\n\n    const setChildren = nodes => {\n      if (XIsEmpty(nodes)) return;\n      nodes.forEach(x => {\n        x.expanded = Boolean(this.expandedAll);\n        setChildren(x.children);\n      });\n    };\n\n    setChildren(this.treeTableData);\n    this.detectChanges();\n  }\n\n  setHeadExpandList() {}\n\n  checkSort(sort) {\n    if (!this.dataIsFunc) return;\n    if (typeof this.query === 'undefined') this.query = {};\n    this.query.sort = sort;\n    this.queryChange.emit(this.query);\n    this.getDataByFunc();\n  }\n\n  headChecked(checked, column) {\n    this.tableData.forEach(x => {\n      x[column.id] = checked;\n    });\n    this.setCheckedValues(column);\n    this.detectChanges();\n  }\n\n  bodyChecked(_checked, column) {\n    this.setCheckedValues(column);\n    this.detectChanges();\n  }\n\n  setCheckedValues(column) {\n    const count = this.tableData.length;\n    const checkedLen = this.tableData.filter(x => x[column.id]).length;\n    this.checkedValues[column.id] = count === checkedLen;\n    this.checkedValues[column.id + this.indeterminate] = checkedLen > 0 && checkedLen < count;\n  }\n\n  detectChanges() {\n    this.bodyChange && this.bodyChange();\n    this.headChange && this.headChange();\n    this.cdr.detectChanges();\n  }\n\n}\n/** @nocollapse */\n\n\nXTableComponent.ɵfac = function XTableComponent_Factory(t) {\n  return new (t || XTableComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.XConfigService));\n};\n/** @nocollapse */\n\n\nXTableComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XTableComponent,\n  selectors: [[\"x-table\"]],\n  viewQuery: function XTableComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c16, 5);\n      i0.ɵɵviewQuery(_c17, 5);\n      i0.ɵɵviewQuery(_c18, 5);\n      i0.ɵɵviewQuery(_c19, 5);\n      i0.ɵɵviewQuery(_c20, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.table = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.caption = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.pagination = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stickyTopRightEle = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stickyBottomRightEle = _t.first);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 12,\n  vars: 46,\n  consts: [[1, \"x-table\", 3, \"ngClass\", \"x-loading\"], [\"table\", \"\"], [\"class\", \"x-table-header\", 3, \"height\", \"min-height\", 4, \"ngIf\"], [3, \"columns\", \"rowHeight\", \"columnTpl\", \"scrollYWidth\", \"scrollXWidth\", \"cellConfig\", \"position\", \"table\", 4, \"ngIf\"], [3, \"data\", \"columns\", \"itemSize\", \"rowHeight\", \"bodyHeight\", \"columnTpl\", \"allowSelectRow\", \"virtualScroll\", \"minBufferPx\", \"maxBufferPx\", \"adaptionHeight\", \"docPercent\", \"scroll\", \"rowClass\", \"cellConfig\", \"expandedAll\", \"expandTpl\", \"activatedRow\", \"table\", \"activatedRowChange\"], [3, \"table\", \"footer\", \"rowHeight\", 4, \"ngIf\"], [\"class\", \"x-table-sticky-right-scroll\", 3, \"x-table-border-bottom\", \"top\", \"width\", \"height\", \"min-height\", 4, \"ngIf\"], [\"class\", \"x-table-sticky-right-scroll\", 3, \"top\", \"width\", \"height\", \"min-height\", 4, \"ngIf\"], [\"class\", \"x-table-sticky-right-scroll\", 3, \"bottom\", \"width\", \"height\", \"min-height\", 4, \"ngIf\"], [\"class\", \"x-table-sticky-right-scroll\", 3, \"x-table-border-bottom\", \"bottom\", \"width\", \"height\", \"min-height\", 4, \"ngIf\"], [3, \"index\", \"size\", \"query\", \"total\", \"showEllipsis\", \"showTotal\", \"space\", \"hiddenBorder\", \"indexChange\", \"sizeChange\", \"queryChange\", 4, \"ngIf\"], [1, \"x-table-header\"], [\"caption\", \"\"], [4, \"xOutlet\"], [3, \"columns\", \"rowHeight\", \"columnTpl\", \"scrollYWidth\", \"scrollXWidth\", \"cellConfig\", \"position\", \"table\"], [3, \"table\", \"footer\", \"rowHeight\"], [1, \"x-table-sticky-right-scroll\"], [\"stickyTopRightEle\", \"\"], [\"stickyBottomRightEle\", \"\"], [3, \"index\", \"size\", \"query\", \"total\", \"showEllipsis\", \"showTotal\", \"space\", \"hiddenBorder\", \"indexChange\", \"sizeChange\", \"queryChange\"], [\"pagination\", \"\"]],\n  template: function XTableComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\", 0, 1);\n      i0.ɵɵtemplate(2, XTableComponent_caption_2_Template, 3, 5, \"caption\", 2);\n      i0.ɵɵtemplate(3, XTableComponent_x_table_head_3_Template, 1, 8, \"x-table-head\", 3);\n      i0.ɵɵelementStart(4, \"x-table-body\", 4);\n      i0.ɵɵlistener(\"activatedRowChange\", function XTableComponent_Template_x_table_body_activatedRowChange_4_listener($event) {\n        return ctx.activatedRow = $event;\n      })(\"activatedRowChange\", function XTableComponent_Template_x_table_body_activatedRowChange_4_listener($event) {\n        return ctx.activatedRowChange.emit($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, XTableComponent_x_table_head_5_Template, 1, 8, \"x-table-head\", 3);\n      i0.ɵɵtemplate(6, XTableComponent_x_table_foot_6_Template, 1, 3, \"x-table-foot\", 5);\n      i0.ɵɵtemplate(7, XTableComponent_div_7_Template, 2, 10, \"div\", 6);\n      i0.ɵɵtemplate(8, XTableComponent_div_8_Template, 1, 8, \"div\", 7);\n      i0.ɵɵtemplate(9, XTableComponent_div_9_Template, 2, 8, \"div\", 8);\n      i0.ɵɵtemplate(10, XTableComponent_div_10_Template, 1, 10, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, XTableComponent_x_pagination_11_Template, 2, 8, \"x-pagination\", 10);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"x-table-scroll-left\", ctx.getScrollLeft)(\"x-table-scroll-left-max\", ctx.scrollLeftMax)(\"x-table-scroll-top\", ctx.getScrollTop)(\"x-table-has-scroll-right\", ctx.scrollYWidth)(\"x-table-has-scroll-bottom\", ctx.scrollXWidth)(\"x-table-bordered\", ctx.bordered)(\"x-table-td-adaption-height\", ctx.rowHeight == 0)(\"x-table-cell-config\", ctx.cellConfig);\n      i0.ɵɵproperty(\"ngClass\", ctx.classMap)(\"x-loading\", ctx.loading && ctx.getting);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.header);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showHeader && (ctx.headerPosition === \"top\" || ctx.headerPosition === \"top-bottom\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"data\", ctx.treeTable ? ctx.treeTableData : ctx.tableData)(\"columns\", ctx.columns)(\"itemSize\", ctx.itemSize)(\"rowHeight\", ctx.rowHeight)(\"bodyHeight\", ctx.bodyHeight)(\"columnTpl\", ctx.bodyColumnTpl)(\"allowSelectRow\", ctx.allowSelectRow)(\"virtualScroll\", ctx.virtualScroll)(\"minBufferPx\", ctx.minBufferPx)(\"maxBufferPx\", ctx.maxBufferPx)(\"adaptionHeight\", ctx.adaptionHeight)(\"docPercent\", ctx.docPercent)(\"scroll\", ctx.scroll)(\"rowClass\", ctx.rowClass)(\"cellConfig\", ctx.cellConfig == null ? null : ctx.cellConfig.tbody)(\"expandedAll\", ctx.expandedAll)(\"expandTpl\", ctx.expandTpl)(\"activatedRow\", ctx.activatedRow)(\"table\", ctx);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showHeader && (ctx.headerPosition === \"bottom\" || ctx.headerPosition === \"top-bottom\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.footer);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasStickyTopRight());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasStickyTopRight() && ctx.headSearchTpl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasStickyBottomRight());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasStickyBottomRight() && ctx.headSearchTpl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showPagination && ctx.size);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgIf, i3$1.XPaginationComponent, i4.XOutletDirective, i5$1.XLoadingComponent, XTableHeadComponent, XTableBodyComponent, XTableFootComponent],\n  styles: [\".x-table{margin:0;padding:0;display:flex;flex-direction:column;border-collapse:collapse;width:100%;border:var(--x-border-width) var(--x-border-style) var(--x-border);position:relative}.x-table>thead{position:relative;overflow:hidden;display:block;background-color:var(--x-background);min-height:42px}.x-table>thead>tr{width:100%;display:flex;min-height:42px}.x-table>thead>tr>th{display:flex;align-items:center;flex:1;position:relative;font-weight:600;background-color:var(--x-background);border-bottom:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table>thead>tr>th>a{display:inline-flex;align-items:center;color:var(--x-text-300);overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.x-table>thead>tr>th.x-table-sticky{position:sticky;z-index:5}.x-table>thead>tr>th .x-table-drag-width{position:absolute;height:100%;width:.1875rem;right:-.125rem;cursor:ew-resize;transition:background-color var(--x-animation-duration-fast);z-index:1}.x-table>thead>tr>th .x-table-drag-width:hover{background-color:var(--x-primary)}.x-table>thead.x-table-head-bottom>tr>th{border-bottom:none}.x-table>thead.x-table-head-bottom>tr.x-table-search>th{border-top:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table>tbody{display:block;border-top:none;position:relative;min-height:7rem}.x-table>tbody tr{display:flex}.x-table>tbody tr>td{display:flex;align-items:center;position:relative;justify-content:space-between;overflow:hidden;background-color:var(--x-background);border-bottom:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table>tbody tr>td>div{flex:1;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.x-table>tbody tr>td.x-table-sticky{position:sticky;z-index:5}.x-table>tbody tr>td>x-button .x-icon{transition:var(--x-animation-duration-base)}.x-table>tbody tr>td>x-button.is-leaf{visibility:hidden}.x-table>tbody tr>td>x-button.is-expanded .x-icon{transform:rotate(90deg)}.x-table>tbody tr.x-table-activated>td{background-color:var(--x-background-a200);color:var(--x-primary)}.x-table>tbody tr:hover>td{background-color:var(--x-background-a200)}.x-table>tbody tr:last-child{border-bottom:none}.x-table>tbody x-empty{position:absolute;top:0;width:100%;padding:calc(var(--x-font-size) * 2)}.x-table-sort{cursor:pointer;transition:transform .2s}.x-table-sort:hover{color:var(--x-text-300)}.x-table-sort:active{transform:translate(1px,1px)}.x-table-sort-icon.x-icon{margin-left:.25rem;display:none;font-size:1rem;transform:rotate(90deg) rotateY(180deg);transition:.3s}.x-table-sort-icon.x-icon.x-table-icon-up,.x-table-sort-icon.x-icon.x-table-icon-down{display:inherit}.x-table-sort-icon.x-icon.x-table-icon-down{transform:rotate(90deg)}.x-table-scroll-top>thead{box-shadow:0 var(--x-box-shadow-light-width) var(--x-box-shadow-light-width) var(--x-box-shadow-light-color);z-index:1}.x-table-scroll-left .x-table-sticky-left-last{box-shadow:var(--x-box-shadow-light-width) var(--x-box-shadow-light-width) var(--x-box-shadow-light-width) var(--x-box-shadow-light-color);border-right:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table-td-adaption-height>tbody tr>td{overflow:inherit}.x-table-td-adaption-height>tbody tr>td>div{white-space:inherit;text-overflow:inherit;overflow:inherit}.x-table-bordered>thead>tr>th,.x-table-bordered>tbody tr>td{border-right:var(--x-border-width) var(--x-border-style) var(--x-border);padding-left:calc(var(--x-font-size) / 2)}.x-table-bordered>thead>tr>th:last-child,.x-table-bordered>tbody tr>td:last-child{border-right:none}.x-table-cell-config>thead tr,.x-table-cell-config>tbody tr{display:grid;grid-auto-flow:row;height:100%}.x-table-cell-config>thead>tr>th,.x-table-cell-config>tbody tr>td{border-right:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table-cell-config>thead>tr>th:last-child,.x-table-cell-config>tbody tr>td:last-child{border-right:none}.x-table-expand{margin-right:.5rem}.x-table-expandTpl>tr{display:block!important;height:inherit!important}.x-table-header{border-bottom:var(--x-border-width) var(--x-border-style) var(--x-border);text-align:left;display:flex;align-items:center}.x-table-footer{display:flex;align-items:center}.x-table-sticky-right-scroll{position:absolute;right:0;min-height:42px;background-color:var(--x-background);z-index:1}.x-table-has-scroll-right .x-table-footer{border-top:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table-has-scroll-bottom:not(.x-table-scroll-left-max) .x-table-sticky-right-first{box-shadow:var(--x-box-shadow-light-width-minus) var(--x-box-shadow-light-width) var(--x-box-shadow-light-width) var(--x-box-shadow-light-color);border-left:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table-border-bottom{border-bottom:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table-border-top{border-top:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table-row-size-big>thead>tr>th,.x-table-row-size-big>tbody tr>td{padding:calc(var(--x-font-size) / 5 * 4) calc(var(--x-font-size) * 5 / 4) calc(var(--x-font-size) / 5 * 4) 0}.x-table-row-size-big>thead>tr>th:first-child,.x-table-row-size-big>tbody tr>td:first-child{padding-left:calc(var(--x-font-size) * 5 / 4)}.x-table-row-size-big .x-table-header,.x-table-row-size-big .x-table-footer{padding:calc(var(--x-font-size) / 5 * 4) calc(var(--x-font-size) * 5 / 4) calc(var(--x-font-size) / 5 * 4) calc(var(--x-font-size) * 5 / 4)}.x-table-row-size-big.x-table-bordered>thead>tr>th,.x-table-row-size-big.x-table-bordered>tbody tr>td{padding-left:calc(var(--x-font-size) * 5 / 4)}.x-table-row-size-big.x-table-cell-config>thead>tr>th,.x-table-row-size-big.x-table-cell-config>tbody tr>td{padding-left:calc(var(--x-font-size) * 5 / 4)}.x-table-row-size-large>thead>tr>th,.x-table-row-size-large>tbody tr>td{padding:calc(var(--x-font-size) / 4 * 3) calc(var(--x-font-size) * 4 / 3) calc(var(--x-font-size) / 4 * 3) 0}.x-table-row-size-large>thead>tr>th:first-child,.x-table-row-size-large>tbody tr>td:first-child{padding-left:calc(var(--x-font-size) * 4 / 3)}.x-table-row-size-large .x-table-header,.x-table-row-size-large .x-table-footer{padding:calc(var(--x-font-size) / 4 * 3) calc(var(--x-font-size) * 4 / 3) calc(var(--x-font-size) / 4 * 3) calc(var(--x-font-size) * 4 / 3)}.x-table-row-size-large.x-table-bordered>thead>tr>th,.x-table-row-size-large.x-table-bordered>tbody tr>td{padding-left:calc(var(--x-font-size) * 4 / 3)}.x-table-row-size-large.x-table-cell-config>thead>tr>th,.x-table-row-size-large.x-table-cell-config>tbody tr>td{padding-left:calc(var(--x-font-size) * 4 / 3)}.x-table-row-size-medium>thead>tr>th,.x-table-row-size-medium>tbody tr>td{padding:calc(var(--x-font-size) / 2) var(--x-font-size) calc(var(--x-font-size) / 2) 0}.x-table-row-size-medium>thead>tr>th:first-child,.x-table-row-size-medium>tbody tr>td:first-child{padding-left:var(--x-font-size)}.x-table-row-size-medium .x-table-header,.x-table-row-size-medium .x-table-footer{padding:calc(var(--x-font-size) / 2) var(--x-font-size) calc(var(--x-font-size) / 2) var(--x-font-size)}.x-table-row-size-medium.x-table-bordered>thead>tr>th,.x-table-row-size-medium.x-table-bordered>tbody tr>td{padding-left:var(--x-font-size)}.x-table-row-size-medium.x-table-cell-config>thead>tr>th,.x-table-row-size-medium.x-table-cell-config>tbody tr>td{padding-left:var(--x-font-size)}.x-table-row-size-small>thead>tr>th,.x-table-row-size-small>tbody tr>td{padding:calc(var(--x-font-size) / 3) calc(var(--x-font-size) * 2 / 3) calc(var(--x-font-size) / 3) 0}.x-table-row-size-small>thead>tr>th:first-child,.x-table-row-size-small>tbody tr>td:first-child{padding-left:calc(var(--x-font-size) * 2 / 3)}.x-table-row-size-small .x-table-header,.x-table-row-size-small .x-table-footer{padding:calc(var(--x-font-size) / 3) calc(var(--x-font-size) * 2 / 3) calc(var(--x-font-size) / 3) calc(var(--x-font-size) * 2 / 3)}.x-table-row-size-small.x-table-bordered>thead>tr>th,.x-table-row-size-small.x-table-bordered>tbody tr>td{padding-left:calc(var(--x-font-size) * 2 / 3)}.x-table-row-size-small.x-table-cell-config>thead>tr>th,.x-table-row-size-small.x-table-cell-config>tbody tr>td{padding-left:calc(var(--x-font-size) * 2 / 3)}.x-table-row-size-mini>thead>tr>th,.x-table-row-size-mini>tbody tr>td{padding:calc(var(--x-font-size) / 4) calc(var(--x-font-size) / 2) calc(var(--x-font-size) / 4) 0}.x-table-row-size-mini>thead>tr>th:first-child,.x-table-row-size-mini>tbody tr>td:first-child{padding-left:calc(var(--x-font-size) / 2)}.x-table-row-size-mini .x-table-header,.x-table-row-size-mini .x-table-footer{padding:calc(var(--x-font-size) / 4) calc(var(--x-font-size) / 2) calc(var(--x-font-size) / 4) calc(var(--x-font-size) / 2)}.x-table-row-size-mini.x-table-bordered>thead>tr>th,.x-table-row-size-mini.x-table-bordered>tbody tr>td{padding-left:calc(var(--x-font-size) / 2)}.x-table-row-size-mini.x-table-cell-config>thead>tr>th,.x-table-row-size-mini.x-table-cell-config>tbody tr>td{padding-left:calc(var(--x-font-size) / 2)}x-table{width:100%;display:flex;flex-direction:column}x-table .x-pagination{padding-top:calc(var(--x-font-size) / 2)}x-table.x-table-top-left{flex-direction:column-reverse}x-table.x-table-top-left .x-pagination{padding-top:0;padding-bottom:calc(var(--x-font-size) / 2)}x-table.x-table-top-center{flex-direction:column-reverse;align-items:center}x-table.x-table-top-center .x-pagination{padding-top:0;padding-bottom:calc(var(--x-font-size) / 2)}x-table.x-table-top-right{flex-direction:column-reverse;align-items:flex-end}x-table.x-table-top-right .x-pagination{padding-top:0;padding-bottom:calc(var(--x-font-size) / 2)}x-table.x-table-bottom-center{align-items:center}x-table.x-table-bottom-right{align-items:flex-end}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XTableComponent, [{\n    type: Component,\n    args: [{\n      selector: `${XTablePrefix}`,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<table\\r\\n  #table\\r\\n  class=\\\"x-table\\\"\\r\\n  [ngClass]=\\\"classMap\\\"\\r\\n  [x-loading]=\\\"loading && getting\\\"\\r\\n  [class.x-table-scroll-left]=\\\"getScrollLeft\\\"\\r\\n  [class.x-table-scroll-left-max]=\\\"scrollLeftMax\\\"\\r\\n  [class.x-table-scroll-top]=\\\"getScrollTop\\\"\\r\\n  [class.x-table-has-scroll-right]=\\\"scrollYWidth\\\"\\r\\n  [class.x-table-has-scroll-bottom]=\\\"scrollXWidth\\\"\\r\\n  [class.x-table-bordered]=\\\"bordered\\\"\\r\\n  [class.x-table-td-adaption-height]=\\\"rowHeight == 0\\\"\\r\\n  [class.x-table-cell-config]=\\\"cellConfig\\\"\\r\\n>\\r\\n  <caption #caption class=\\\"x-table-header\\\" *ngIf=\\\"header\\\" [style.height.px]=\\\"getRowHeight\\\" [style.min-height.px]=\\\"getRowHeight\\\">\\r\\n    <ng-container *xOutlet=\\\"header\\\">{{ header }}</ng-container>\\r\\n  </caption>\\r\\n  <x-table-head\\r\\n    *ngIf=\\\"showHeader && (headerPosition === 'top' || headerPosition === 'top-bottom')\\\"\\r\\n    [columns]=\\\"columns\\\"\\r\\n    [rowHeight]=\\\"rowHeight\\\"\\r\\n    [columnTpl]=\\\"headColumnTpl\\\"\\r\\n    [scrollYWidth]=\\\"scrollYWidth\\\"\\r\\n    [scrollXWidth]=\\\"scrollXWidth\\\"\\r\\n    [cellConfig]=\\\"cellConfig?.thead\\\"\\r\\n    [position]=\\\"'top'\\\"\\r\\n    [table]=\\\"this\\\"\\r\\n  ></x-table-head>\\r\\n  <x-table-body\\r\\n    [data]=\\\"treeTable ? treeTableData : tableData\\\"\\r\\n    [columns]=\\\"columns\\\"\\r\\n    [itemSize]=\\\"itemSize\\\"\\r\\n    [rowHeight]=\\\"rowHeight\\\"\\r\\n    [bodyHeight]=\\\"bodyHeight\\\"\\r\\n    [columnTpl]=\\\"bodyColumnTpl\\\"\\r\\n    [allowSelectRow]=\\\"allowSelectRow\\\"\\r\\n    [virtualScroll]=\\\"virtualScroll\\\"\\r\\n    [minBufferPx]=\\\"minBufferPx\\\"\\r\\n    [maxBufferPx]=\\\"maxBufferPx\\\"\\r\\n    [adaptionHeight]=\\\"adaptionHeight\\\"\\r\\n    [docPercent]=\\\"docPercent\\\"\\r\\n    [scroll]=\\\"scroll\\\"\\r\\n    [rowClass]=\\\"rowClass\\\"\\r\\n    [cellConfig]=\\\"cellConfig?.tbody\\\"\\r\\n    [expandedAll]=\\\"expandedAll\\\"\\r\\n    [expandTpl]=\\\"expandTpl\\\"\\r\\n    [(activatedRow)]=\\\"activatedRow\\\"\\r\\n    (activatedRowChange)=\\\"activatedRowChange.emit($event)\\\"\\r\\n    [table]=\\\"this\\\"\\r\\n  ></x-table-body>\\r\\n  <x-table-head\\r\\n    *ngIf=\\\"showHeader && (headerPosition === 'bottom' || headerPosition === 'top-bottom')\\\"\\r\\n    [columns]=\\\"columns\\\"\\r\\n    [rowHeight]=\\\"rowHeight\\\"\\r\\n    [columnTpl]=\\\"headColumnTpl\\\"\\r\\n    [scrollYWidth]=\\\"scrollYWidth\\\"\\r\\n    [scrollXWidth]=\\\"scrollXWidth\\\"\\r\\n    [cellConfig]=\\\"cellConfig?.thead\\\"\\r\\n    [position]=\\\"'bottom'\\\"\\r\\n    [table]=\\\"this\\\"\\r\\n  ></x-table-head>\\r\\n  <x-table-foot *ngIf=\\\"footer\\\" [table]=\\\"this\\\" [footer]=\\\"footer\\\" [rowHeight]=\\\"rowHeight\\\"></x-table-foot>\\r\\n  <div\\r\\n    *ngIf=\\\"hasStickyTopRight()\\\"\\r\\n    #stickyTopRightEle\\r\\n    class=\\\"x-table-sticky-right-scroll\\\"\\r\\n    [class.x-table-border-bottom]=\\\"headSearchTpl\\\"\\r\\n    [style.top.px]=\\\"getStickyTopScrollTop\\\"\\r\\n    [style.width.px]=\\\"scrollYWidth\\\"\\r\\n    [style.height.px]=\\\"getRowHeight\\\"\\r\\n    [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n  ></div>\\r\\n  <div\\r\\n    *ngIf=\\\"hasStickyTopRight() && headSearchTpl\\\"\\r\\n    class=\\\"x-table-sticky-right-scroll\\\"\\r\\n    [style.top.px]=\\\"getStickyTopScrollTop + getStickyTopRightEleHeight\\\"\\r\\n    [style.width.px]=\\\"scrollYWidth\\\"\\r\\n    [style.height.px]=\\\"getRowHeight\\\"\\r\\n    [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n  ></div>\\r\\n  <div\\r\\n    *ngIf=\\\"hasStickyBottomRight()\\\"\\r\\n    #stickyBottomRightEle\\r\\n    class=\\\"x-table-sticky-right-scroll\\\"\\r\\n    [style.bottom.px]=\\\"getStickyBottomScrollTop\\\"\\r\\n    [style.width.px]=\\\"scrollYWidth\\\"\\r\\n    [style.height.px]=\\\"getRowHeight\\\"\\r\\n    [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n  ></div>\\r\\n  <div\\r\\n    *ngIf=\\\"hasStickyBottomRight() && headSearchTpl\\\"\\r\\n    class=\\\"x-table-sticky-right-scroll\\\"\\r\\n    [class.x-table-border-bottom]=\\\"headSearchTpl\\\"\\r\\n    [style.bottom.px]=\\\"getStickyBottomScrollTop + getStickyBottomRightEleHeight\\\"\\r\\n    [style.width.px]=\\\"scrollYWidth\\\"\\r\\n    [style.height.px]=\\\"getRowHeight\\\"\\r\\n    [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n  ></div>\\r\\n</table>\\r\\n<x-pagination\\r\\n  #pagination\\r\\n  *ngIf=\\\"showPagination && size\\\"\\r\\n  [(index)]=\\\"index\\\"\\r\\n  [(size)]=\\\"size\\\"\\r\\n  [(query)]=\\\"query\\\"\\r\\n  [total]=\\\"total\\\"\\r\\n  (indexChange)=\\\"change($event)\\\"\\r\\n  [showEllipsis]=\\\"showEllipsis\\\"\\r\\n  [showTotal]=\\\"showTotal\\\"\\r\\n  [space]=\\\"space\\\"\\r\\n  [hiddenBorder]=\\\"hiddenBorder\\\"\\r\\n>\\r\\n</x-pagination>\\r\\n\",\n      styles: [\".x-table{margin:0;padding:0;display:flex;flex-direction:column;border-collapse:collapse;width:100%;border:var(--x-border-width) var(--x-border-style) var(--x-border);position:relative}.x-table>thead{position:relative;overflow:hidden;display:block;background-color:var(--x-background);min-height:42px}.x-table>thead>tr{width:100%;display:flex;min-height:42px}.x-table>thead>tr>th{display:flex;align-items:center;flex:1;position:relative;font-weight:600;background-color:var(--x-background);border-bottom:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table>thead>tr>th>a{display:inline-flex;align-items:center;color:var(--x-text-300);overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.x-table>thead>tr>th.x-table-sticky{position:sticky;z-index:5}.x-table>thead>tr>th .x-table-drag-width{position:absolute;height:100%;width:.1875rem;right:-.125rem;cursor:ew-resize;transition:background-color var(--x-animation-duration-fast);z-index:1}.x-table>thead>tr>th .x-table-drag-width:hover{background-color:var(--x-primary)}.x-table>thead.x-table-head-bottom>tr>th{border-bottom:none}.x-table>thead.x-table-head-bottom>tr.x-table-search>th{border-top:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table>tbody{display:block;border-top:none;position:relative;min-height:7rem}.x-table>tbody tr{display:flex}.x-table>tbody tr>td{display:flex;align-items:center;position:relative;justify-content:space-between;overflow:hidden;background-color:var(--x-background);border-bottom:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table>tbody tr>td>div{flex:1;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.x-table>tbody tr>td.x-table-sticky{position:sticky;z-index:5}.x-table>tbody tr>td>x-button .x-icon{transition:var(--x-animation-duration-base)}.x-table>tbody tr>td>x-button.is-leaf{visibility:hidden}.x-table>tbody tr>td>x-button.is-expanded .x-icon{transform:rotate(90deg)}.x-table>tbody tr.x-table-activated>td{background-color:var(--x-background-a200);color:var(--x-primary)}.x-table>tbody tr:hover>td{background-color:var(--x-background-a200)}.x-table>tbody tr:last-child{border-bottom:none}.x-table>tbody x-empty{position:absolute;top:0;width:100%;padding:calc(var(--x-font-size) * 2)}.x-table-sort{cursor:pointer;transition:transform .2s}.x-table-sort:hover{color:var(--x-text-300)}.x-table-sort:active{transform:translate(1px,1px)}.x-table-sort-icon.x-icon{margin-left:.25rem;display:none;font-size:1rem;transform:rotate(90deg) rotateY(180deg);transition:.3s}.x-table-sort-icon.x-icon.x-table-icon-up,.x-table-sort-icon.x-icon.x-table-icon-down{display:inherit}.x-table-sort-icon.x-icon.x-table-icon-down{transform:rotate(90deg)}.x-table-scroll-top>thead{box-shadow:0 var(--x-box-shadow-light-width) var(--x-box-shadow-light-width) var(--x-box-shadow-light-color);z-index:1}.x-table-scroll-left .x-table-sticky-left-last{box-shadow:var(--x-box-shadow-light-width) var(--x-box-shadow-light-width) var(--x-box-shadow-light-width) var(--x-box-shadow-light-color);border-right:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table-td-adaption-height>tbody tr>td{overflow:inherit}.x-table-td-adaption-height>tbody tr>td>div{white-space:inherit;text-overflow:inherit;overflow:inherit}.x-table-bordered>thead>tr>th,.x-table-bordered>tbody tr>td{border-right:var(--x-border-width) var(--x-border-style) var(--x-border);padding-left:calc(var(--x-font-size) / 2)}.x-table-bordered>thead>tr>th:last-child,.x-table-bordered>tbody tr>td:last-child{border-right:none}.x-table-cell-config>thead tr,.x-table-cell-config>tbody tr{display:grid;grid-auto-flow:row;height:100%}.x-table-cell-config>thead>tr>th,.x-table-cell-config>tbody tr>td{border-right:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table-cell-config>thead>tr>th:last-child,.x-table-cell-config>tbody tr>td:last-child{border-right:none}.x-table-expand{margin-right:.5rem}.x-table-expandTpl>tr{display:block!important;height:inherit!important}.x-table-header{border-bottom:var(--x-border-width) var(--x-border-style) var(--x-border);text-align:left;display:flex;align-items:center}.x-table-footer{display:flex;align-items:center}.x-table-sticky-right-scroll{position:absolute;right:0;min-height:42px;background-color:var(--x-background);z-index:1}.x-table-has-scroll-right .x-table-footer{border-top:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table-has-scroll-bottom:not(.x-table-scroll-left-max) .x-table-sticky-right-first{box-shadow:var(--x-box-shadow-light-width-minus) var(--x-box-shadow-light-width) var(--x-box-shadow-light-width) var(--x-box-shadow-light-color);border-left:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table-border-bottom{border-bottom:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table-border-top{border-top:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table-row-size-big>thead>tr>th,.x-table-row-size-big>tbody tr>td{padding:calc(var(--x-font-size) / 5 * 4) calc(var(--x-font-size) * 5 / 4) calc(var(--x-font-size) / 5 * 4) 0}.x-table-row-size-big>thead>tr>th:first-child,.x-table-row-size-big>tbody tr>td:first-child{padding-left:calc(var(--x-font-size) * 5 / 4)}.x-table-row-size-big .x-table-header,.x-table-row-size-big .x-table-footer{padding:calc(var(--x-font-size) / 5 * 4) calc(var(--x-font-size) * 5 / 4) calc(var(--x-font-size) / 5 * 4) calc(var(--x-font-size) * 5 / 4)}.x-table-row-size-big.x-table-bordered>thead>tr>th,.x-table-row-size-big.x-table-bordered>tbody tr>td{padding-left:calc(var(--x-font-size) * 5 / 4)}.x-table-row-size-big.x-table-cell-config>thead>tr>th,.x-table-row-size-big.x-table-cell-config>tbody tr>td{padding-left:calc(var(--x-font-size) * 5 / 4)}.x-table-row-size-large>thead>tr>th,.x-table-row-size-large>tbody tr>td{padding:calc(var(--x-font-size) / 4 * 3) calc(var(--x-font-size) * 4 / 3) calc(var(--x-font-size) / 4 * 3) 0}.x-table-row-size-large>thead>tr>th:first-child,.x-table-row-size-large>tbody tr>td:first-child{padding-left:calc(var(--x-font-size) * 4 / 3)}.x-table-row-size-large .x-table-header,.x-table-row-size-large .x-table-footer{padding:calc(var(--x-font-size) / 4 * 3) calc(var(--x-font-size) * 4 / 3) calc(var(--x-font-size) / 4 * 3) calc(var(--x-font-size) * 4 / 3)}.x-table-row-size-large.x-table-bordered>thead>tr>th,.x-table-row-size-large.x-table-bordered>tbody tr>td{padding-left:calc(var(--x-font-size) * 4 / 3)}.x-table-row-size-large.x-table-cell-config>thead>tr>th,.x-table-row-size-large.x-table-cell-config>tbody tr>td{padding-left:calc(var(--x-font-size) * 4 / 3)}.x-table-row-size-medium>thead>tr>th,.x-table-row-size-medium>tbody tr>td{padding:calc(var(--x-font-size) / 2) var(--x-font-size) calc(var(--x-font-size) / 2) 0}.x-table-row-size-medium>thead>tr>th:first-child,.x-table-row-size-medium>tbody tr>td:first-child{padding-left:var(--x-font-size)}.x-table-row-size-medium .x-table-header,.x-table-row-size-medium .x-table-footer{padding:calc(var(--x-font-size) / 2) var(--x-font-size) calc(var(--x-font-size) / 2) var(--x-font-size)}.x-table-row-size-medium.x-table-bordered>thead>tr>th,.x-table-row-size-medium.x-table-bordered>tbody tr>td{padding-left:var(--x-font-size)}.x-table-row-size-medium.x-table-cell-config>thead>tr>th,.x-table-row-size-medium.x-table-cell-config>tbody tr>td{padding-left:var(--x-font-size)}.x-table-row-size-small>thead>tr>th,.x-table-row-size-small>tbody tr>td{padding:calc(var(--x-font-size) / 3) calc(var(--x-font-size) * 2 / 3) calc(var(--x-font-size) / 3) 0}.x-table-row-size-small>thead>tr>th:first-child,.x-table-row-size-small>tbody tr>td:first-child{padding-left:calc(var(--x-font-size) * 2 / 3)}.x-table-row-size-small .x-table-header,.x-table-row-size-small .x-table-footer{padding:calc(var(--x-font-size) / 3) calc(var(--x-font-size) * 2 / 3) calc(var(--x-font-size) / 3) calc(var(--x-font-size) * 2 / 3)}.x-table-row-size-small.x-table-bordered>thead>tr>th,.x-table-row-size-small.x-table-bordered>tbody tr>td{padding-left:calc(var(--x-font-size) * 2 / 3)}.x-table-row-size-small.x-table-cell-config>thead>tr>th,.x-table-row-size-small.x-table-cell-config>tbody tr>td{padding-left:calc(var(--x-font-size) * 2 / 3)}.x-table-row-size-mini>thead>tr>th,.x-table-row-size-mini>tbody tr>td{padding:calc(var(--x-font-size) / 4) calc(var(--x-font-size) / 2) calc(var(--x-font-size) / 4) 0}.x-table-row-size-mini>thead>tr>th:first-child,.x-table-row-size-mini>tbody tr>td:first-child{padding-left:calc(var(--x-font-size) / 2)}.x-table-row-size-mini .x-table-header,.x-table-row-size-mini .x-table-footer{padding:calc(var(--x-font-size) / 4) calc(var(--x-font-size) / 2) calc(var(--x-font-size) / 4) calc(var(--x-font-size) / 2)}.x-table-row-size-mini.x-table-bordered>thead>tr>th,.x-table-row-size-mini.x-table-bordered>tbody tr>td{padding-left:calc(var(--x-font-size) / 2)}.x-table-row-size-mini.x-table-cell-config>thead>tr>th,.x-table-row-size-mini.x-table-cell-config>tbody tr>td{padding-left:calc(var(--x-font-size) / 2)}x-table{width:100%;display:flex;flex-direction:column}x-table .x-pagination{padding-top:calc(var(--x-font-size) / 2)}x-table.x-table-top-left{flex-direction:column-reverse}x-table.x-table-top-left .x-pagination{padding-top:0;padding-bottom:calc(var(--x-font-size) / 2)}x-table.x-table-top-center{flex-direction:column-reverse;align-items:center}x-table.x-table-top-center .x-pagination{padding-top:0;padding-bottom:calc(var(--x-font-size) / 2)}x-table.x-table-top-right{flex-direction:column-reverse;align-items:flex-end}x-table.x-table-top-right .x-pagination{padding-top:0;padding-bottom:calc(var(--x-font-size) / 2)}x-table.x-table-bottom-center{align-items:center}x-table.x-table-bottom-right{align-items:flex-end}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.XConfigService\n    }];\n  }, {\n    table: [{\n      type: ViewChild,\n      args: ['table']\n    }],\n    caption: [{\n      type: ViewChild,\n      args: ['caption']\n    }],\n    pagination: [{\n      type: ViewChild,\n      args: ['pagination']\n    }],\n    stickyTopRightEle: [{\n      type: ViewChild,\n      args: ['stickyTopRightEle']\n    }],\n    stickyBottomRightEle: [{\n      type: ViewChild,\n      args: ['stickyBottomRightEle']\n    }]\n  });\n})();\n\nclass XTableModule {}\n/** @nocollapse */\n\n\nXTableModule.ɵfac = function XTableModule_Factory(t) {\n  return new (t || XTableModule)();\n};\n/** @nocollapse */\n\n\nXTableModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: XTableModule\n});\n/** @nocollapse */\n\nXTableModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, FormsModule, XPaginationModule, XOutletModule, XCheckboxModule, XIconModule, XButtonModule, ScrollingModule, XEmptyModule, XLoadingModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XTableModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [XDragDirective, XTableComponent, XTableProperty, XTableHeadComponent, XTableHeadProperty, XTableBodyComponent, XTableBodyProperty, XTableFootComponent, XTableFootProperty],\n      exports: [XTableComponent],\n      imports: [CommonModule, FormsModule, XPaginationModule, XOutletModule, XCheckboxModule, XIconModule, XButtonModule, ScrollingModule, XEmptyModule, XLoadingModule]\n    }]\n  }], null, null);\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { XDragDirective, XTableBodyComponent, XTableBodyPrefix, XTableBodyProperty, XTableComponent, XTableFootComponent, XTableFootPrefix, XTableFootProperty, XTableHeadComponent, XTableHeadPrefix, XTableHeadProperty, XTableModule, XTablePrefix, XTableProperty };","map":{"version":3,"names":["i0","EventEmitter","Component","Input","Output","Directive","Inject","ViewEncapsulation","ViewChild","ChangeDetectionStrategy","NgModule","__decorate","i1","XWithConfig","XInputNumber","XInputBoolean","XProperty","XIsChange","removeNgTag","XIsEmpty","XResize","stripTags","XIsUndefined","i3$1","XPaginationProperty","XPaginationModule","takeUntil","Subject","fromEvent","i2","DOCUMENT","CommonModule","i4","XOutletModule","i5$1","XLoadingModule","i3","FormsModule","i5","XCheckboxModule","i6","XIconModule","i6$1","XButtonModule","i7","ScrollingModule","i8","XEmptyModule","XTablePrefix","X_CONFIG_NAME","XTableProperty","constructor","arguments","data","columns","activatedRowChange","headColumnTpl","bodyColumnTpl","sortChange","minBufferPx","maxBufferPx","docPercent","checkedRow","manual","manualChange","paginationPosition","expanded","ɵfac","ɵcmp","prototype","type","args","template","rowHeight","loading","bordered","showHeader","headerPosition","activatedRow","bodyTdTpl","rowClass","headSearchTpl","allowSelectRow","allowCheckRow","virtualScroll","bodyHeight","itemSize","adaptionHeight","scroll","header","footer","cellConfig","rowSize","showPagination","treeTable","expandedAll","expandedLevel","expandTpl","XTableHeadPrefix","XTableHeadProperty","columnTpl","scrollYWidth","scrollXWidth","position","XTableBodyPrefix","XTableBodyProperty","level","XTableFootPrefix","XTableFootProperty","XDragDirective","elementRef","document","renderer","draging","_unSubject","doc","ngOnInit","mouseDown","nativeElement","subscribe","downMe","x","pageX","y","pageY","offsetX","offsetY","_unSub","setStyle","documentElement","pipe","moveMe","emit","removeStyle","next","complete","ngOnDestroy","ElementRef","Renderer2","ɵdir","selector","undefined","decorators","XTableHeadComponent","cdr","configService","sort","sortStr","theadStyle","getRowHeight","ngOnChanges","simples","detectChanges","ngAfterViewInit","table","thead","push","headChange","getFlex","column","width","flex","getColumnRight","right","Number","getColumnWidth","height","cells","spt","map","gridAreaSpt","gridArea","split","length","Math","max","onSort","find","field","id","value","checkSort","resetScroll","dragWidth","dis","bodyChange","trackByItem","_index","item","ChangeDetectorRef","XConfigService","NgForOf","NgIf","NgTemplateOutlet","NgStyle","NgSwitch","NgSwitchCase","NgSwitchDefault","NgControlStatus","NgModel","XOutletDirective","XCheckboxComponent","XIconComponent","encapsulation","None","XTableBodyComponent","tbodyStyle","isEmpty","getItemSize","mergeRule","tbody","virtualBody","setSubject","setScroll","unsubscribe","_resizeObserver","disconnect","scrollContentEle","querySelector","resizeObserver","setAdaptionHeight","window","ele","srcElement","scrollTop","scrollLeft","scrollLeftMax","clientWidth","scrollWidth","hasY","scrollHeight","hasX","hasScrollY","offsetWidth","hasScrollX","scrollXHeight","offsetHeight","clientHeight","getIndex","index","isNaN","indexOf","getTitle","row","it","captionHeight","tcaption","headHeight","footHeight","tfoot","paginationHeight","pagination","rowClick","event","rowChecked","Array","from","path","localName","bodyChecked","onExpanded","_event","node","NgClass","XButtonComponent","CdkFixedSizeVirtualScroll","CdkVirtualForOf","CdkVirtualScrollViewport","XEmptyComponent","changeDetection","OnPush","XTableFootComponent","XTableComponent","dataIsFunc","getting","tableData","treeTableData","checkedValues","indeterminate","getScrollLeft","getScrollTop","getStickyTopScrollTop","getStickyBottomScrollTop","top","getStickyTopRightEleHeight","stickyTopRightEle","getStickyBottomRightEleHeight","stickyBottomRightEle","setClassMap","setRowChecked","setRowExpand","setMerge","setPaginationPosition","setExpandedAll","setData","setManual","caption","classMap","addClass","getStickyLeft","left","getStickyLeftLast","lefts","filter","getStickyRight","getStickyRightFirst","rights","hasStickyTopRight","some","hasStickyTopRightSearch","hasStickyBottomRight","size","isArray","setChecked","setHeadCheckboxList","setExpand","setHeadExpandList","Function","getDataByFunc","query","total","list","scrollToIndex","checkViewportSize","headCheckboxList","headChecked","rowExpand","isExpandColumn","expandColumn","setRule","rule","gridTemplateColumns","join","col","z","change","indexChange","scrollTo","result","key","arr","includes","setCheckedValues","getChildren","Boolean","children","pid","leaf","setChildren","nodes","forEach","queryChange","checked","_checked","count","checkedLen","XPaginationComponent","XLoadingComponent","styles","XTableModule","ɵmod","ɵinj","declarations","exports","imports"],"sources":["/Users/lzl/my-angular-app/node_modules/@ng-nest/ui/fesm2020/ng-nest-ui-table.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, Directive, Inject, ViewEncapsulation, ViewChild, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport * as i1 from '@ng-nest/ui/core';\nimport { XWithConfig, XInputNumber, XInputBoolean, XProperty, XIsChange, removeNgTag, XIsEmpty, XResize, stripTags, XIsUndefined } from '@ng-nest/ui/core';\nimport * as i3$1 from '@ng-nest/ui/pagination';\nimport { XPaginationProperty, XPaginationModule } from '@ng-nest/ui/pagination';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject, fromEvent } from 'rxjs';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i4 from '@ng-nest/ui/outlet';\nimport { XOutletModule } from '@ng-nest/ui/outlet';\nimport * as i5$1 from '@ng-nest/ui/loading';\nimport { XLoadingModule } from '@ng-nest/ui/loading';\nimport * as i3 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i5 from '@ng-nest/ui/checkbox';\nimport { XCheckboxModule } from '@ng-nest/ui/checkbox';\nimport * as i6 from '@ng-nest/ui/icon';\nimport { XIconModule } from '@ng-nest/ui/icon';\nimport * as i6$1 from '@ng-nest/ui/button';\nimport { XButtonModule } from '@ng-nest/ui/button';\nimport * as i7 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport * as i8 from '@ng-nest/ui/empty';\nimport { XEmptyModule } from '@ng-nest/ui/empty';\n\n/**\r\n * Table\r\n * @selector x-table\r\n * @decorator component\r\n */\r\nconst XTablePrefix = 'x-table';\r\nconst X_CONFIG_NAME = 'table';\r\n/**\r\n * Table Property\r\n */\r\nclass XTableProperty extends XPaginationProperty {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * @zh_CN 行数据\r\n         * @en_US Row data\r\n         */\r\n        this.data = [];\r\n        /**\r\n         * @zh_CN 列集合\r\n         * @en_US Column set\r\n         */\r\n        this.columns = [];\r\n        /**\r\n         * @zh_CN 当前选中行改变\r\n         * @en_US The currently selected row changes\r\n         */\r\n        this.activatedRowChange = new EventEmitter();\r\n        /**\r\n         * @zh_CN 列头自定义模板，通过 key-value 的方式指定每列的模版\r\n         * @en_US Column header custom template\r\n         */\r\n        this.headColumnTpl = {};\r\n        /**\r\n         * @zh_CN 列内容自定义模板，通过 key-value 的方式指定每列的模版\r\n         * @en_US Column content custom template\r\n         */\r\n        this.bodyColumnTpl = {};\r\n        /**\r\n         * @zh_CN 排序点击的事件\r\n         * @en_US Sort click events\r\n         */\r\n        this.sortChange = new EventEmitter();\r\n        /**\r\n         * @zh_CN 超出可视窗口缓冲区的最小值，对应 cdk scroll 中的参数\r\n         * @en_US Exceed the minimum value of the visible window buffer, corresponding to the parameters in cdk scroll\r\n         */\r\n        this.minBufferPx = 100;\r\n        /**\r\n         * @zh_CN 渲染新数据缓冲区的像素，对应 cdk scroll 中的参数\r\n         * @en_US Render the pixels of the new data buffer, corresponding to the parameters in cdk scroll\r\n         */\r\n        this.maxBufferPx = 200;\r\n        /**\r\n         * @zh_CN 文档高度百分比，弹窗百分比高度用到\r\n         * @en_US Document height percentage, used by pop-up window percentage height\r\n         */\r\n        this.docPercent = 1;\r\n        /**\r\n         * @zh_CN checkbox 列初始选中的数据，列中激活 checkbox\r\n         * @en_US Checkbox column initially selected data, checkbox is activated in column\r\n         */\r\n        this.checkedRow = {};\r\n        /**\r\n         * @zh_CN 如果 data 是函数类型，可以通过此参数控制请求，常用于弹框中的表格，弹出后再请求\r\n         * @en_US If data is a function type, you can use this parameter to control the request, which is often used in the form in the pop-up box, and then request it after it pops up\r\n         */\r\n        this.manual = true;\r\n        /**\r\n         * @zh_CN 参数控制请求改变事件\r\n         * @en_US Parameter control request change event\r\n         */\r\n        this.manualChange = new EventEmitter();\r\n        /**\r\n         * @zh_CN 分页器位置\r\n         * @en_US Pagination position\r\n         */\r\n        this.paginationPosition = 'bottom-left';\r\n        /**\r\n         * @zh_CN 展开的节点\r\n         * @en_US Expanded node\r\n         */\r\n        this.expanded = [];\r\n    }\r\n}\r\n/** @nocollapse */ XTableProperty.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XTableProperty, deps: null, target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XTableProperty.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XTableProperty, selector: \"ng-component\", inputs: { data: \"data\", columns: \"columns\", rowHeight: \"rowHeight\", loading: \"loading\", bordered: \"bordered\", showHeader: \"showHeader\", headerPosition: \"headerPosition\", activatedRow: \"activatedRow\", headColumnTpl: \"headColumnTpl\", bodyColumnTpl: \"bodyColumnTpl\", bodyTdTpl: \"bodyTdTpl\", rowClass: \"rowClass\", headSearchTpl: \"headSearchTpl\", allowSelectRow: \"allowSelectRow\", allowCheckRow: \"allowCheckRow\", virtualScroll: \"virtualScroll\", bodyHeight: \"bodyHeight\", itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\", adaptionHeight: \"adaptionHeight\", docPercent: \"docPercent\", checkedRow: \"checkedRow\", manual: \"manual\", scroll: \"scroll\", header: \"header\", footer: \"footer\", cellConfig: \"cellConfig\", rowSize: \"rowSize\", paginationPosition: \"paginationPosition\", showPagination: \"showPagination\", treeTable: \"treeTable\", expandedAll: \"expandedAll\", expandedLevel: \"expandedLevel\", expanded: \"expanded\", expandTpl: \"expandTpl\" }, outputs: { activatedRowChange: \"activatedRowChange\", sortChange: \"sortChange\", manualChange: \"manualChange\" }, usesInheritance: true, ngImport: i0, template: '', isInline: true });\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, 42),\r\n    XInputNumber()\r\n], XTableProperty.prototype, \"rowHeight\", void 0);\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, false),\r\n    XInputBoolean()\r\n], XTableProperty.prototype, \"loading\", void 0);\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, false),\r\n    XInputBoolean()\r\n], XTableProperty.prototype, \"bordered\", void 0);\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, true),\r\n    XInputBoolean()\r\n], XTableProperty.prototype, \"showHeader\", void 0);\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, 'top')\r\n], XTableProperty.prototype, \"headerPosition\", void 0);\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, true),\r\n    XInputBoolean()\r\n], XTableProperty.prototype, \"allowSelectRow\", void 0);\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, true),\r\n    XInputBoolean()\r\n], XTableProperty.prototype, \"allowCheckRow\", void 0);\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME),\r\n    XInputBoolean()\r\n], XTableProperty.prototype, \"virtualScroll\", void 0);\r\n__decorate([\r\n    XInputNumber()\r\n], XTableProperty.prototype, \"bodyHeight\", void 0);\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, 42),\r\n    XInputNumber()\r\n], XTableProperty.prototype, \"itemSize\", void 0);\r\n__decorate([\r\n    XInputNumber()\r\n], XTableProperty.prototype, \"adaptionHeight\", void 0);\r\n__decorate([\r\n    XInputNumber()\r\n], XTableProperty.prototype, \"docPercent\", void 0);\r\n__decorate([\r\n    XInputBoolean()\r\n], XTableProperty.prototype, \"manual\", void 0);\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, 'medium')\r\n], XTableProperty.prototype, \"rowSize\", void 0);\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, true),\r\n    XInputBoolean()\r\n], XTableProperty.prototype, \"showPagination\", void 0);\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, false),\r\n    XInputBoolean()\r\n], XTableProperty.prototype, \"treeTable\", void 0);\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, false),\r\n    XInputBoolean()\r\n], XTableProperty.prototype, \"expandedAll\", void 0);\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, -1),\r\n    XInputNumber()\r\n], XTableProperty.prototype, \"expandedLevel\", void 0);\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XTableProperty, decorators: [{\r\n            type: Component,\r\n            args: [{ template: '' }]\r\n        }], propDecorators: { data: [{\r\n                type: Input\r\n            }], columns: [{\r\n                type: Input\r\n            }], rowHeight: [{\r\n                type: Input\r\n            }], loading: [{\r\n                type: Input\r\n            }], bordered: [{\r\n                type: Input\r\n            }], showHeader: [{\r\n                type: Input\r\n            }], headerPosition: [{\r\n                type: Input\r\n            }], activatedRow: [{\r\n                type: Input\r\n            }], activatedRowChange: [{\r\n                type: Output\r\n            }], headColumnTpl: [{\r\n                type: Input\r\n            }], bodyColumnTpl: [{\r\n                type: Input\r\n            }], bodyTdTpl: [{\r\n                type: Input\r\n            }], rowClass: [{\r\n                type: Input\r\n            }], headSearchTpl: [{\r\n                type: Input\r\n            }], sortChange: [{\r\n                type: Output\r\n            }], allowSelectRow: [{\r\n                type: Input\r\n            }], allowCheckRow: [{\r\n                type: Input\r\n            }], virtualScroll: [{\r\n                type: Input\r\n            }], bodyHeight: [{\r\n                type: Input\r\n            }], itemSize: [{\r\n                type: Input\r\n            }], minBufferPx: [{\r\n                type: Input\r\n            }], maxBufferPx: [{\r\n                type: Input\r\n            }], adaptionHeight: [{\r\n                type: Input\r\n            }], docPercent: [{\r\n                type: Input\r\n            }], checkedRow: [{\r\n                type: Input\r\n            }], manual: [{\r\n                type: Input\r\n            }], scroll: [{\r\n                type: Input\r\n            }], header: [{\r\n                type: Input\r\n            }], footer: [{\r\n                type: Input\r\n            }], manualChange: [{\r\n                type: Output\r\n            }], cellConfig: [{\r\n                type: Input\r\n            }], rowSize: [{\r\n                type: Input\r\n            }], paginationPosition: [{\r\n                type: Input\r\n            }], showPagination: [{\r\n                type: Input\r\n            }], treeTable: [{\r\n                type: Input\r\n            }], expandedAll: [{\r\n                type: Input\r\n            }], expandedLevel: [{\r\n                type: Input\r\n            }], expanded: [{\r\n                type: Input\r\n            }], expandTpl: [{\r\n                type: Input\r\n            }] } });\r\n/**\r\n * Table Head\r\n * @selector x-table-head\r\n * @decorator component\r\n */\r\nconst XTableHeadPrefix = 'x-table-head';\r\n/**\r\n * Table Head Property\r\n */\r\nclass XTableHeadProperty extends XProperty {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * @zh_CN 列集合\r\n         * @en_US Column set\r\n         */\r\n        this.columns = [];\r\n        /**\r\n         * @zh_CN 高度，单位 px\r\n         * @en_US Height in px\r\n         */\r\n        this.rowHeight = 42;\r\n        /**\r\n         * @zh_CN 自定义模板\r\n         * @en_US Custom template\r\n         */\r\n        this.columnTpl = {};\r\n    }\r\n}\r\n/** @nocollapse */ XTableHeadProperty.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XTableHeadProperty, deps: null, target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XTableHeadProperty.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XTableHeadProperty, selector: \"ng-component\", inputs: { columns: \"columns\", rowHeight: \"rowHeight\", columnTpl: \"columnTpl\", scrollYWidth: \"scrollYWidth\", scrollXWidth: \"scrollXWidth\", cellConfig: \"cellConfig\", position: \"position\" }, usesInheritance: true, ngImport: i0, template: '', isInline: true });\r\n__decorate([\r\n    XInputNumber()\r\n], XTableHeadProperty.prototype, \"rowHeight\", void 0);\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XTableHeadProperty, decorators: [{\r\n            type: Component,\r\n            args: [{ template: '' }]\r\n        }], propDecorators: { columns: [{\r\n                type: Input\r\n            }], rowHeight: [{\r\n                type: Input\r\n            }], columnTpl: [{\r\n                type: Input\r\n            }], scrollYWidth: [{\r\n                type: Input\r\n            }], scrollXWidth: [{\r\n                type: Input\r\n            }], cellConfig: [{\r\n                type: Input\r\n            }], position: [{\r\n                type: Input\r\n            }] } });\r\n/**\r\n * Table Body\r\n * @selector x-table-body\r\n * @decorator component\r\n */\r\nconst XTableBodyPrefix = 'x-table-body';\r\n/**\r\n * Table Body Property\r\n */\r\nclass XTableBodyProperty extends XProperty {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * @zh_CN 行数据\r\n         * @en_US Row data\r\n         */\r\n        this.data = [];\r\n        /**\r\n         * @zh_CN 列集合\r\n         * @en_US Column set\r\n         */\r\n        this.columns = [];\r\n        /**\r\n         * @zh_CN 自定义模板\r\n         * @en_US Custom template\r\n         */\r\n        this.columnTpl = {};\r\n        /**\r\n         * @zh_CN 当前选中行改变\r\n         * @en_US The currently selected row changes\r\n         */\r\n        this.activatedRowChange = new EventEmitter();\r\n        /**\r\n         * @zh_CN 高度，单位 px。设置为 0 表示行高自适应内容高度。\r\n         * @en_US Height in px. set to 0 means that the row height is adaptive to the content height\r\n         */\r\n        this.rowHeight = 42;\r\n        /**\r\n         * @zh_CN 允许行点击选中\r\n         * @en_US Allow row click to select\r\n         */\r\n        this.allowSelectRow = true;\r\n        /**\r\n         * @zh_CN 开启虚拟滚动\r\n         * @en_US Turn on virtual scrolling\r\n         */\r\n        this.virtualScroll = false;\r\n        /**\r\n         * @zh_CN itemSize，对应 cdk scroll 中的参数\r\n         * @en_US itemSize，corresponding to the parameters in cdk scroll\r\n         */\r\n        this.itemSize = 42;\r\n        /**\r\n         * @zh_CN 超出可视窗口缓冲区的最小值，对应 cdk scroll 中的参数\r\n         * @en_US Exceed the minimum value of the visible window buffer, corresponding to the parameters in cdk scroll\r\n         */\r\n        this.minBufferPx = 100;\r\n        /**\r\n         * @zh_CN 渲染新数据缓冲区的像素，对应 cdk scroll 中的参数\r\n         * @en_US Render the pixels of the new data buffer, corresponding to the parameters in cdk scroll\r\n         */\r\n        this.maxBufferPx = 200;\r\n        /**\r\n         * @zh_CN 文档高度百分比，弹窗百分比高度用到\r\n         * @en_US Document height percentage, used by pop-up window percentage height\r\n         */\r\n        this.docPercent = 1;\r\n        /**\r\n         * @zh_CN 树形表格下的层级\r\n         * @en_US The level under the tree table\r\n         */\r\n        this.level = 0;\r\n    }\r\n}\r\n/** @nocollapse */ XTableBodyProperty.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XTableBodyProperty, deps: null, target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XTableBodyProperty.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XTableBodyProperty, selector: \"ng-component\", inputs: { data: \"data\", columns: \"columns\", columnTpl: \"columnTpl\", activatedRow: \"activatedRow\", rowHeight: \"rowHeight\", bodyHeight: \"bodyHeight\", allowSelectRow: \"allowSelectRow\", virtualScroll: \"virtualScroll\", itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\", adaptionHeight: \"adaptionHeight\", docPercent: \"docPercent\", scroll: \"scroll\", cellConfig: \"cellConfig\", rowClass: \"rowClass\", level: \"level\", expandedAll: \"expandedAll\", expandTpl: \"expandTpl\" }, outputs: { activatedRowChange: \"activatedRowChange\" }, usesInheritance: true, ngImport: i0, template: '', isInline: true });\r\n__decorate([\r\n    XInputNumber()\r\n], XTableBodyProperty.prototype, \"rowHeight\", void 0);\r\n__decorate([\r\n    XInputNumber()\r\n], XTableBodyProperty.prototype, \"bodyHeight\", void 0);\r\n__decorate([\r\n    XInputBoolean()\r\n], XTableBodyProperty.prototype, \"allowSelectRow\", void 0);\r\n__decorate([\r\n    XInputBoolean()\r\n], XTableBodyProperty.prototype, \"virtualScroll\", void 0);\r\n__decorate([\r\n    XInputNumber()\r\n], XTableBodyProperty.prototype, \"itemSize\", void 0);\r\n__decorate([\r\n    XInputNumber()\r\n], XTableBodyProperty.prototype, \"adaptionHeight\", void 0);\r\n__decorate([\r\n    XInputNumber()\r\n], XTableBodyProperty.prototype, \"docPercent\", void 0);\r\n__decorate([\r\n    XInputBoolean()\r\n], XTableBodyProperty.prototype, \"expandedAll\", void 0);\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XTableBodyProperty, decorators: [{\r\n            type: Component,\r\n            args: [{ template: '' }]\r\n        }], propDecorators: { data: [{\r\n                type: Input\r\n            }], columns: [{\r\n                type: Input\r\n            }], columnTpl: [{\r\n                type: Input\r\n            }], activatedRow: [{\r\n                type: Input\r\n            }], activatedRowChange: [{\r\n                type: Output\r\n            }], rowHeight: [{\r\n                type: Input\r\n            }], bodyHeight: [{\r\n                type: Input\r\n            }], allowSelectRow: [{\r\n                type: Input\r\n            }], virtualScroll: [{\r\n                type: Input\r\n            }], itemSize: [{\r\n                type: Input\r\n            }], minBufferPx: [{\r\n                type: Input\r\n            }], maxBufferPx: [{\r\n                type: Input\r\n            }], adaptionHeight: [{\r\n                type: Input\r\n            }], docPercent: [{\r\n                type: Input\r\n            }], scroll: [{\r\n                type: Input\r\n            }], cellConfig: [{\r\n                type: Input\r\n            }], rowClass: [{\r\n                type: Input\r\n            }], level: [{\r\n                type: Input\r\n            }], expandedAll: [{\r\n                type: Input\r\n            }], expandTpl: [{\r\n                type: Input\r\n            }] } });\r\n/**\r\n * Table Foot\r\n * @selector x-table-foot\r\n * @decorator component\r\n */\r\nconst XTableFootPrefix = 'x-table-foot';\r\n/**\r\n * Table Foot Property\r\n */\r\nclass XTableFootProperty extends XProperty {\r\n}\r\n/** @nocollapse */ XTableFootProperty.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XTableFootProperty, deps: null, target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XTableFootProperty.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XTableFootProperty, selector: \"ng-component\", inputs: { footer: \"footer\", rowHeight: \"rowHeight\" }, usesInheritance: true, ngImport: i0, template: '', isInline: true });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XTableFootProperty, decorators: [{\r\n            type: Component,\r\n            args: [{ template: '' }]\r\n        }], propDecorators: { footer: [{\r\n                type: Input\r\n            }], rowHeight: [{\r\n                type: Input\r\n            }] } });\n\nclass XDragDirective {\r\n    constructor(elementRef, document, renderer) {\r\n        this.elementRef = elementRef;\r\n        this.renderer = renderer;\r\n        this.draging = new EventEmitter();\r\n        this._unSubject = new Subject();\r\n        this.doc = document;\r\n    }\r\n    ngOnInit() {\r\n        const mouseDown = fromEvent(this.elementRef.nativeElement, 'mousedown');\r\n        mouseDown.subscribe((downMe) => {\r\n            let x = downMe.pageX;\r\n            let y = downMe.pageY;\r\n            let offsetX = 0;\r\n            let offsetY = 0;\r\n            const _unSub = new Subject();\r\n            this.renderer.setStyle(this.doc.documentElement, 'cursor', 'ew-resize');\r\n            this.renderer.setStyle(this.doc.documentElement, 'user-select', 'none');\r\n            fromEvent(this.doc.documentElement, 'mousemove')\r\n                .pipe(takeUntil(_unSub))\r\n                .subscribe((moveMe) => {\r\n                offsetX = moveMe.pageX - x;\r\n                offsetY = moveMe.pageY - y;\r\n                x = moveMe.pageX;\r\n                y = moveMe.pageY;\r\n                this.draging.emit({ x: offsetX, y: offsetY });\r\n            });\r\n            fromEvent(this.doc.documentElement, 'mouseup')\r\n                .pipe(takeUntil(_unSub))\r\n                .subscribe(() => {\r\n                this.renderer.removeStyle(this.doc.documentElement, 'cursor');\r\n                this.renderer.removeStyle(this.doc.documentElement, 'user-select');\r\n                _unSub.next();\r\n                _unSub.complete();\r\n            });\r\n        });\r\n        // fromEvent(this.elementRef.nativeElement, 'mousedown')\r\n        //   .pipe(\r\n        //     tap((mouse: MouseEvent) => {\r\n        //       return { startX: mouse.clientX, startY: mouse.clientY };\r\n        //     }),\r\n        //     tap((x) => {\r\n        //       fromEvent(this.elementRef.nativeElement, 'mousemove').pipe()\r\n        //     }),\r\n        //     takeUntil(this._unSubject)\r\n        //   )\r\n        //   .subscribe((x) => {\r\n        //     console.log(x);\r\n        //   });\r\n    }\r\n    ngOnDestroy() {\r\n        this._unSubject.next();\r\n        this._unSubject.complete();\r\n    }\r\n}\r\n/** @nocollapse */ XDragDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDragDirective, deps: [{ token: i0.ElementRef }, { token: DOCUMENT }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\r\n/** @nocollapse */ XDragDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XDragDirective, selector: \"[xDrag]\", outputs: { draging: \"draging\" }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDragDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{ selector: '[xDrag]' }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [DOCUMENT]\r\n                }] }, { type: i0.Renderer2 }]; }, propDecorators: { draging: [{\r\n                type: Output\r\n            }] } });\n\nclass XTableHeadComponent extends XTableHeadProperty {\r\n    constructor(\r\n    // @Optional() @Host() public table: XTableComponent,\r\n    renderer, elementRef, cdr, configService) {\r\n        super();\r\n        this.renderer = renderer;\r\n        this.elementRef = elementRef;\r\n        this.cdr = cdr;\r\n        this.configService = configService;\r\n        this.sort = [];\r\n        this.sortStr = '';\r\n        this.theadStyle = {};\r\n    }\r\n    get getRowHeight() {\r\n        return this.rowHeight == 0 ? '' : this.rowHeight;\r\n    }\r\n    ngOnChanges(simples) {\r\n        const { columns, scrollYWidth, scrollXWidth, cellConfig } = simples;\r\n        XIsChange(columns, scrollYWidth, scrollXWidth, cellConfig) && this.cdr.detectChanges();\r\n    }\r\n    ngOnInit() {\r\n        removeNgTag(this.elementRef.nativeElement);\r\n        this.setStyle();\r\n    }\r\n    ngAfterViewInit() {\r\n        this.table.thead.push(this.thead);\r\n        this.table.headChange = () => this.cdr.detectChanges();\r\n    }\r\n    getFlex(column) {\r\n        if (column.width)\r\n            return 'none';\r\n        if (!column.flex)\r\n            return 1;\r\n        return column.flex;\r\n    }\r\n    getColumnRight(right) {\r\n        if (Number(right) >= 0) {\r\n            if (Number(this.scrollYWidth) >= 0) {\r\n                return Number(right) + Number(this.scrollYWidth);\r\n            }\r\n            return Number(right);\r\n        }\r\n        // return right;\r\n        return '';\r\n    }\r\n    getColumnWidth(column) {\r\n        // if (Number(column.right) === 0) {\r\n        //   if (Number(this.scrollYWidth) >= 0) {\r\n        //     return Number(column.width) + Number(this.scrollYWidth);\r\n        //   }\r\n        //   return column.width;\r\n        // }\r\n        return column.width;\r\n    }\r\n    setStyle() {\r\n        let height = this.rowHeight == 0 ? '' : this.rowHeight;\r\n        if (this.cellConfig && this.cellConfig.cells) {\r\n            const spt = this.cellConfig.cells.map((x) => {\r\n                const gridAreaSpt = x.gridArea?.split('/');\r\n                return gridAreaSpt && gridAreaSpt.length > 3 ? Number(gridAreaSpt[2]) : 2;\r\n            });\r\n            height = ((Math.max(...spt) - 1) * height);\r\n        }\r\n        this.theadStyle = {\r\n            height: `${height}px`,\r\n            ['min-height']: `${this.getRowHeight}px`\r\n        };\r\n    }\r\n    onSort(column) {\r\n        if (!column.sort)\r\n            return;\r\n        if (XIsEmpty(this.sort))\r\n            this.sort = [];\r\n        let sort = this.sort?.find((y) => y.field === column.id);\r\n        if (sort) {\r\n            if (sort.value === 'asc') {\r\n                this.sort = [];\r\n                this.sortStr = '';\r\n            }\r\n            else {\r\n                sort.value = 'asc';\r\n            }\r\n        }\r\n        else {\r\n            sort = { field: column.id, value: 'desc' };\r\n            this.sort = [sort];\r\n        }\r\n        if (!XIsEmpty(this.sort))\r\n            this.sortStr = `${sort.field} ${sort.value}`;\r\n        this.table.checkSort(this.sort);\r\n        this.table.sortChange.emit(this.sort);\r\n        this.table.resetScroll(false, true);\r\n        this.cdr.detectChanges();\r\n    }\r\n    dragWidth(dis, column) {\r\n        if (column.width) {\r\n            column.width += dis.x;\r\n            if (column.width < 60)\r\n                column.width = 60;\r\n            this.cdr.detectChanges();\r\n            this.table.bodyChange();\r\n        }\r\n    }\r\n    trackByItem(_index, item) {\r\n        return item.id;\r\n    }\r\n}\r\n/** @nocollapse */ XTableHeadComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XTableHeadComponent, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.XConfigService }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XTableHeadComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XTableHeadComponent, selector: \"x-table-head\", inputs: { table: \"table\" }, viewQueries: [{ propertyName: \"thead\", first: true, predicate: [\"thead\"], descendants: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<thead #thead [ngStyle]=\\\"theadStyle\\\" [class.x-table-head-top]=\\\"position === 'top'\\\" [class.x-table-head-bottom]=\\\"position === 'bottom'\\\">\\r\\n  <ng-container *ngIf=\\\"cellConfig; else columnsTpl\\\">\\r\\n    <tr [style.gridTemplateColumns]=\\\"cellConfig.gridTemplateColumns\\\" [style.min-height.px]=\\\"getRowHeight\\\">\\r\\n      <th\\r\\n        *ngFor=\\\"let column of cellConfig.cells\\\"\\r\\n        [class.x-table-sticky]=\\\"table.getStickyLeft(column) || table.getStickyRight(column)\\\"\\r\\n        [class.x-table-sticky-left]=\\\"table.getStickyLeft(column)\\\"\\r\\n        [class.x-table-sticky-right]=\\\"table.getStickyRight(column)\\\"\\r\\n        [class.x-table-sticky-left-last]=\\\"table.getStickyLeftLast(column)\\\"\\r\\n        [class.x-table-sticky-right-first]=\\\"table.getStickyRightFirst(column)\\\"\\r\\n        [class.x-table-width-drag]=\\\"column.dragWidth\\\"\\r\\n        [style.grid-area]=\\\"column.gridArea\\\"\\r\\n        [style.left.px]=\\\"column.left\\\"\\r\\n        [style.right.px]=\\\"column.right\\\"\\r\\n        [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n        [title]=\\\"column?.label\\\"\\r\\n      >\\r\\n        <ng-container *ngTemplateOutlet=\\\"columnBaseTpl; context: { column: column }\\\"></ng-container>\\r\\n        <div *ngIf=\\\"column.dragWidth\\\" class=\\\"x-table-drag-width\\\" xDrag (draging)=\\\"dragWidth($event, column)\\\"></div>\\r\\n      </th>\\r\\n    </tr>\\r\\n  </ng-container>\\r\\n  <ng-container *ngIf=\\\"table.headSearchTpl\\\">\\r\\n    <ng-container *ngTemplateOutlet=\\\"columnsTpl; context: { case: 'search' }\\\"></ng-container>\\r\\n  </ng-container>\\r\\n</thead>\\r\\n\\r\\n<ng-template #columnsTpl let-case=\\\"case\\\">\\r\\n  <tr\\r\\n    [style.height.px]=\\\"getRowHeight\\\"\\r\\n    [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n    [style.padding-right.px]=\\\"scrollYWidth\\\"\\r\\n    [style.width.px]=\\\"scrollXWidth\\\"\\r\\n    [class.x-table-search]=\\\"case === 'search'\\\"\\r\\n  >\\r\\n    <th\\r\\n      *ngFor=\\\"let column of columns; trackBy: trackByItem\\\"\\r\\n      [class.x-table-sticky]=\\\"table.getStickyLeft(column) || table.getStickyRight(column)\\\"\\r\\n      [class.x-table-sticky-left]=\\\"table.getStickyLeft(column)\\\"\\r\\n      [class.x-table-sticky-right]=\\\"table.getStickyRight(column)\\\"\\r\\n      [class.x-table-sticky-left-last]=\\\"table.getStickyLeftLast(column)\\\"\\r\\n      [class.x-table-sticky-right-first]=\\\"table.getStickyRightFirst(column)\\\"\\r\\n      [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n      [style.width.px]=\\\"getColumnWidth(column)\\\"\\r\\n      [style.left.px]=\\\"column.left\\\"\\r\\n      [style.right.px]=\\\"getColumnRight(column.right)\\\"\\r\\n      [style.flex]=\\\"getFlex(column)\\\"\\r\\n    >\\r\\n      <ng-container [ngSwitch]=\\\"case\\\">\\r\\n        <ng-container *ngSwitchCase=\\\"'search'\\\">\\r\\n          <ng-container *ngTemplateOutlet=\\\"table.headSearchTpl; context: { $column: column }\\\"></ng-container>\\r\\n        </ng-container>\\r\\n        <ng-container *ngSwitchDefault>\\r\\n          <ng-container *ngTemplateOutlet=\\\"columnBaseTpl; context: { column: column }\\\"></ng-container>\\r\\n          <div *ngIf=\\\"column.dragWidth\\\" class=\\\"x-table-drag-width\\\" xDrag (draging)=\\\"dragWidth($event, column)\\\"></div>\\r\\n        </ng-container>\\r\\n      </ng-container>\\r\\n    </th>\\r\\n  </tr>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #columnBaseTpl let-column=\\\"column\\\">\\r\\n  <ng-container [ngSwitch]=\\\"column.type\\\">\\r\\n    <ng-container *ngSwitchCase=\\\"'checkbox'\\\">\\r\\n      <x-checkbox\\r\\n        *ngIf=\\\"column.headChecked\\\"\\r\\n        [data]=\\\"[{ id: true, label: column.label }]\\\"\\r\\n        [(ngModel)]=\\\"table.checkedValues[column.id]\\\"\\r\\n        (ngModelChange)=\\\"table.headChecked($event, column)\\\"\\r\\n        [indeterminate]=\\\"table.checkedValues[column.id + table.indeterminate]\\\"\\r\\n      ></x-checkbox>\\r\\n      <ng-container *ngIf=\\\"!column.headChecked\\\">\\r\\n        <ng-container *ngTemplateOutlet=\\\"cloumnDefaultTpl; context: { column: column }\\\"></ng-container>\\r\\n      </ng-container>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'index'\\\">\\r\\n      <a>{{ column.label }}</a>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchDefault>\\r\\n      <ng-container *ngTemplateOutlet=\\\"cloumnDefaultTpl; context: { column: column }\\\"></ng-container>\\r\\n    </ng-container>\\r\\n  </ng-container>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #cloumnDefaultTpl let-column=\\\"column\\\">\\r\\n  <a [class.x-table-sort]=\\\"column.sort\\\" (click)=\\\"onSort(column)\\\" [style.text-align]=\\\"column.textAlign\\\">\\r\\n    <ng-container *xOutlet=\\\"columnTpl[column.id]; context: { $column: column }\\\">\\r\\n      {{ column.label }}\\r\\n    </ng-container>\\r\\n    <x-icon\\r\\n      *ngIf=\\\"column.sort\\\"\\r\\n      type=\\\"fto-bar-chart\\\"\\r\\n      class=\\\"x-table-sort-icon\\\"\\r\\n      [class.x-table-icon-up]=\\\"sortStr === column.id + ' desc'\\\"\\r\\n      [class.x-table-icon-down]=\\\"sortStr === column.id + ' asc'\\\"\\r\\n    ></x-icon>\\r\\n  </a>\\r\\n</ng-template>\\r\\n\", dependencies: [{ kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"directive\", type: i2.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }, { kind: \"directive\", type: i3.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i3.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i4.XOutletDirective, selector: \"[xOutlet]\", inputs: [\"xOutletContext\", \"xOutlet\"] }, { kind: \"component\", type: i5.XCheckboxComponent, selector: \"x-checkbox\" }, { kind: \"component\", type: i6.XIconComponent, selector: \"x-icon\" }, { kind: \"directive\", type: XDragDirective, selector: \"[xDrag]\", outputs: [\"draging\"] }], encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XTableHeadComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: `${XTableHeadPrefix}`, encapsulation: ViewEncapsulation.None, template: \"<thead #thead [ngStyle]=\\\"theadStyle\\\" [class.x-table-head-top]=\\\"position === 'top'\\\" [class.x-table-head-bottom]=\\\"position === 'bottom'\\\">\\r\\n  <ng-container *ngIf=\\\"cellConfig; else columnsTpl\\\">\\r\\n    <tr [style.gridTemplateColumns]=\\\"cellConfig.gridTemplateColumns\\\" [style.min-height.px]=\\\"getRowHeight\\\">\\r\\n      <th\\r\\n        *ngFor=\\\"let column of cellConfig.cells\\\"\\r\\n        [class.x-table-sticky]=\\\"table.getStickyLeft(column) || table.getStickyRight(column)\\\"\\r\\n        [class.x-table-sticky-left]=\\\"table.getStickyLeft(column)\\\"\\r\\n        [class.x-table-sticky-right]=\\\"table.getStickyRight(column)\\\"\\r\\n        [class.x-table-sticky-left-last]=\\\"table.getStickyLeftLast(column)\\\"\\r\\n        [class.x-table-sticky-right-first]=\\\"table.getStickyRightFirst(column)\\\"\\r\\n        [class.x-table-width-drag]=\\\"column.dragWidth\\\"\\r\\n        [style.grid-area]=\\\"column.gridArea\\\"\\r\\n        [style.left.px]=\\\"column.left\\\"\\r\\n        [style.right.px]=\\\"column.right\\\"\\r\\n        [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n        [title]=\\\"column?.label\\\"\\r\\n      >\\r\\n        <ng-container *ngTemplateOutlet=\\\"columnBaseTpl; context: { column: column }\\\"></ng-container>\\r\\n        <div *ngIf=\\\"column.dragWidth\\\" class=\\\"x-table-drag-width\\\" xDrag (draging)=\\\"dragWidth($event, column)\\\"></div>\\r\\n      </th>\\r\\n    </tr>\\r\\n  </ng-container>\\r\\n  <ng-container *ngIf=\\\"table.headSearchTpl\\\">\\r\\n    <ng-container *ngTemplateOutlet=\\\"columnsTpl; context: { case: 'search' }\\\"></ng-container>\\r\\n  </ng-container>\\r\\n</thead>\\r\\n\\r\\n<ng-template #columnsTpl let-case=\\\"case\\\">\\r\\n  <tr\\r\\n    [style.height.px]=\\\"getRowHeight\\\"\\r\\n    [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n    [style.padding-right.px]=\\\"scrollYWidth\\\"\\r\\n    [style.width.px]=\\\"scrollXWidth\\\"\\r\\n    [class.x-table-search]=\\\"case === 'search'\\\"\\r\\n  >\\r\\n    <th\\r\\n      *ngFor=\\\"let column of columns; trackBy: trackByItem\\\"\\r\\n      [class.x-table-sticky]=\\\"table.getStickyLeft(column) || table.getStickyRight(column)\\\"\\r\\n      [class.x-table-sticky-left]=\\\"table.getStickyLeft(column)\\\"\\r\\n      [class.x-table-sticky-right]=\\\"table.getStickyRight(column)\\\"\\r\\n      [class.x-table-sticky-left-last]=\\\"table.getStickyLeftLast(column)\\\"\\r\\n      [class.x-table-sticky-right-first]=\\\"table.getStickyRightFirst(column)\\\"\\r\\n      [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n      [style.width.px]=\\\"getColumnWidth(column)\\\"\\r\\n      [style.left.px]=\\\"column.left\\\"\\r\\n      [style.right.px]=\\\"getColumnRight(column.right)\\\"\\r\\n      [style.flex]=\\\"getFlex(column)\\\"\\r\\n    >\\r\\n      <ng-container [ngSwitch]=\\\"case\\\">\\r\\n        <ng-container *ngSwitchCase=\\\"'search'\\\">\\r\\n          <ng-container *ngTemplateOutlet=\\\"table.headSearchTpl; context: { $column: column }\\\"></ng-container>\\r\\n        </ng-container>\\r\\n        <ng-container *ngSwitchDefault>\\r\\n          <ng-container *ngTemplateOutlet=\\\"columnBaseTpl; context: { column: column }\\\"></ng-container>\\r\\n          <div *ngIf=\\\"column.dragWidth\\\" class=\\\"x-table-drag-width\\\" xDrag (draging)=\\\"dragWidth($event, column)\\\"></div>\\r\\n        </ng-container>\\r\\n      </ng-container>\\r\\n    </th>\\r\\n  </tr>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #columnBaseTpl let-column=\\\"column\\\">\\r\\n  <ng-container [ngSwitch]=\\\"column.type\\\">\\r\\n    <ng-container *ngSwitchCase=\\\"'checkbox'\\\">\\r\\n      <x-checkbox\\r\\n        *ngIf=\\\"column.headChecked\\\"\\r\\n        [data]=\\\"[{ id: true, label: column.label }]\\\"\\r\\n        [(ngModel)]=\\\"table.checkedValues[column.id]\\\"\\r\\n        (ngModelChange)=\\\"table.headChecked($event, column)\\\"\\r\\n        [indeterminate]=\\\"table.checkedValues[column.id + table.indeterminate]\\\"\\r\\n      ></x-checkbox>\\r\\n      <ng-container *ngIf=\\\"!column.headChecked\\\">\\r\\n        <ng-container *ngTemplateOutlet=\\\"cloumnDefaultTpl; context: { column: column }\\\"></ng-container>\\r\\n      </ng-container>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'index'\\\">\\r\\n      <a>{{ column.label }}</a>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchDefault>\\r\\n      <ng-container *ngTemplateOutlet=\\\"cloumnDefaultTpl; context: { column: column }\\\"></ng-container>\\r\\n    </ng-container>\\r\\n  </ng-container>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #cloumnDefaultTpl let-column=\\\"column\\\">\\r\\n  <a [class.x-table-sort]=\\\"column.sort\\\" (click)=\\\"onSort(column)\\\" [style.text-align]=\\\"column.textAlign\\\">\\r\\n    <ng-container *xOutlet=\\\"columnTpl[column.id]; context: { $column: column }\\\">\\r\\n      {{ column.label }}\\r\\n    </ng-container>\\r\\n    <x-icon\\r\\n      *ngIf=\\\"column.sort\\\"\\r\\n      type=\\\"fto-bar-chart\\\"\\r\\n      class=\\\"x-table-sort-icon\\\"\\r\\n      [class.x-table-icon-up]=\\\"sortStr === column.id + ' desc'\\\"\\r\\n      [class.x-table-icon-down]=\\\"sortStr === column.id + ' asc'\\\"\\r\\n    ></x-icon>\\r\\n  </a>\\r\\n</ng-template>\\r\\n\" }]\r\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.XConfigService }]; }, propDecorators: { thead: [{\r\n                type: ViewChild,\r\n                args: ['thead']\r\n            }], table: [{\r\n                type: Input\r\n            }] } });\n\nclass XTableBodyComponent extends XTableBodyProperty {\r\n    constructor(\r\n    // @Optional() @Host() public table: XTableComponent,\r\n    renderer, elementRef, cdr, doc, configService) {\r\n        super();\r\n        this.renderer = renderer;\r\n        this.elementRef = elementRef;\r\n        this.cdr = cdr;\r\n        this.doc = doc;\r\n        this.configService = configService;\r\n        this.tbodyStyle = {};\r\n        this._unSubject = new Subject();\r\n    }\r\n    get isEmpty() {\r\n        return this.data?.length === 0;\r\n    }\r\n    get getRowHeight() {\r\n        return this.rowHeight == 0 ? '' : this.rowHeight;\r\n    }\r\n    get getItemSize() {\r\n        return this.rowHeight !== 0 && this.itemSize > this.rowHeight ? this.rowHeight : this.itemSize;\r\n    }\r\n    ngOnChanges(simples) {\r\n        const { data, columns, activatedRow, mergeRule, expandedAll } = simples;\r\n        XIsChange(data, columns, activatedRow, mergeRule, expandedAll) && this.cdr.detectChanges();\r\n    }\r\n    ngOnInit() {\r\n        removeNgTag(this.elementRef.nativeElement);\r\n        if (this.level > 0)\r\n            removeNgTag(this.tbody.nativeElement);\r\n        if (this.scroll?.y && !this.bodyHeight) {\r\n            this.bodyHeight = this.scroll.y;\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        this.table.virtualBody = this.virtualBody;\r\n        this.table.bodyChange = () => this.cdr.detectChanges();\r\n        this.setSubject();\r\n        this.setScroll();\r\n    }\r\n    ngOnDestroy() {\r\n        this._unSubject.next();\r\n        this._unSubject.unsubscribe();\r\n        this._resizeObserver?.disconnect();\r\n    }\r\n    setSubject() {\r\n        if (this.virtualBody) {\r\n            this.table.scrollContentEle = this.virtualBody?.elementRef?.nativeElement.querySelector('.cdk-virtual-scroll-content-wrapper');\r\n            if (this.scroll?.x) {\r\n                this.renderer.setStyle(this.table.scrollContentEle, 'width', `${this.scroll.x}px`);\r\n            }\r\n            XResize(this.table.table.nativeElement, this.table.scrollContentEle)\r\n                .pipe(takeUntil(this._unSubject))\r\n                .subscribe((x) => {\r\n                this._resizeObserver = x.resizeObserver;\r\n                this.setAdaptionHeight();\r\n                this.setScroll();\r\n            });\r\n            fromEvent(window, 'resize')\r\n                .pipe(takeUntil(this._unSubject))\r\n                .subscribe(() => {\r\n                this.setAdaptionHeight();\r\n            });\r\n        }\r\n        if (this.table.scrollContentEle) {\r\n            fromEvent(this.virtualBody.elementRef.nativeElement, 'scroll')\r\n                .pipe(takeUntil(this._unSubject))\r\n                .subscribe((x) => {\r\n                const ele = x.srcElement;\r\n                this.table.scrollTop = ele.scrollTop;\r\n                this.table.scrollLeft = ele.scrollLeft;\r\n                if (ele.scrollLeft >= 0 && this.table.thead.length > 0) {\r\n                    for (let thead of this.table.thead) {\r\n                        thead.nativeElement.scrollLeft = this.table.scrollLeft;\r\n                    }\r\n                }\r\n                this.table.scrollLeftMax = ele.scrollLeft + ele.clientWidth === ele.scrollWidth;\r\n                this.table.cdr.detectChanges();\r\n            });\r\n        }\r\n    }\r\n    setScroll() {\r\n        if (!this.virtualBody)\r\n            return;\r\n        const ele = this.virtualBody.elementRef.nativeElement;\r\n        const hasY = ele.scrollHeight > this.bodyHeight;\r\n        const hasX = this.table.scrollContentEle.clientWidth > ele.clientWidth;\r\n        if (!this.table.hasScrollY && hasY) {\r\n            this.table.hasScrollY = true;\r\n            this.table.scrollYWidth = ele.offsetWidth - ele.clientWidth;\r\n        }\r\n        else if (this.table.hasScrollY && !hasY) {\r\n            this.table.hasScrollY = false;\r\n            this.table.scrollYWidth = 0;\r\n        }\r\n        if (!this.table.hasScrollX && hasX) {\r\n            this.table.hasScrollX = true;\r\n            this.table.scrollXHeight = ele.offsetHeight - ele.clientHeight;\r\n        }\r\n        else if (this.table.hasScrollX && !hasX) {\r\n            this.table.hasScrollX = false;\r\n            this.table.scrollXHeight = 0;\r\n            this.table.scrollXWidth = null;\r\n        }\r\n        if (hasX) {\r\n            this.table.scrollXWidth = ele.offsetWidth + ele.scrollWidth - ele.clientWidth;\r\n        }\r\n        this.table.cdr.detectChanges();\r\n    }\r\n    setStyle() {\r\n        let height = this.rowHeight == 0 ? '' : this.rowHeight;\r\n        if (this.cellConfig && this.cellConfig.cells) {\r\n            const spt = this.cellConfig.cells.map((x) => {\r\n                const gridAreaSpt = x.gridArea?.split('/');\r\n                return gridAreaSpt && gridAreaSpt.length > 3 ? Number(gridAreaSpt[2]) : 2;\r\n            });\r\n            height = ((Math.max(...spt) - 1) * height);\r\n        }\r\n        this.tbodyStyle = {\r\n            height: `${height}px`\r\n        };\r\n    }\r\n    getIndex(index, item) {\r\n        if (!isNaN(index))\r\n            return index;\r\n        return this.data.indexOf(item);\r\n    }\r\n    getFlex(column) {\r\n        if (column.width)\r\n            return 'none';\r\n        if (!column.flex)\r\n            return 1;\r\n        return column.flex;\r\n    }\r\n    getTitle(row, column) {\r\n        let it = row[column.id];\r\n        return it ? stripTags(it) : '';\r\n    }\r\n    setAdaptionHeight() {\r\n        if (this.adaptionHeight > 0) {\r\n            const captionHeight = this.table.tcaption?.nativeElement.clientHeight || 0;\r\n            let headHeight = 0;\r\n            for (let thead of this.table.thead) {\r\n                headHeight += thead.nativeElement.clientHeight;\r\n            }\r\n            const footHeight = this.table.tfoot?.nativeElement.clientHeight || 0;\r\n            const paginationHeight = this.table.pagination?.elementRef.nativeElement.clientHeight || 0;\r\n            this.bodyHeight =\r\n                Number(this.docPercent) * this.doc.documentElement.clientHeight -\r\n                    captionHeight -\r\n                    headHeight -\r\n                    footHeight -\r\n                    paginationHeight -\r\n                    Number(this.adaptionHeight);\r\n            if (this.bodyHeight < 0)\r\n                this.bodyHeight = 0;\r\n            this.minBufferPx = this.bodyHeight;\r\n            this.maxBufferPx = this.bodyHeight * 1.2;\r\n            this.virtualBody['_scrollStrategy']['_minBufferPx'] = this.minBufferPx;\r\n            this.virtualBody['_scrollStrategy']['_maxBufferPx'] = this.maxBufferPx;\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n    rowClick(event, row) {\r\n        this.activatedRow = row;\r\n        if (this.table.allowCheckRow && this.table.rowChecked) {\r\n            if (!Array.from(event.path).find((x) => x.localName == 'x-checkbox')) {\r\n                row[this.table.rowChecked.id] = !row[this.table.rowChecked.id];\r\n                this.table.bodyChecked(row[this.table.rowChecked.id], this.table.rowChecked);\r\n            }\r\n        }\r\n        this.activatedRowChange.emit(row);\r\n        this.cdr.detectChanges();\r\n    }\r\n    onExpanded(_event, node) {\r\n        node.expanded = !node.expanded;\r\n        this.cdr.detectChanges();\r\n    }\r\n    trackByItem(_index, item) {\r\n        return item.id;\r\n    }\r\n}\r\n/** @nocollapse */ XTableBodyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XTableBodyComponent, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: DOCUMENT }, { token: i1.XConfigService }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XTableBodyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XTableBodyComponent, selector: \"x-table-body\", inputs: { table: \"table\" }, viewQueries: [{ propertyName: \"tbody\", first: true, predicate: [\"tbody\"], descendants: true }, { propertyName: \"virtualBody\", first: true, predicate: [\"virtualBody\"], descendants: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<tbody #tbody>\\r\\n  <ng-container *ngIf=\\\"cellConfig; else virtualScrollTpl\\\">\\r\\n    <tr *ngFor=\\\"let row of data; index as i; trackBy: trackByItem\\\" [style.gridTemplateColumns]=\\\"cellConfig.gridTemplateColumns\\\">\\r\\n      <td\\r\\n        *ngFor=\\\"let column of cellConfig.cells; index as j\\\"\\r\\n        [title]=\\\"getTitle(row, column)\\\"\\r\\n        [class.x-table-sticky]=\\\"table.getStickyLeft(column) || table.getStickyRight(column)\\\"\\r\\n        [class.x-table-sticky-left]=\\\"table.getStickyLeft(column)\\\"\\r\\n        [class.x-table-sticky-right]=\\\"table.getStickyRight(column)\\\"\\r\\n        [class.x-table-sticky-left-last]=\\\"table.getStickyLeftLast(column)\\\"\\r\\n        [class.x-table-sticky-right-first]=\\\"table.getStickyRightFirst(column)\\\"\\r\\n        [style.left.px]=\\\"column.left\\\"\\r\\n        [style.right.px]=\\\"column.right\\\"\\r\\n        [style.grid-area]=\\\"column.gridArea\\\"\\r\\n      >\\r\\n        <ng-container *ngTemplateOutlet=\\\"cellTpl; context: { column: column, row: row, i: i }\\\"></ng-container>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </ng-container>\\r\\n  <x-empty *ngIf=\\\"isEmpty && level === 0\\\"></x-empty>\\r\\n</tbody>\\r\\n\\r\\n<ng-template #virtualScrollTpl>\\r\\n  <cdk-virtual-scroll-viewport\\r\\n    #virtualBody\\r\\n    *ngIf=\\\"virtualScroll; else bodyTpl\\\"\\r\\n    [itemSize]=\\\"getItemSize\\\"\\r\\n    [minBufferPx]=\\\"minBufferPx\\\"\\r\\n    [maxBufferPx]=\\\"maxBufferPx\\\"\\r\\n    [style.height.px]=\\\"bodyHeight\\\"\\r\\n  >\\r\\n    <tr\\r\\n      *cdkVirtualFor=\\\"let row of data; let index = index; trackBy: trackByItem\\\"\\r\\n      [class.x-table-activated]=\\\"allowSelectRow && activatedRow?.id === row.id\\\"\\r\\n      [style.height.px]=\\\"getRowHeight\\\"\\r\\n      [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n      (click)=\\\"rowClick($event, row)\\\"\\r\\n    >\\r\\n      <!-- rowHeight \\u4E3A 0 \\u7684\\u65F6\\u5019\\uFF0Cindex \\u4E0B\\u6807\\u83B7\\u53D6\\u4E0D\\u5230 -->\\r\\n      <ng-container *ngTemplateOutlet=\\\"rowTpl; context: { row: row, i: getIndex(index, row) }\\\"></ng-container>\\r\\n    </tr>\\r\\n  </cdk-virtual-scroll-viewport>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #bodyTpl>\\r\\n  <ng-container *ngFor=\\\"let row of data; index as i; trackBy: trackByItem\\\">\\r\\n    <tr\\r\\n      [class.x-table-activated]=\\\"allowSelectRow && activatedRow?.id === row.id\\\"\\r\\n      [style.height.px]=\\\"getRowHeight\\\"\\r\\n      [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n      (click)=\\\"rowClick($event, row)\\\"\\r\\n    >\\r\\n      <ng-container *ngTemplateOutlet=\\\"rowTpl; context: { row: row, i: i }\\\"></ng-container>\\r\\n    </tr>\\r\\n    <div class=\\\"x-table-children\\\" [class.x-table-expandTpl]=\\\"expandTpl\\\" *ngIf=\\\"table.treeTable && row.children && row.expanded\\\">\\r\\n      <x-table-body\\r\\n        [data]=\\\"row.children\\\"\\r\\n        [columns]=\\\"table.columns\\\"\\r\\n        [itemSize]=\\\"table.itemSize\\\"\\r\\n        [rowHeight]=\\\"table.rowHeight\\\"\\r\\n        [columnTpl]=\\\"table.bodyColumnTpl\\\"\\r\\n        [allowSelectRow]=\\\"table.allowSelectRow\\\"\\r\\n        [rowClass]=\\\"table.rowClass\\\"\\r\\n        [cellConfig]=\\\"table.cellConfig?.tbody\\\"\\r\\n        [(activatedRow)]=\\\"table.activatedRow\\\"\\r\\n        [expandedAll]=\\\"expandedAll\\\"\\r\\n        [expandTpl]=\\\"expandTpl\\\"\\r\\n        (activatedRowChange)=\\\"table.activatedRowChange.emit($event)\\\"\\r\\n        [level]=\\\"row.level! + 1\\\"\\r\\n        [table]=\\\"table\\\"\\r\\n      ></x-table-body>\\r\\n    </div>\\r\\n  </ng-container>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #rowTpl let-row=\\\"row\\\" let-i=\\\"i\\\">\\r\\n  <ng-container *ngIf=\\\"level > 0 && expandTpl\\\">\\r\\n    <ng-container *xOutlet=\\\"expandTpl; context: { $row: row, $index: i, $level: level }\\\"></ng-container>\\r\\n  </ng-container>\\r\\n  <ng-container *ngIf=\\\"level === 0 || !expandTpl\\\">\\r\\n    <ng-container *xOutlet=\\\"rowDefault; context: { row: row, i: i, level: level }\\\"></ng-container>\\r\\n  </ng-container>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #rowDefault let-row=\\\"row\\\" let-i=\\\"i\\\">\\r\\n  <ng-container *ngFor=\\\"let column of columns; index as j; trackBy: trackByItem\\\">\\r\\n    <td\\r\\n      [style.width.px]=\\\"column.width\\\"\\r\\n      [style.flex]=\\\"getFlex(column)\\\"\\r\\n      [title]=\\\"getTitle(row, column)\\\"\\r\\n      [class.x-table-sticky]=\\\"table.getStickyLeft(column) || table.getStickyRight(column)\\\"\\r\\n      [class.x-table-sticky-left]=\\\"table.getStickyLeft(column)\\\"\\r\\n      [class.x-table-sticky-right]=\\\"table.getStickyRight(column)\\\"\\r\\n      [class.x-table-sticky-left-last]=\\\"table.getStickyLeftLast(column)\\\"\\r\\n      [class.x-table-sticky-right-first]=\\\"table.getStickyRightFirst(column)\\\"\\r\\n      [style.left.px]=\\\"column.left\\\"\\r\\n      [style.right.px]=\\\"column.right\\\"\\r\\n      [ngClass]=\\\"!rowClass ? {} : rowClass(row, i)\\\"\\r\\n    >\\r\\n      <ng-template *ngTemplateOutlet=\\\"cellTpl; context: { column: column, row: row, i: i }\\\"></ng-template>\\r\\n    </td>\\r\\n  </ng-container>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #cellTpl let-column=\\\"column\\\" let-row=\\\"row\\\" let-i=\\\"i\\\">\\r\\n  <ng-container [ngSwitch]=\\\"column.type\\\">\\r\\n    <ng-container *ngSwitchCase=\\\"'checkbox'\\\">\\r\\n      <x-checkbox\\r\\n        [data]=\\\"[{ id: true, label: '' }]\\\"\\r\\n        [(ngModel)]=\\\"row[column.id]\\\"\\r\\n        (ngModelChange)=\\\"table.bodyChecked($event, column)\\\"\\r\\n      ></x-checkbox>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'index'\\\">\\r\\n      <div>{{ table.getIndex(i) }}</div>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchDefault>\\r\\n      <ng-container *ngIf=\\\"table.isExpandColumn(column)\\\">\\r\\n        <x-button\\r\\n          [class.is-leaf]=\\\"!row.leaf\\\"\\r\\n          [class.is-expanded]=\\\"row.expanded\\\"\\r\\n          (click)=\\\"onExpanded($event, row)\\\"\\r\\n          icon=\\\"fto-chevron-right\\\"\\r\\n          size=\\\"mini\\\"\\r\\n          onlyIcon\\r\\n          class=\\\"x-table-expand\\\"\\r\\n          [style.margin-left.rem]=\\\"row.level - 0.5\\\"\\r\\n        ></x-button>\\r\\n      </ng-container>\\r\\n      <ng-container *xOutlet=\\\"columnTpl[column.id]; context: { $column: column, $row: row, $index: table.getIndex(i) }\\\">\\r\\n        <ng-container *xOutlet=\\\"table.bodyTdTpl; context: { $column: column, $row: row, $index: table.getIndex(i) }\\\">\\r\\n          <div [innerHTML]=\\\"row[column.id]\\\" [style.text-align]=\\\"column.textAlign\\\"></div>\\r\\n          {{ table.rowExpandNext && table.rowExpandNext.id === column.id ? 'x-table-body-level-' + row.level : '' }}\\r\\n        </ng-container>\\r\\n      </ng-container>\\r\\n    </ng-container>\\r\\n  </ng-container>\\r\\n</ng-template>\\r\\n\", dependencies: [{ kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"directive\", type: i2.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }, { kind: \"directive\", type: i3.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i3.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i4.XOutletDirective, selector: \"[xOutlet]\", inputs: [\"xOutletContext\", \"xOutlet\"] }, { kind: \"component\", type: i5.XCheckboxComponent, selector: \"x-checkbox\" }, { kind: \"component\", type: i6$1.XButtonComponent, selector: \"x-button\" }, { kind: \"directive\", type: i7.CdkFixedSizeVirtualScroll, selector: \"cdk-virtual-scroll-viewport[itemSize]\", inputs: [\"itemSize\", \"minBufferPx\", \"maxBufferPx\"] }, { kind: \"directive\", type: i7.CdkVirtualForOf, selector: \"[cdkVirtualFor][cdkVirtualForOf]\", inputs: [\"cdkVirtualForOf\", \"cdkVirtualForTrackBy\", \"cdkVirtualForTemplate\", \"cdkVirtualForTemplateCacheSize\"] }, { kind: \"component\", type: i7.CdkVirtualScrollViewport, selector: \"cdk-virtual-scroll-viewport\", inputs: [\"orientation\", \"appendOnly\"], outputs: [\"scrolledIndexChange\"] }, { kind: \"component\", type: i8.XEmptyComponent, selector: \"x-empty\" }, { kind: \"component\", type: XTableBodyComponent, selector: \"x-table-body\", inputs: [\"table\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XTableBodyComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: `${XTableBodyPrefix}`, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<tbody #tbody>\\r\\n  <ng-container *ngIf=\\\"cellConfig; else virtualScrollTpl\\\">\\r\\n    <tr *ngFor=\\\"let row of data; index as i; trackBy: trackByItem\\\" [style.gridTemplateColumns]=\\\"cellConfig.gridTemplateColumns\\\">\\r\\n      <td\\r\\n        *ngFor=\\\"let column of cellConfig.cells; index as j\\\"\\r\\n        [title]=\\\"getTitle(row, column)\\\"\\r\\n        [class.x-table-sticky]=\\\"table.getStickyLeft(column) || table.getStickyRight(column)\\\"\\r\\n        [class.x-table-sticky-left]=\\\"table.getStickyLeft(column)\\\"\\r\\n        [class.x-table-sticky-right]=\\\"table.getStickyRight(column)\\\"\\r\\n        [class.x-table-sticky-left-last]=\\\"table.getStickyLeftLast(column)\\\"\\r\\n        [class.x-table-sticky-right-first]=\\\"table.getStickyRightFirst(column)\\\"\\r\\n        [style.left.px]=\\\"column.left\\\"\\r\\n        [style.right.px]=\\\"column.right\\\"\\r\\n        [style.grid-area]=\\\"column.gridArea\\\"\\r\\n      >\\r\\n        <ng-container *ngTemplateOutlet=\\\"cellTpl; context: { column: column, row: row, i: i }\\\"></ng-container>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </ng-container>\\r\\n  <x-empty *ngIf=\\\"isEmpty && level === 0\\\"></x-empty>\\r\\n</tbody>\\r\\n\\r\\n<ng-template #virtualScrollTpl>\\r\\n  <cdk-virtual-scroll-viewport\\r\\n    #virtualBody\\r\\n    *ngIf=\\\"virtualScroll; else bodyTpl\\\"\\r\\n    [itemSize]=\\\"getItemSize\\\"\\r\\n    [minBufferPx]=\\\"minBufferPx\\\"\\r\\n    [maxBufferPx]=\\\"maxBufferPx\\\"\\r\\n    [style.height.px]=\\\"bodyHeight\\\"\\r\\n  >\\r\\n    <tr\\r\\n      *cdkVirtualFor=\\\"let row of data; let index = index; trackBy: trackByItem\\\"\\r\\n      [class.x-table-activated]=\\\"allowSelectRow && activatedRow?.id === row.id\\\"\\r\\n      [style.height.px]=\\\"getRowHeight\\\"\\r\\n      [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n      (click)=\\\"rowClick($event, row)\\\"\\r\\n    >\\r\\n      <!-- rowHeight \\u4E3A 0 \\u7684\\u65F6\\u5019\\uFF0Cindex \\u4E0B\\u6807\\u83B7\\u53D6\\u4E0D\\u5230 -->\\r\\n      <ng-container *ngTemplateOutlet=\\\"rowTpl; context: { row: row, i: getIndex(index, row) }\\\"></ng-container>\\r\\n    </tr>\\r\\n  </cdk-virtual-scroll-viewport>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #bodyTpl>\\r\\n  <ng-container *ngFor=\\\"let row of data; index as i; trackBy: trackByItem\\\">\\r\\n    <tr\\r\\n      [class.x-table-activated]=\\\"allowSelectRow && activatedRow?.id === row.id\\\"\\r\\n      [style.height.px]=\\\"getRowHeight\\\"\\r\\n      [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n      (click)=\\\"rowClick($event, row)\\\"\\r\\n    >\\r\\n      <ng-container *ngTemplateOutlet=\\\"rowTpl; context: { row: row, i: i }\\\"></ng-container>\\r\\n    </tr>\\r\\n    <div class=\\\"x-table-children\\\" [class.x-table-expandTpl]=\\\"expandTpl\\\" *ngIf=\\\"table.treeTable && row.children && row.expanded\\\">\\r\\n      <x-table-body\\r\\n        [data]=\\\"row.children\\\"\\r\\n        [columns]=\\\"table.columns\\\"\\r\\n        [itemSize]=\\\"table.itemSize\\\"\\r\\n        [rowHeight]=\\\"table.rowHeight\\\"\\r\\n        [columnTpl]=\\\"table.bodyColumnTpl\\\"\\r\\n        [allowSelectRow]=\\\"table.allowSelectRow\\\"\\r\\n        [rowClass]=\\\"table.rowClass\\\"\\r\\n        [cellConfig]=\\\"table.cellConfig?.tbody\\\"\\r\\n        [(activatedRow)]=\\\"table.activatedRow\\\"\\r\\n        [expandedAll]=\\\"expandedAll\\\"\\r\\n        [expandTpl]=\\\"expandTpl\\\"\\r\\n        (activatedRowChange)=\\\"table.activatedRowChange.emit($event)\\\"\\r\\n        [level]=\\\"row.level! + 1\\\"\\r\\n        [table]=\\\"table\\\"\\r\\n      ></x-table-body>\\r\\n    </div>\\r\\n  </ng-container>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #rowTpl let-row=\\\"row\\\" let-i=\\\"i\\\">\\r\\n  <ng-container *ngIf=\\\"level > 0 && expandTpl\\\">\\r\\n    <ng-container *xOutlet=\\\"expandTpl; context: { $row: row, $index: i, $level: level }\\\"></ng-container>\\r\\n  </ng-container>\\r\\n  <ng-container *ngIf=\\\"level === 0 || !expandTpl\\\">\\r\\n    <ng-container *xOutlet=\\\"rowDefault; context: { row: row, i: i, level: level }\\\"></ng-container>\\r\\n  </ng-container>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #rowDefault let-row=\\\"row\\\" let-i=\\\"i\\\">\\r\\n  <ng-container *ngFor=\\\"let column of columns; index as j; trackBy: trackByItem\\\">\\r\\n    <td\\r\\n      [style.width.px]=\\\"column.width\\\"\\r\\n      [style.flex]=\\\"getFlex(column)\\\"\\r\\n      [title]=\\\"getTitle(row, column)\\\"\\r\\n      [class.x-table-sticky]=\\\"table.getStickyLeft(column) || table.getStickyRight(column)\\\"\\r\\n      [class.x-table-sticky-left]=\\\"table.getStickyLeft(column)\\\"\\r\\n      [class.x-table-sticky-right]=\\\"table.getStickyRight(column)\\\"\\r\\n      [class.x-table-sticky-left-last]=\\\"table.getStickyLeftLast(column)\\\"\\r\\n      [class.x-table-sticky-right-first]=\\\"table.getStickyRightFirst(column)\\\"\\r\\n      [style.left.px]=\\\"column.left\\\"\\r\\n      [style.right.px]=\\\"column.right\\\"\\r\\n      [ngClass]=\\\"!rowClass ? {} : rowClass(row, i)\\\"\\r\\n    >\\r\\n      <ng-template *ngTemplateOutlet=\\\"cellTpl; context: { column: column, row: row, i: i }\\\"></ng-template>\\r\\n    </td>\\r\\n  </ng-container>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #cellTpl let-column=\\\"column\\\" let-row=\\\"row\\\" let-i=\\\"i\\\">\\r\\n  <ng-container [ngSwitch]=\\\"column.type\\\">\\r\\n    <ng-container *ngSwitchCase=\\\"'checkbox'\\\">\\r\\n      <x-checkbox\\r\\n        [data]=\\\"[{ id: true, label: '' }]\\\"\\r\\n        [(ngModel)]=\\\"row[column.id]\\\"\\r\\n        (ngModelChange)=\\\"table.bodyChecked($event, column)\\\"\\r\\n      ></x-checkbox>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'index'\\\">\\r\\n      <div>{{ table.getIndex(i) }}</div>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchDefault>\\r\\n      <ng-container *ngIf=\\\"table.isExpandColumn(column)\\\">\\r\\n        <x-button\\r\\n          [class.is-leaf]=\\\"!row.leaf\\\"\\r\\n          [class.is-expanded]=\\\"row.expanded\\\"\\r\\n          (click)=\\\"onExpanded($event, row)\\\"\\r\\n          icon=\\\"fto-chevron-right\\\"\\r\\n          size=\\\"mini\\\"\\r\\n          onlyIcon\\r\\n          class=\\\"x-table-expand\\\"\\r\\n          [style.margin-left.rem]=\\\"row.level - 0.5\\\"\\r\\n        ></x-button>\\r\\n      </ng-container>\\r\\n      <ng-container *xOutlet=\\\"columnTpl[column.id]; context: { $column: column, $row: row, $index: table.getIndex(i) }\\\">\\r\\n        <ng-container *xOutlet=\\\"table.bodyTdTpl; context: { $column: column, $row: row, $index: table.getIndex(i) }\\\">\\r\\n          <div [innerHTML]=\\\"row[column.id]\\\" [style.text-align]=\\\"column.textAlign\\\"></div>\\r\\n          {{ table.rowExpandNext && table.rowExpandNext.id === column.id ? 'x-table-body-level-' + row.level : '' }}\\r\\n        </ng-container>\\r\\n      </ng-container>\\r\\n    </ng-container>\\r\\n  </ng-container>\\r\\n</ng-template>\\r\\n\" }]\r\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [DOCUMENT]\r\n                }] }, { type: i1.XConfigService }]; }, propDecorators: { tbody: [{\r\n                type: ViewChild,\r\n                args: ['tbody']\r\n            }], virtualBody: [{\r\n                type: ViewChild,\r\n                args: ['virtualBody']\r\n            }], table: [{\r\n                type: Input\r\n            }] } });\n\nclass XTableFootComponent extends XTableFootProperty {\r\n    constructor(\r\n    // @Optional() @Host() public table: XTableComponent,\r\n    renderer, elementRef, cdr) {\r\n        super();\r\n        this.renderer = renderer;\r\n        this.elementRef = elementRef;\r\n        this.cdr = cdr;\r\n    }\r\n    get getRowHeight() {\r\n        return this.rowHeight == 0 ? '' : this.rowHeight;\r\n    }\r\n    ngOnInit() {\r\n        removeNgTag(this.elementRef.nativeElement);\r\n    }\r\n    ngAfterViewInit() {\r\n        this.table.tfoot = this.tfoot;\r\n    }\r\n}\r\n/** @nocollapse */ XTableFootComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XTableFootComponent, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XTableFootComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XTableFootComponent, selector: \"x-table-foot\", inputs: { table: \"table\" }, viewQueries: [{ propertyName: \"tfoot\", first: true, predicate: [\"tfoot\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<tfoot #tfoot class=\\\"x-table-footer\\\" [style.height.px]=\\\"getRowHeight\\\" [style.min-height.px]=\\\"getRowHeight\\\">\\r\\n  <ng-container *xOutlet=\\\"footer\\\">{{ footer }}</ng-container>\\r\\n</tfoot>\\r\\n\", dependencies: [{ kind: \"directive\", type: i4.XOutletDirective, selector: \"[xOutlet]\", inputs: [\"xOutletContext\", \"xOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XTableFootComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: `${XTableFootPrefix}`, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<tfoot #tfoot class=\\\"x-table-footer\\\" [style.height.px]=\\\"getRowHeight\\\" [style.min-height.px]=\\\"getRowHeight\\\">\\r\\n  <ng-container *xOutlet=\\\"footer\\\">{{ footer }}</ng-container>\\r\\n</tfoot>\\r\\n\" }]\r\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { tfoot: [{\r\n                type: ViewChild,\r\n                args: ['tfoot']\r\n            }], table: [{\r\n                type: Input\r\n            }] } });\n\nclass XTableComponent extends XTableProperty {\r\n    constructor(renderer, elementRef, cdr, configService) {\r\n        super();\r\n        this.renderer = renderer;\r\n        this.elementRef = elementRef;\r\n        this.cdr = cdr;\r\n        this.configService = configService;\r\n        this.thead = [];\r\n        this.hasScrollY = false;\r\n        this.scrollYWidth = 0;\r\n        this.hasScrollX = false;\r\n        this.scrollXHeight = 0;\r\n        this.scrollLeft = 0;\r\n        this.scrollLeftMax = false;\r\n        this.scrollTop = 0;\r\n        this.dataIsFunc = false;\r\n        this.getting = false;\r\n        this.tableData = [];\r\n        this.treeTableData = [];\r\n        this.checkedValues = {};\r\n        this.indeterminate = '$$indeterminate';\r\n        this._unSubject = new Subject();\r\n    }\r\n    get getScrollLeft() {\r\n        return this.scrollLeft > 0;\r\n    }\r\n    get getScrollTop() {\r\n        return this.scrollTop > 0;\r\n    }\r\n    get getRowHeight() {\r\n        return this.rowHeight == 0 ? '' : this.rowHeight;\r\n    }\r\n    get getStickyTopScrollTop() {\r\n        return this.tcaption ? this.tcaption.nativeElement.offsetHeight : 0;\r\n    }\r\n    get getStickyBottomScrollTop() {\r\n        let top = 0;\r\n        if (this.footer && this.tfoot) {\r\n            top += this.tfoot?.nativeElement.clientHeight + 1;\r\n        }\r\n        return top;\r\n    }\r\n    get getStickyTopRightEleHeight() {\r\n        if (this.stickyTopRightEle) {\r\n            return this.stickyTopRightEle.nativeElement.offsetHeight;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    get getStickyBottomRightEleHeight() {\r\n        if (this.stickyBottomRightEle) {\r\n            return this.stickyBottomRightEle.nativeElement.offsetHeight;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.setClassMap();\r\n        this.setRowChecked();\r\n        this.setRowExpand();\r\n        this.setMerge();\r\n        this.setPaginationPosition();\r\n    }\r\n    ngOnChanges(simples) {\r\n        const { data, checkedRow, columns, activatedRow, manual, showPagination, expandedAll } = simples;\r\n        XIsChange(expandedAll) && this.setExpandedAll();\r\n        XIsChange(data, checkedRow) && this.setData();\r\n        XIsChange(columns, activatedRow, showPagination) && this.cdr.detectChanges();\r\n        XIsChange(manual) && this.setManual();\r\n    }\r\n    ngOnDestroy() {\r\n        this._unSubject.next();\r\n        this._unSubject.complete();\r\n    }\r\n    ngAfterViewInit() {\r\n        this.tcaption = this.caption;\r\n    }\r\n    setClassMap() {\r\n        this.classMap = {\r\n            [`${XTablePrefix}-row-size-${this.rowSize}`]: !XIsEmpty(this.rowSize)\r\n        };\r\n        this.cdr.detectChanges();\r\n    }\r\n    setPaginationPosition() {\r\n        this.renderer.addClass(this.elementRef.nativeElement, `x-table-${this.paginationPosition}`);\r\n    }\r\n    getStickyLeft(column) {\r\n        return Number(column.left) >= 0;\r\n    }\r\n    getStickyLeftLast(column) {\r\n        let lefts = this.columns.filter((x) => Number(x.left) >= 0);\r\n        if (lefts.length === 0)\r\n            return false;\r\n        return lefts[lefts.length - 1].id === column.id;\r\n    }\r\n    getStickyRight(column) {\r\n        return Number(column.right) >= 0;\r\n    }\r\n    getStickyRightFirst(column) {\r\n        let rights = this.columns.filter((x) => Number(x.right) >= 0);\r\n        if (rights.length === 0)\r\n            return false;\r\n        return rights[0].id === column.id;\r\n    }\r\n    hasStickyTopRight() {\r\n        return (this.showHeader &&\r\n            (this.headerPosition === 'top' || this.headerPosition === 'top-bottom') &&\r\n            this.columns.some((x) => Number(x.right) >= 0));\r\n    }\r\n    hasStickyTopRightSearch() {\r\n        return this.headSearchTpl ? true : false;\r\n    }\r\n    hasStickyBottomRight() {\r\n        return (this.showHeader &&\r\n            (this.headerPosition === 'bottom' || this.headerPosition === 'top-bottom') &&\r\n            this.columns.some((x) => Number(x.right) >= 0));\r\n    }\r\n    getIndex(index) {\r\n        return (Number(this.index) - 1) * Number(this.size) + index + 1;\r\n    }\r\n    setData() {\r\n        if (Array.isArray(this.data)) {\r\n            this.dataIsFunc = false;\r\n            this.setChecked(this.data);\r\n            this.setHeadCheckboxList(this.data);\r\n            this.setExpand(this.data);\r\n            this.setHeadExpandList();\r\n            this.tableData = this.data;\r\n            this.detectChanges();\r\n        }\r\n        else if (this.data instanceof Function) {\r\n            this.dataIsFunc = true;\r\n            this.getDataByFunc();\r\n        }\r\n    }\r\n    getDataByFunc() {\r\n        if (!this.manual)\r\n            return;\r\n        this.getting = true;\r\n        this.cdr.detectChanges();\r\n        this._unSubject.next();\r\n        this.data(this.index, this.size, this.query)\r\n            .pipe(takeUntil(this._unSubject))\r\n            .subscribe((x) => {\r\n            let [data, total] = [x.list, x.total];\r\n            if (this.virtualBody) {\r\n                this.virtualBody.scrollToIndex(0);\r\n                this.virtualBody.checkViewportSize();\r\n            }\r\n            this.getting = false;\r\n            this.setChecked(data);\r\n            this.setHeadCheckboxList(data);\r\n            this.setExpand(data);\r\n            this.setHeadExpandList();\r\n            this.tableData = data;\r\n            this.total = total;\r\n            this.detectChanges();\r\n        });\r\n    }\r\n    setManual() {\r\n        if (this.dataIsFunc)\r\n            this.getDataByFunc();\r\n    }\r\n    setRowChecked() {\r\n        this.rowChecked = this.columns.find((x) => x.rowChecked);\r\n        this.headCheckboxList = this.columns.filter((x) => x.type === 'checkbox' && x.headChecked);\r\n    }\r\n    setRowExpand() {\r\n        this.rowExpand = this.columns.find((x) => x.rowExpand);\r\n    }\r\n    isExpandColumn(column) {\r\n        let expandColumn = this.columns.find((x) => x.id === column.id && x.type === 'expand');\r\n        if (expandColumn) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    setMerge() {\r\n        if (!this.cellConfig)\r\n            return;\r\n        const setRule = (rule) => {\r\n            if (!rule)\r\n                return;\r\n            let gridTemplateColumns = '', cells = [];\r\n            if (!rule.gridTemplateColumns) {\r\n                gridTemplateColumns = `${this.columns\r\n                    .map((x) => {\r\n                    if (x.width)\r\n                        return x.width;\r\n                    if (x.flex)\r\n                        return `${x.flex}fr`;\r\n                    return '1fr';\r\n                })\r\n                    .join(' ')}`;\r\n            }\r\n            if (!rule.cells)\r\n                return;\r\n            cells = rule.cells.map((y) => {\r\n                const col = this.columns.find((z) => z.id === y.id);\r\n                if (col) {\r\n                    return { ...col, ...y };\r\n                }\r\n                return y;\r\n            });\r\n            return { gridTemplateColumns, cells };\r\n        };\r\n        this.cellConfig.thead = setRule(this.cellConfig.thead);\r\n        this.cellConfig.tbody = setRule(this.cellConfig.tbody);\r\n    }\r\n    change(index) {\r\n        this.index = index;\r\n        this.dataIsFunc && this.getDataByFunc();\r\n        this.indexChange.emit(index);\r\n        this.resetScroll();\r\n    }\r\n    resetScroll(x = true, y = true) {\r\n        if (this.hasScrollX && x)\r\n            this.virtualBody?.scrollTo({ left: 0 });\r\n        if (this.hasScrollY && y)\r\n            this.virtualBody?.scrollTo({ top: 0 });\r\n    }\r\n    setChecked(data) {\r\n        let result = [];\r\n        if (XIsEmpty(data) || !this.checkedRow)\r\n            return;\r\n        for (let key in this.checkedRow) {\r\n            const arr = this.checkedRow[key];\r\n            for (let item of data) {\r\n                item[key] = arr.includes(item.id);\r\n                result = [...result, item];\r\n            }\r\n        }\r\n        if (result.length > 0)\r\n            data = [...result];\r\n    }\r\n    setHeadCheckboxList(data) {\r\n        if (XIsEmpty(data) || !this.headCheckboxList)\r\n            return;\r\n        for (let column of this.headCheckboxList) {\r\n            this.setCheckedValues(column);\r\n        }\r\n    }\r\n    setExpand(data) {\r\n        const getChildren = (node, level) => {\r\n            node.level = level;\r\n            node.expanded = Boolean(this.expandedAll) || level <= this.expandedLevel || this.expanded.includes(node.id);\r\n            if (XIsUndefined(node.children))\r\n                node.children = data.filter((y) => y.pid === node.id);\r\n            if (XIsUndefined(node.leaf))\r\n                node.leaf = node.children?.length > 0;\r\n            if (node.leaf)\r\n                node.children?.map((y) => getChildren(y, level + 1));\r\n            return node;\r\n        };\r\n        this.treeTableData = data\r\n            .filter((x) => XIsEmpty(x.pid))\r\n            .map((x, index) => {\r\n            if (XIsUndefined(x.id))\r\n                x.id = index + 1;\r\n            return getChildren(x, 0);\r\n        });\r\n    }\r\n    setExpandedAll() {\r\n        if (!this.treeTable || this.treeTableData?.length === 0)\r\n            return;\r\n        const setChildren = (nodes) => {\r\n            if (XIsEmpty(nodes))\r\n                return;\r\n            nodes.forEach((x) => {\r\n                x.expanded = Boolean(this.expandedAll);\r\n                setChildren(x.children);\r\n            });\r\n        };\r\n        setChildren(this.treeTableData);\r\n        this.detectChanges();\r\n    }\r\n    setHeadExpandList() { }\r\n    checkSort(sort) {\r\n        if (!this.dataIsFunc)\r\n            return;\r\n        if (typeof this.query === 'undefined')\r\n            this.query = {};\r\n        this.query.sort = sort;\r\n        this.queryChange.emit(this.query);\r\n        this.getDataByFunc();\r\n    }\r\n    headChecked(checked, column) {\r\n        this.tableData.forEach((x) => {\r\n            x[column.id] = checked;\r\n        });\r\n        this.setCheckedValues(column);\r\n        this.detectChanges();\r\n    }\r\n    bodyChecked(_checked, column) {\r\n        this.setCheckedValues(column);\r\n        this.detectChanges();\r\n    }\r\n    setCheckedValues(column) {\r\n        const count = this.tableData.length;\r\n        const checkedLen = this.tableData.filter((x) => x[column.id]).length;\r\n        this.checkedValues[column.id] = count === checkedLen;\r\n        this.checkedValues[column.id + this.indeterminate] = checkedLen > 0 && checkedLen < count;\r\n    }\r\n    detectChanges() {\r\n        this.bodyChange && this.bodyChange();\r\n        this.headChange && this.headChange();\r\n        this.cdr.detectChanges();\r\n    }\r\n}\r\n/** @nocollapse */ XTableComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XTableComponent, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.XConfigService }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XTableComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XTableComponent, selector: \"x-table\", viewQueries: [{ propertyName: \"table\", first: true, predicate: [\"table\"], descendants: true }, { propertyName: \"caption\", first: true, predicate: [\"caption\"], descendants: true }, { propertyName: \"pagination\", first: true, predicate: [\"pagination\"], descendants: true }, { propertyName: \"stickyTopRightEle\", first: true, predicate: [\"stickyTopRightEle\"], descendants: true }, { propertyName: \"stickyBottomRightEle\", first: true, predicate: [\"stickyBottomRightEle\"], descendants: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<table\\r\\n  #table\\r\\n  class=\\\"x-table\\\"\\r\\n  [ngClass]=\\\"classMap\\\"\\r\\n  [x-loading]=\\\"loading && getting\\\"\\r\\n  [class.x-table-scroll-left]=\\\"getScrollLeft\\\"\\r\\n  [class.x-table-scroll-left-max]=\\\"scrollLeftMax\\\"\\r\\n  [class.x-table-scroll-top]=\\\"getScrollTop\\\"\\r\\n  [class.x-table-has-scroll-right]=\\\"scrollYWidth\\\"\\r\\n  [class.x-table-has-scroll-bottom]=\\\"scrollXWidth\\\"\\r\\n  [class.x-table-bordered]=\\\"bordered\\\"\\r\\n  [class.x-table-td-adaption-height]=\\\"rowHeight == 0\\\"\\r\\n  [class.x-table-cell-config]=\\\"cellConfig\\\"\\r\\n>\\r\\n  <caption #caption class=\\\"x-table-header\\\" *ngIf=\\\"header\\\" [style.height.px]=\\\"getRowHeight\\\" [style.min-height.px]=\\\"getRowHeight\\\">\\r\\n    <ng-container *xOutlet=\\\"header\\\">{{ header }}</ng-container>\\r\\n  </caption>\\r\\n  <x-table-head\\r\\n    *ngIf=\\\"showHeader && (headerPosition === 'top' || headerPosition === 'top-bottom')\\\"\\r\\n    [columns]=\\\"columns\\\"\\r\\n    [rowHeight]=\\\"rowHeight\\\"\\r\\n    [columnTpl]=\\\"headColumnTpl\\\"\\r\\n    [scrollYWidth]=\\\"scrollYWidth\\\"\\r\\n    [scrollXWidth]=\\\"scrollXWidth\\\"\\r\\n    [cellConfig]=\\\"cellConfig?.thead\\\"\\r\\n    [position]=\\\"'top'\\\"\\r\\n    [table]=\\\"this\\\"\\r\\n  ></x-table-head>\\r\\n  <x-table-body\\r\\n    [data]=\\\"treeTable ? treeTableData : tableData\\\"\\r\\n    [columns]=\\\"columns\\\"\\r\\n    [itemSize]=\\\"itemSize\\\"\\r\\n    [rowHeight]=\\\"rowHeight\\\"\\r\\n    [bodyHeight]=\\\"bodyHeight\\\"\\r\\n    [columnTpl]=\\\"bodyColumnTpl\\\"\\r\\n    [allowSelectRow]=\\\"allowSelectRow\\\"\\r\\n    [virtualScroll]=\\\"virtualScroll\\\"\\r\\n    [minBufferPx]=\\\"minBufferPx\\\"\\r\\n    [maxBufferPx]=\\\"maxBufferPx\\\"\\r\\n    [adaptionHeight]=\\\"adaptionHeight\\\"\\r\\n    [docPercent]=\\\"docPercent\\\"\\r\\n    [scroll]=\\\"scroll\\\"\\r\\n    [rowClass]=\\\"rowClass\\\"\\r\\n    [cellConfig]=\\\"cellConfig?.tbody\\\"\\r\\n    [expandedAll]=\\\"expandedAll\\\"\\r\\n    [expandTpl]=\\\"expandTpl\\\"\\r\\n    [(activatedRow)]=\\\"activatedRow\\\"\\r\\n    (activatedRowChange)=\\\"activatedRowChange.emit($event)\\\"\\r\\n    [table]=\\\"this\\\"\\r\\n  ></x-table-body>\\r\\n  <x-table-head\\r\\n    *ngIf=\\\"showHeader && (headerPosition === 'bottom' || headerPosition === 'top-bottom')\\\"\\r\\n    [columns]=\\\"columns\\\"\\r\\n    [rowHeight]=\\\"rowHeight\\\"\\r\\n    [columnTpl]=\\\"headColumnTpl\\\"\\r\\n    [scrollYWidth]=\\\"scrollYWidth\\\"\\r\\n    [scrollXWidth]=\\\"scrollXWidth\\\"\\r\\n    [cellConfig]=\\\"cellConfig?.thead\\\"\\r\\n    [position]=\\\"'bottom'\\\"\\r\\n    [table]=\\\"this\\\"\\r\\n  ></x-table-head>\\r\\n  <x-table-foot *ngIf=\\\"footer\\\" [table]=\\\"this\\\" [footer]=\\\"footer\\\" [rowHeight]=\\\"rowHeight\\\"></x-table-foot>\\r\\n  <div\\r\\n    *ngIf=\\\"hasStickyTopRight()\\\"\\r\\n    #stickyTopRightEle\\r\\n    class=\\\"x-table-sticky-right-scroll\\\"\\r\\n    [class.x-table-border-bottom]=\\\"headSearchTpl\\\"\\r\\n    [style.top.px]=\\\"getStickyTopScrollTop\\\"\\r\\n    [style.width.px]=\\\"scrollYWidth\\\"\\r\\n    [style.height.px]=\\\"getRowHeight\\\"\\r\\n    [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n  ></div>\\r\\n  <div\\r\\n    *ngIf=\\\"hasStickyTopRight() && headSearchTpl\\\"\\r\\n    class=\\\"x-table-sticky-right-scroll\\\"\\r\\n    [style.top.px]=\\\"getStickyTopScrollTop + getStickyTopRightEleHeight\\\"\\r\\n    [style.width.px]=\\\"scrollYWidth\\\"\\r\\n    [style.height.px]=\\\"getRowHeight\\\"\\r\\n    [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n  ></div>\\r\\n  <div\\r\\n    *ngIf=\\\"hasStickyBottomRight()\\\"\\r\\n    #stickyBottomRightEle\\r\\n    class=\\\"x-table-sticky-right-scroll\\\"\\r\\n    [style.bottom.px]=\\\"getStickyBottomScrollTop\\\"\\r\\n    [style.width.px]=\\\"scrollYWidth\\\"\\r\\n    [style.height.px]=\\\"getRowHeight\\\"\\r\\n    [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n  ></div>\\r\\n  <div\\r\\n    *ngIf=\\\"hasStickyBottomRight() && headSearchTpl\\\"\\r\\n    class=\\\"x-table-sticky-right-scroll\\\"\\r\\n    [class.x-table-border-bottom]=\\\"headSearchTpl\\\"\\r\\n    [style.bottom.px]=\\\"getStickyBottomScrollTop + getStickyBottomRightEleHeight\\\"\\r\\n    [style.width.px]=\\\"scrollYWidth\\\"\\r\\n    [style.height.px]=\\\"getRowHeight\\\"\\r\\n    [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n  ></div>\\r\\n</table>\\r\\n<x-pagination\\r\\n  #pagination\\r\\n  *ngIf=\\\"showPagination && size\\\"\\r\\n  [(index)]=\\\"index\\\"\\r\\n  [(size)]=\\\"size\\\"\\r\\n  [(query)]=\\\"query\\\"\\r\\n  [total]=\\\"total\\\"\\r\\n  (indexChange)=\\\"change($event)\\\"\\r\\n  [showEllipsis]=\\\"showEllipsis\\\"\\r\\n  [showTotal]=\\\"showTotal\\\"\\r\\n  [space]=\\\"space\\\"\\r\\n  [hiddenBorder]=\\\"hiddenBorder\\\"\\r\\n>\\r\\n</x-pagination>\\r\\n\", styles: [\".x-table{margin:0;padding:0;display:flex;flex-direction:column;border-collapse:collapse;width:100%;border:var(--x-border-width) var(--x-border-style) var(--x-border);position:relative}.x-table>thead{position:relative;overflow:hidden;display:block;background-color:var(--x-background);min-height:42px}.x-table>thead>tr{width:100%;display:flex;min-height:42px}.x-table>thead>tr>th{display:flex;align-items:center;flex:1;position:relative;font-weight:600;background-color:var(--x-background);border-bottom:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table>thead>tr>th>a{display:inline-flex;align-items:center;color:var(--x-text-300);overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.x-table>thead>tr>th.x-table-sticky{position:sticky;z-index:5}.x-table>thead>tr>th .x-table-drag-width{position:absolute;height:100%;width:.1875rem;right:-.125rem;cursor:ew-resize;transition:background-color var(--x-animation-duration-fast);z-index:1}.x-table>thead>tr>th .x-table-drag-width:hover{background-color:var(--x-primary)}.x-table>thead.x-table-head-bottom>tr>th{border-bottom:none}.x-table>thead.x-table-head-bottom>tr.x-table-search>th{border-top:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table>tbody{display:block;border-top:none;position:relative;min-height:7rem}.x-table>tbody tr{display:flex}.x-table>tbody tr>td{display:flex;align-items:center;position:relative;justify-content:space-between;overflow:hidden;background-color:var(--x-background);border-bottom:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table>tbody tr>td>div{flex:1;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.x-table>tbody tr>td.x-table-sticky{position:sticky;z-index:5}.x-table>tbody tr>td>x-button .x-icon{transition:var(--x-animation-duration-base)}.x-table>tbody tr>td>x-button.is-leaf{visibility:hidden}.x-table>tbody tr>td>x-button.is-expanded .x-icon{transform:rotate(90deg)}.x-table>tbody tr.x-table-activated>td{background-color:var(--x-background-a200);color:var(--x-primary)}.x-table>tbody tr:hover>td{background-color:var(--x-background-a200)}.x-table>tbody tr:last-child{border-bottom:none}.x-table>tbody x-empty{position:absolute;top:0;width:100%;padding:calc(var(--x-font-size) * 2)}.x-table-sort{cursor:pointer;transition:transform .2s}.x-table-sort:hover{color:var(--x-text-300)}.x-table-sort:active{transform:translate(1px,1px)}.x-table-sort-icon.x-icon{margin-left:.25rem;display:none;font-size:1rem;transform:rotate(90deg) rotateY(180deg);transition:.3s}.x-table-sort-icon.x-icon.x-table-icon-up,.x-table-sort-icon.x-icon.x-table-icon-down{display:inherit}.x-table-sort-icon.x-icon.x-table-icon-down{transform:rotate(90deg)}.x-table-scroll-top>thead{box-shadow:0 var(--x-box-shadow-light-width) var(--x-box-shadow-light-width) var(--x-box-shadow-light-color);z-index:1}.x-table-scroll-left .x-table-sticky-left-last{box-shadow:var(--x-box-shadow-light-width) var(--x-box-shadow-light-width) var(--x-box-shadow-light-width) var(--x-box-shadow-light-color);border-right:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table-td-adaption-height>tbody tr>td{overflow:inherit}.x-table-td-adaption-height>tbody tr>td>div{white-space:inherit;text-overflow:inherit;overflow:inherit}.x-table-bordered>thead>tr>th,.x-table-bordered>tbody tr>td{border-right:var(--x-border-width) var(--x-border-style) var(--x-border);padding-left:calc(var(--x-font-size) / 2)}.x-table-bordered>thead>tr>th:last-child,.x-table-bordered>tbody tr>td:last-child{border-right:none}.x-table-cell-config>thead tr,.x-table-cell-config>tbody tr{display:grid;grid-auto-flow:row;height:100%}.x-table-cell-config>thead>tr>th,.x-table-cell-config>tbody tr>td{border-right:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table-cell-config>thead>tr>th:last-child,.x-table-cell-config>tbody tr>td:last-child{border-right:none}.x-table-expand{margin-right:.5rem}.x-table-expandTpl>tr{display:block!important;height:inherit!important}.x-table-header{border-bottom:var(--x-border-width) var(--x-border-style) var(--x-border);text-align:left;display:flex;align-items:center}.x-table-footer{display:flex;align-items:center}.x-table-sticky-right-scroll{position:absolute;right:0;min-height:42px;background-color:var(--x-background);z-index:1}.x-table-has-scroll-right .x-table-footer{border-top:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table-has-scroll-bottom:not(.x-table-scroll-left-max) .x-table-sticky-right-first{box-shadow:var(--x-box-shadow-light-width-minus) var(--x-box-shadow-light-width) var(--x-box-shadow-light-width) var(--x-box-shadow-light-color);border-left:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table-border-bottom{border-bottom:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table-border-top{border-top:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table-row-size-big>thead>tr>th,.x-table-row-size-big>tbody tr>td{padding:calc(var(--x-font-size) / 5 * 4) calc(var(--x-font-size) * 5 / 4) calc(var(--x-font-size) / 5 * 4) 0}.x-table-row-size-big>thead>tr>th:first-child,.x-table-row-size-big>tbody tr>td:first-child{padding-left:calc(var(--x-font-size) * 5 / 4)}.x-table-row-size-big .x-table-header,.x-table-row-size-big .x-table-footer{padding:calc(var(--x-font-size) / 5 * 4) calc(var(--x-font-size) * 5 / 4) calc(var(--x-font-size) / 5 * 4) calc(var(--x-font-size) * 5 / 4)}.x-table-row-size-big.x-table-bordered>thead>tr>th,.x-table-row-size-big.x-table-bordered>tbody tr>td{padding-left:calc(var(--x-font-size) * 5 / 4)}.x-table-row-size-big.x-table-cell-config>thead>tr>th,.x-table-row-size-big.x-table-cell-config>tbody tr>td{padding-left:calc(var(--x-font-size) * 5 / 4)}.x-table-row-size-large>thead>tr>th,.x-table-row-size-large>tbody tr>td{padding:calc(var(--x-font-size) / 4 * 3) calc(var(--x-font-size) * 4 / 3) calc(var(--x-font-size) / 4 * 3) 0}.x-table-row-size-large>thead>tr>th:first-child,.x-table-row-size-large>tbody tr>td:first-child{padding-left:calc(var(--x-font-size) * 4 / 3)}.x-table-row-size-large .x-table-header,.x-table-row-size-large .x-table-footer{padding:calc(var(--x-font-size) / 4 * 3) calc(var(--x-font-size) * 4 / 3) calc(var(--x-font-size) / 4 * 3) calc(var(--x-font-size) * 4 / 3)}.x-table-row-size-large.x-table-bordered>thead>tr>th,.x-table-row-size-large.x-table-bordered>tbody tr>td{padding-left:calc(var(--x-font-size) * 4 / 3)}.x-table-row-size-large.x-table-cell-config>thead>tr>th,.x-table-row-size-large.x-table-cell-config>tbody tr>td{padding-left:calc(var(--x-font-size) * 4 / 3)}.x-table-row-size-medium>thead>tr>th,.x-table-row-size-medium>tbody tr>td{padding:calc(var(--x-font-size) / 2) var(--x-font-size) calc(var(--x-font-size) / 2) 0}.x-table-row-size-medium>thead>tr>th:first-child,.x-table-row-size-medium>tbody tr>td:first-child{padding-left:var(--x-font-size)}.x-table-row-size-medium .x-table-header,.x-table-row-size-medium .x-table-footer{padding:calc(var(--x-font-size) / 2) var(--x-font-size) calc(var(--x-font-size) / 2) var(--x-font-size)}.x-table-row-size-medium.x-table-bordered>thead>tr>th,.x-table-row-size-medium.x-table-bordered>tbody tr>td{padding-left:var(--x-font-size)}.x-table-row-size-medium.x-table-cell-config>thead>tr>th,.x-table-row-size-medium.x-table-cell-config>tbody tr>td{padding-left:var(--x-font-size)}.x-table-row-size-small>thead>tr>th,.x-table-row-size-small>tbody tr>td{padding:calc(var(--x-font-size) / 3) calc(var(--x-font-size) * 2 / 3) calc(var(--x-font-size) / 3) 0}.x-table-row-size-small>thead>tr>th:first-child,.x-table-row-size-small>tbody tr>td:first-child{padding-left:calc(var(--x-font-size) * 2 / 3)}.x-table-row-size-small .x-table-header,.x-table-row-size-small .x-table-footer{padding:calc(var(--x-font-size) / 3) calc(var(--x-font-size) * 2 / 3) calc(var(--x-font-size) / 3) calc(var(--x-font-size) * 2 / 3)}.x-table-row-size-small.x-table-bordered>thead>tr>th,.x-table-row-size-small.x-table-bordered>tbody tr>td{padding-left:calc(var(--x-font-size) * 2 / 3)}.x-table-row-size-small.x-table-cell-config>thead>tr>th,.x-table-row-size-small.x-table-cell-config>tbody tr>td{padding-left:calc(var(--x-font-size) * 2 / 3)}.x-table-row-size-mini>thead>tr>th,.x-table-row-size-mini>tbody tr>td{padding:calc(var(--x-font-size) / 4) calc(var(--x-font-size) / 2) calc(var(--x-font-size) / 4) 0}.x-table-row-size-mini>thead>tr>th:first-child,.x-table-row-size-mini>tbody tr>td:first-child{padding-left:calc(var(--x-font-size) / 2)}.x-table-row-size-mini .x-table-header,.x-table-row-size-mini .x-table-footer{padding:calc(var(--x-font-size) / 4) calc(var(--x-font-size) / 2) calc(var(--x-font-size) / 4) calc(var(--x-font-size) / 2)}.x-table-row-size-mini.x-table-bordered>thead>tr>th,.x-table-row-size-mini.x-table-bordered>tbody tr>td{padding-left:calc(var(--x-font-size) / 2)}.x-table-row-size-mini.x-table-cell-config>thead>tr>th,.x-table-row-size-mini.x-table-cell-config>tbody tr>td{padding-left:calc(var(--x-font-size) / 2)}x-table{width:100%;display:flex;flex-direction:column}x-table .x-pagination{padding-top:calc(var(--x-font-size) / 2)}x-table.x-table-top-left{flex-direction:column-reverse}x-table.x-table-top-left .x-pagination{padding-top:0;padding-bottom:calc(var(--x-font-size) / 2)}x-table.x-table-top-center{flex-direction:column-reverse;align-items:center}x-table.x-table-top-center .x-pagination{padding-top:0;padding-bottom:calc(var(--x-font-size) / 2)}x-table.x-table-top-right{flex-direction:column-reverse;align-items:flex-end}x-table.x-table-top-right .x-pagination{padding-top:0;padding-bottom:calc(var(--x-font-size) / 2)}x-table.x-table-bottom-center{align-items:center}x-table.x-table-bottom-right{align-items:flex-end}\\n\"], dependencies: [{ kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i3$1.XPaginationComponent, selector: \"x-pagination\" }, { kind: \"directive\", type: i4.XOutletDirective, selector: \"[xOutlet]\", inputs: [\"xOutletContext\", \"xOutlet\"] }, { kind: \"component\", type: i5$1.XLoadingComponent, selector: \"x-loading, [x-loading]\" }, { kind: \"component\", type: XTableHeadComponent, selector: \"x-table-head\", inputs: [\"table\"] }, { kind: \"component\", type: XTableBodyComponent, selector: \"x-table-body\", inputs: [\"table\"] }, { kind: \"component\", type: XTableFootComponent, selector: \"x-table-foot\", inputs: [\"table\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XTableComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: `${XTablePrefix}`, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table\\r\\n  #table\\r\\n  class=\\\"x-table\\\"\\r\\n  [ngClass]=\\\"classMap\\\"\\r\\n  [x-loading]=\\\"loading && getting\\\"\\r\\n  [class.x-table-scroll-left]=\\\"getScrollLeft\\\"\\r\\n  [class.x-table-scroll-left-max]=\\\"scrollLeftMax\\\"\\r\\n  [class.x-table-scroll-top]=\\\"getScrollTop\\\"\\r\\n  [class.x-table-has-scroll-right]=\\\"scrollYWidth\\\"\\r\\n  [class.x-table-has-scroll-bottom]=\\\"scrollXWidth\\\"\\r\\n  [class.x-table-bordered]=\\\"bordered\\\"\\r\\n  [class.x-table-td-adaption-height]=\\\"rowHeight == 0\\\"\\r\\n  [class.x-table-cell-config]=\\\"cellConfig\\\"\\r\\n>\\r\\n  <caption #caption class=\\\"x-table-header\\\" *ngIf=\\\"header\\\" [style.height.px]=\\\"getRowHeight\\\" [style.min-height.px]=\\\"getRowHeight\\\">\\r\\n    <ng-container *xOutlet=\\\"header\\\">{{ header }}</ng-container>\\r\\n  </caption>\\r\\n  <x-table-head\\r\\n    *ngIf=\\\"showHeader && (headerPosition === 'top' || headerPosition === 'top-bottom')\\\"\\r\\n    [columns]=\\\"columns\\\"\\r\\n    [rowHeight]=\\\"rowHeight\\\"\\r\\n    [columnTpl]=\\\"headColumnTpl\\\"\\r\\n    [scrollYWidth]=\\\"scrollYWidth\\\"\\r\\n    [scrollXWidth]=\\\"scrollXWidth\\\"\\r\\n    [cellConfig]=\\\"cellConfig?.thead\\\"\\r\\n    [position]=\\\"'top'\\\"\\r\\n    [table]=\\\"this\\\"\\r\\n  ></x-table-head>\\r\\n  <x-table-body\\r\\n    [data]=\\\"treeTable ? treeTableData : tableData\\\"\\r\\n    [columns]=\\\"columns\\\"\\r\\n    [itemSize]=\\\"itemSize\\\"\\r\\n    [rowHeight]=\\\"rowHeight\\\"\\r\\n    [bodyHeight]=\\\"bodyHeight\\\"\\r\\n    [columnTpl]=\\\"bodyColumnTpl\\\"\\r\\n    [allowSelectRow]=\\\"allowSelectRow\\\"\\r\\n    [virtualScroll]=\\\"virtualScroll\\\"\\r\\n    [minBufferPx]=\\\"minBufferPx\\\"\\r\\n    [maxBufferPx]=\\\"maxBufferPx\\\"\\r\\n    [adaptionHeight]=\\\"adaptionHeight\\\"\\r\\n    [docPercent]=\\\"docPercent\\\"\\r\\n    [scroll]=\\\"scroll\\\"\\r\\n    [rowClass]=\\\"rowClass\\\"\\r\\n    [cellConfig]=\\\"cellConfig?.tbody\\\"\\r\\n    [expandedAll]=\\\"expandedAll\\\"\\r\\n    [expandTpl]=\\\"expandTpl\\\"\\r\\n    [(activatedRow)]=\\\"activatedRow\\\"\\r\\n    (activatedRowChange)=\\\"activatedRowChange.emit($event)\\\"\\r\\n    [table]=\\\"this\\\"\\r\\n  ></x-table-body>\\r\\n  <x-table-head\\r\\n    *ngIf=\\\"showHeader && (headerPosition === 'bottom' || headerPosition === 'top-bottom')\\\"\\r\\n    [columns]=\\\"columns\\\"\\r\\n    [rowHeight]=\\\"rowHeight\\\"\\r\\n    [columnTpl]=\\\"headColumnTpl\\\"\\r\\n    [scrollYWidth]=\\\"scrollYWidth\\\"\\r\\n    [scrollXWidth]=\\\"scrollXWidth\\\"\\r\\n    [cellConfig]=\\\"cellConfig?.thead\\\"\\r\\n    [position]=\\\"'bottom'\\\"\\r\\n    [table]=\\\"this\\\"\\r\\n  ></x-table-head>\\r\\n  <x-table-foot *ngIf=\\\"footer\\\" [table]=\\\"this\\\" [footer]=\\\"footer\\\" [rowHeight]=\\\"rowHeight\\\"></x-table-foot>\\r\\n  <div\\r\\n    *ngIf=\\\"hasStickyTopRight()\\\"\\r\\n    #stickyTopRightEle\\r\\n    class=\\\"x-table-sticky-right-scroll\\\"\\r\\n    [class.x-table-border-bottom]=\\\"headSearchTpl\\\"\\r\\n    [style.top.px]=\\\"getStickyTopScrollTop\\\"\\r\\n    [style.width.px]=\\\"scrollYWidth\\\"\\r\\n    [style.height.px]=\\\"getRowHeight\\\"\\r\\n    [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n  ></div>\\r\\n  <div\\r\\n    *ngIf=\\\"hasStickyTopRight() && headSearchTpl\\\"\\r\\n    class=\\\"x-table-sticky-right-scroll\\\"\\r\\n    [style.top.px]=\\\"getStickyTopScrollTop + getStickyTopRightEleHeight\\\"\\r\\n    [style.width.px]=\\\"scrollYWidth\\\"\\r\\n    [style.height.px]=\\\"getRowHeight\\\"\\r\\n    [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n  ></div>\\r\\n  <div\\r\\n    *ngIf=\\\"hasStickyBottomRight()\\\"\\r\\n    #stickyBottomRightEle\\r\\n    class=\\\"x-table-sticky-right-scroll\\\"\\r\\n    [style.bottom.px]=\\\"getStickyBottomScrollTop\\\"\\r\\n    [style.width.px]=\\\"scrollYWidth\\\"\\r\\n    [style.height.px]=\\\"getRowHeight\\\"\\r\\n    [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n  ></div>\\r\\n  <div\\r\\n    *ngIf=\\\"hasStickyBottomRight() && headSearchTpl\\\"\\r\\n    class=\\\"x-table-sticky-right-scroll\\\"\\r\\n    [class.x-table-border-bottom]=\\\"headSearchTpl\\\"\\r\\n    [style.bottom.px]=\\\"getStickyBottomScrollTop + getStickyBottomRightEleHeight\\\"\\r\\n    [style.width.px]=\\\"scrollYWidth\\\"\\r\\n    [style.height.px]=\\\"getRowHeight\\\"\\r\\n    [style.min-height.px]=\\\"getRowHeight\\\"\\r\\n  ></div>\\r\\n</table>\\r\\n<x-pagination\\r\\n  #pagination\\r\\n  *ngIf=\\\"showPagination && size\\\"\\r\\n  [(index)]=\\\"index\\\"\\r\\n  [(size)]=\\\"size\\\"\\r\\n  [(query)]=\\\"query\\\"\\r\\n  [total]=\\\"total\\\"\\r\\n  (indexChange)=\\\"change($event)\\\"\\r\\n  [showEllipsis]=\\\"showEllipsis\\\"\\r\\n  [showTotal]=\\\"showTotal\\\"\\r\\n  [space]=\\\"space\\\"\\r\\n  [hiddenBorder]=\\\"hiddenBorder\\\"\\r\\n>\\r\\n</x-pagination>\\r\\n\", styles: [\".x-table{margin:0;padding:0;display:flex;flex-direction:column;border-collapse:collapse;width:100%;border:var(--x-border-width) var(--x-border-style) var(--x-border);position:relative}.x-table>thead{position:relative;overflow:hidden;display:block;background-color:var(--x-background);min-height:42px}.x-table>thead>tr{width:100%;display:flex;min-height:42px}.x-table>thead>tr>th{display:flex;align-items:center;flex:1;position:relative;font-weight:600;background-color:var(--x-background);border-bottom:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table>thead>tr>th>a{display:inline-flex;align-items:center;color:var(--x-text-300);overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.x-table>thead>tr>th.x-table-sticky{position:sticky;z-index:5}.x-table>thead>tr>th .x-table-drag-width{position:absolute;height:100%;width:.1875rem;right:-.125rem;cursor:ew-resize;transition:background-color var(--x-animation-duration-fast);z-index:1}.x-table>thead>tr>th .x-table-drag-width:hover{background-color:var(--x-primary)}.x-table>thead.x-table-head-bottom>tr>th{border-bottom:none}.x-table>thead.x-table-head-bottom>tr.x-table-search>th{border-top:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table>tbody{display:block;border-top:none;position:relative;min-height:7rem}.x-table>tbody tr{display:flex}.x-table>tbody tr>td{display:flex;align-items:center;position:relative;justify-content:space-between;overflow:hidden;background-color:var(--x-background);border-bottom:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table>tbody tr>td>div{flex:1;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.x-table>tbody tr>td.x-table-sticky{position:sticky;z-index:5}.x-table>tbody tr>td>x-button .x-icon{transition:var(--x-animation-duration-base)}.x-table>tbody tr>td>x-button.is-leaf{visibility:hidden}.x-table>tbody tr>td>x-button.is-expanded .x-icon{transform:rotate(90deg)}.x-table>tbody tr.x-table-activated>td{background-color:var(--x-background-a200);color:var(--x-primary)}.x-table>tbody tr:hover>td{background-color:var(--x-background-a200)}.x-table>tbody tr:last-child{border-bottom:none}.x-table>tbody x-empty{position:absolute;top:0;width:100%;padding:calc(var(--x-font-size) * 2)}.x-table-sort{cursor:pointer;transition:transform .2s}.x-table-sort:hover{color:var(--x-text-300)}.x-table-sort:active{transform:translate(1px,1px)}.x-table-sort-icon.x-icon{margin-left:.25rem;display:none;font-size:1rem;transform:rotate(90deg) rotateY(180deg);transition:.3s}.x-table-sort-icon.x-icon.x-table-icon-up,.x-table-sort-icon.x-icon.x-table-icon-down{display:inherit}.x-table-sort-icon.x-icon.x-table-icon-down{transform:rotate(90deg)}.x-table-scroll-top>thead{box-shadow:0 var(--x-box-shadow-light-width) var(--x-box-shadow-light-width) var(--x-box-shadow-light-color);z-index:1}.x-table-scroll-left .x-table-sticky-left-last{box-shadow:var(--x-box-shadow-light-width) var(--x-box-shadow-light-width) var(--x-box-shadow-light-width) var(--x-box-shadow-light-color);border-right:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table-td-adaption-height>tbody tr>td{overflow:inherit}.x-table-td-adaption-height>tbody tr>td>div{white-space:inherit;text-overflow:inherit;overflow:inherit}.x-table-bordered>thead>tr>th,.x-table-bordered>tbody tr>td{border-right:var(--x-border-width) var(--x-border-style) var(--x-border);padding-left:calc(var(--x-font-size) / 2)}.x-table-bordered>thead>tr>th:last-child,.x-table-bordered>tbody tr>td:last-child{border-right:none}.x-table-cell-config>thead tr,.x-table-cell-config>tbody tr{display:grid;grid-auto-flow:row;height:100%}.x-table-cell-config>thead>tr>th,.x-table-cell-config>tbody tr>td{border-right:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table-cell-config>thead>tr>th:last-child,.x-table-cell-config>tbody tr>td:last-child{border-right:none}.x-table-expand{margin-right:.5rem}.x-table-expandTpl>tr{display:block!important;height:inherit!important}.x-table-header{border-bottom:var(--x-border-width) var(--x-border-style) var(--x-border);text-align:left;display:flex;align-items:center}.x-table-footer{display:flex;align-items:center}.x-table-sticky-right-scroll{position:absolute;right:0;min-height:42px;background-color:var(--x-background);z-index:1}.x-table-has-scroll-right .x-table-footer{border-top:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table-has-scroll-bottom:not(.x-table-scroll-left-max) .x-table-sticky-right-first{box-shadow:var(--x-box-shadow-light-width-minus) var(--x-box-shadow-light-width) var(--x-box-shadow-light-width) var(--x-box-shadow-light-color);border-left:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table-border-bottom{border-bottom:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table-border-top{border-top:var(--x-border-width) var(--x-border-style) var(--x-border)}.x-table-row-size-big>thead>tr>th,.x-table-row-size-big>tbody tr>td{padding:calc(var(--x-font-size) / 5 * 4) calc(var(--x-font-size) * 5 / 4) calc(var(--x-font-size) / 5 * 4) 0}.x-table-row-size-big>thead>tr>th:first-child,.x-table-row-size-big>tbody tr>td:first-child{padding-left:calc(var(--x-font-size) * 5 / 4)}.x-table-row-size-big .x-table-header,.x-table-row-size-big .x-table-footer{padding:calc(var(--x-font-size) / 5 * 4) calc(var(--x-font-size) * 5 / 4) calc(var(--x-font-size) / 5 * 4) calc(var(--x-font-size) * 5 / 4)}.x-table-row-size-big.x-table-bordered>thead>tr>th,.x-table-row-size-big.x-table-bordered>tbody tr>td{padding-left:calc(var(--x-font-size) * 5 / 4)}.x-table-row-size-big.x-table-cell-config>thead>tr>th,.x-table-row-size-big.x-table-cell-config>tbody tr>td{padding-left:calc(var(--x-font-size) * 5 / 4)}.x-table-row-size-large>thead>tr>th,.x-table-row-size-large>tbody tr>td{padding:calc(var(--x-font-size) / 4 * 3) calc(var(--x-font-size) * 4 / 3) calc(var(--x-font-size) / 4 * 3) 0}.x-table-row-size-large>thead>tr>th:first-child,.x-table-row-size-large>tbody tr>td:first-child{padding-left:calc(var(--x-font-size) * 4 / 3)}.x-table-row-size-large .x-table-header,.x-table-row-size-large .x-table-footer{padding:calc(var(--x-font-size) / 4 * 3) calc(var(--x-font-size) * 4 / 3) calc(var(--x-font-size) / 4 * 3) calc(var(--x-font-size) * 4 / 3)}.x-table-row-size-large.x-table-bordered>thead>tr>th,.x-table-row-size-large.x-table-bordered>tbody tr>td{padding-left:calc(var(--x-font-size) * 4 / 3)}.x-table-row-size-large.x-table-cell-config>thead>tr>th,.x-table-row-size-large.x-table-cell-config>tbody tr>td{padding-left:calc(var(--x-font-size) * 4 / 3)}.x-table-row-size-medium>thead>tr>th,.x-table-row-size-medium>tbody tr>td{padding:calc(var(--x-font-size) / 2) var(--x-font-size) calc(var(--x-font-size) / 2) 0}.x-table-row-size-medium>thead>tr>th:first-child,.x-table-row-size-medium>tbody tr>td:first-child{padding-left:var(--x-font-size)}.x-table-row-size-medium .x-table-header,.x-table-row-size-medium .x-table-footer{padding:calc(var(--x-font-size) / 2) var(--x-font-size) calc(var(--x-font-size) / 2) var(--x-font-size)}.x-table-row-size-medium.x-table-bordered>thead>tr>th,.x-table-row-size-medium.x-table-bordered>tbody tr>td{padding-left:var(--x-font-size)}.x-table-row-size-medium.x-table-cell-config>thead>tr>th,.x-table-row-size-medium.x-table-cell-config>tbody tr>td{padding-left:var(--x-font-size)}.x-table-row-size-small>thead>tr>th,.x-table-row-size-small>tbody tr>td{padding:calc(var(--x-font-size) / 3) calc(var(--x-font-size) * 2 / 3) calc(var(--x-font-size) / 3) 0}.x-table-row-size-small>thead>tr>th:first-child,.x-table-row-size-small>tbody tr>td:first-child{padding-left:calc(var(--x-font-size) * 2 / 3)}.x-table-row-size-small .x-table-header,.x-table-row-size-small .x-table-footer{padding:calc(var(--x-font-size) / 3) calc(var(--x-font-size) * 2 / 3) calc(var(--x-font-size) / 3) calc(var(--x-font-size) * 2 / 3)}.x-table-row-size-small.x-table-bordered>thead>tr>th,.x-table-row-size-small.x-table-bordered>tbody tr>td{padding-left:calc(var(--x-font-size) * 2 / 3)}.x-table-row-size-small.x-table-cell-config>thead>tr>th,.x-table-row-size-small.x-table-cell-config>tbody tr>td{padding-left:calc(var(--x-font-size) * 2 / 3)}.x-table-row-size-mini>thead>tr>th,.x-table-row-size-mini>tbody tr>td{padding:calc(var(--x-font-size) / 4) calc(var(--x-font-size) / 2) calc(var(--x-font-size) / 4) 0}.x-table-row-size-mini>thead>tr>th:first-child,.x-table-row-size-mini>tbody tr>td:first-child{padding-left:calc(var(--x-font-size) / 2)}.x-table-row-size-mini .x-table-header,.x-table-row-size-mini .x-table-footer{padding:calc(var(--x-font-size) / 4) calc(var(--x-font-size) / 2) calc(var(--x-font-size) / 4) calc(var(--x-font-size) / 2)}.x-table-row-size-mini.x-table-bordered>thead>tr>th,.x-table-row-size-mini.x-table-bordered>tbody tr>td{padding-left:calc(var(--x-font-size) / 2)}.x-table-row-size-mini.x-table-cell-config>thead>tr>th,.x-table-row-size-mini.x-table-cell-config>tbody tr>td{padding-left:calc(var(--x-font-size) / 2)}x-table{width:100%;display:flex;flex-direction:column}x-table .x-pagination{padding-top:calc(var(--x-font-size) / 2)}x-table.x-table-top-left{flex-direction:column-reverse}x-table.x-table-top-left .x-pagination{padding-top:0;padding-bottom:calc(var(--x-font-size) / 2)}x-table.x-table-top-center{flex-direction:column-reverse;align-items:center}x-table.x-table-top-center .x-pagination{padding-top:0;padding-bottom:calc(var(--x-font-size) / 2)}x-table.x-table-top-right{flex-direction:column-reverse;align-items:flex-end}x-table.x-table-top-right .x-pagination{padding-top:0;padding-bottom:calc(var(--x-font-size) / 2)}x-table.x-table-bottom-center{align-items:center}x-table.x-table-bottom-right{align-items:flex-end}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.XConfigService }]; }, propDecorators: { table: [{\r\n                type: ViewChild,\r\n                args: ['table']\r\n            }], caption: [{\r\n                type: ViewChild,\r\n                args: ['caption']\r\n            }], pagination: [{\r\n                type: ViewChild,\r\n                args: ['pagination']\r\n            }], stickyTopRightEle: [{\r\n                type: ViewChild,\r\n                args: ['stickyTopRightEle']\r\n            }], stickyBottomRightEle: [{\r\n                type: ViewChild,\r\n                args: ['stickyBottomRightEle']\r\n            }] } });\n\nclass XTableModule {\r\n}\r\n/** @nocollapse */ XTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\n/** @nocollapse */ XTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.2\", ngImport: i0, type: XTableModule, declarations: [XDragDirective,\r\n        XTableComponent,\r\n        XTableProperty,\r\n        XTableHeadComponent,\r\n        XTableHeadProperty,\r\n        XTableBodyComponent,\r\n        XTableBodyProperty,\r\n        XTableFootComponent,\r\n        XTableFootProperty], imports: [CommonModule,\r\n        FormsModule,\r\n        XPaginationModule,\r\n        XOutletModule,\r\n        XCheckboxModule,\r\n        XIconModule,\r\n        XButtonModule,\r\n        ScrollingModule,\r\n        XEmptyModule,\r\n        XLoadingModule], exports: [XTableComponent] });\r\n/** @nocollapse */ XTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XTableModule, imports: [CommonModule,\r\n        FormsModule,\r\n        XPaginationModule,\r\n        XOutletModule,\r\n        XCheckboxModule,\r\n        XIconModule,\r\n        XButtonModule,\r\n        ScrollingModule,\r\n        XEmptyModule,\r\n        XLoadingModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XTableModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        XDragDirective,\r\n                        XTableComponent,\r\n                        XTableProperty,\r\n                        XTableHeadComponent,\r\n                        XTableHeadProperty,\r\n                        XTableBodyComponent,\r\n                        XTableBodyProperty,\r\n                        XTableFootComponent,\r\n                        XTableFootProperty\r\n                    ],\r\n                    exports: [XTableComponent],\r\n                    imports: [\r\n                        CommonModule,\r\n                        FormsModule,\r\n                        XPaginationModule,\r\n                        XOutletModule,\r\n                        XCheckboxModule,\r\n                        XIconModule,\r\n                        XButtonModule,\r\n                        ScrollingModule,\r\n                        XEmptyModule,\r\n                        XLoadingModule\r\n                    ]\r\n                }]\r\n        }] });\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { XDragDirective, XTableBodyComponent, XTableBodyPrefix, XTableBodyProperty, XTableComponent, XTableFootComponent, XTableFootPrefix, XTableFootProperty, XTableHeadComponent, XTableHeadPrefix, XTableHeadProperty, XTableModule, XTablePrefix, XTableProperty };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}