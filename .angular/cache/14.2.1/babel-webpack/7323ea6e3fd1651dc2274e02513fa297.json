{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, ElementRef, ViewEncapsulation, ChangeDetectionStrategy, HostBinding, HostListener, ViewChild, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport * as i3$1 from '@ng-nest/ui/core';\nimport { XProperty, XDataConvert, XWithConfig, XInputBoolean, XConnectBaseAnimation, XIsChange, XSetData, XIsEmpty, XGetChildren } from '@ng-nest/ui/core';\nimport { Subject, of } from 'rxjs';\nimport * as i1 from '@ng-nest/ui/portal';\nimport { XPortalConnectedPosition, XPortalModule } from '@ng-nest/ui/portal';\nimport { takeUntil, delay, debounceTime } from 'rxjs/operators';\nimport * as i2 from '@angular/cdk/overlay';\nimport * as i3 from '@ng-nest/ui/list';\nimport { XListModule } from '@ng-nest/ui/list';\nimport * as i4 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i4$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n/**\r\n * Dropdown\r\n * @selector x-dropdown\r\n * @decorator component\r\n */\n\nconst _c0 = [\"dropdown\"];\nconst _c1 = [\"*\"];\nconst XDropdownPrefix = 'x-dropdown';\nconst X_CONFIG_NAME = 'dropdown';\n/**\r\n * Dropdown Property\r\n */\n\nclass XDropdownProperty extends XProperty {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * @zh_CN 节点数据\r\n     * @en_US Node data\r\n     */\n\n    this.data = [];\n    /**\r\n     * @zh_CN hover 延迟触发时间，只有 trigger 为 'hover' 生效\r\n     * @en_US Hover delay trigger time, only trigger is the 'hover'\r\n     */\n\n    this.hoverDelay = 200;\n    /**\r\n     * @zh_CN 节点点击事件\r\n     * @en_US Node click event\r\n     */\n\n    this.nodeClick = new EventEmitter();\n    /**\r\n     * @zh_CN 当前激活的菜单事件\r\n     * @en_US The currently activated menu event\r\n     */\n\n    this.activatedIdChange = new EventEmitter();\n  }\n\n}\n/** @nocollapse */\n\n\nXDropdownProperty.ɵfac = /* @__PURE__ */function () {\n  let ɵXDropdownProperty_BaseFactory;\n  return function XDropdownProperty_Factory(t) {\n    return (ɵXDropdownProperty_BaseFactory || (ɵXDropdownProperty_BaseFactory = i0.ɵɵgetInheritedFactory(XDropdownProperty)))(t || XDropdownProperty);\n  };\n}();\n/** @nocollapse */\n\n\nXDropdownProperty.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XDropdownProperty,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    data: \"data\",\n    trigger: \"trigger\",\n    placement: \"placement\",\n    disabled: \"disabled\",\n    children: \"children\",\n    portalMinWidth: \"portalMinWidth\",\n    portalMaxWidth: \"portalMaxWidth\",\n    portalMinHeight: \"portalMinHeight\",\n    portalMaxHeight: \"portalMaxHeight\",\n    hoverDelay: \"hoverDelay\",\n    activatedId: \"activatedId\"\n  },\n  outputs: {\n    nodeClick: \"nodeClick\",\n    activatedIdChange: \"activatedIdChange\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function XDropdownProperty_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n__decorate([XDataConvert()], XDropdownProperty.prototype, \"data\", void 0);\n\n__decorate([XWithConfig(X_CONFIG_NAME, 'hover')], XDropdownProperty.prototype, \"trigger\", void 0);\n\n__decorate([XWithConfig(X_CONFIG_NAME, 'bottom-start')], XDropdownProperty.prototype, \"placement\", void 0);\n\n__decorate([XInputBoolean()], XDropdownProperty.prototype, \"disabled\", void 0);\n\n__decorate([XInputBoolean()], XDropdownProperty.prototype, \"children\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XDropdownProperty, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    trigger: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    children: [{\n      type: Input\n    }],\n    portalMinWidth: [{\n      type: Input\n    }],\n    portalMaxWidth: [{\n      type: Input\n    }],\n    portalMinHeight: [{\n      type: Input\n    }],\n    portalMaxHeight: [{\n      type: Input\n    }],\n    hoverDelay: [{\n      type: Input\n    }],\n    activatedId: [{\n      type: Input\n    }],\n    nodeClick: [{\n      type: Output\n    }],\n    activatedIdChange: [{\n      type: Output\n    }]\n  });\n})();\n/**\r\n * Dropdown Portal\r\n * @selector x-dropdown-portal\r\n * @decorator component\r\n */\n\n\nconst XDropdownPortalPrefix = 'x-dropdown-portal';\n\nclass XDropdownPortalComponent {\n  constructor(renderer, elementRef, cdr, portalService, overlay, viewContainerRef) {\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.cdr = cdr;\n    this.portalService = portalService;\n    this.overlay = overlay;\n    this.viewContainerRef = viewContainerRef;\n    this.portalPositionChange = new Subject();\n    this.timespan = 200;\n    this.childAnimating = false;\n    this._unSubject = new Subject();\n  }\n\n  done(event) {\n    this.animating(false);\n    event.toState === 'void' && this.destroyPortal();\n  }\n\n  start() {\n    this.animating(true);\n  }\n\n  mouseenter() {\n    this.portalHover(true);\n  }\n\n  mouseleave() {\n    !this.portalAttached() && this.portalHover(false);\n  }\n\n  ngOnInit() {\n    this.positionChange.pipe(takeUntil(this._unSubject)).subscribe(x => {\n      this.placement = x;\n      this.cdr.detectChanges();\n    });\n  }\n\n  ngAfterViewInit() {}\n\n  ngOnDestroy() {\n    this._unSubject.next();\n\n    this._unSubject.unsubscribe();\n  }\n\n  nodeClick(node) {\n    if (!node.leaf) {\n      this.close();\n      this.activatedId = node.id;\n      this.activatedIdSub.next(this.activatedId);\n    }\n\n    this.nodeEmit(node);\n  }\n\n  portalAttached() {\n    return this.portal?.overlayRef?.hasAttached();\n  }\n\n  closePortal() {\n    if (this.portalAttached()) {\n      this.portal?.overlayRef?.dispose();\n      return true;\n    }\n\n    return false;\n  }\n\n  createPortal() {\n    const config = {\n      backdropClass: '',\n      panelClass: 'x-dropdown-portal-child',\n      positionStrategy: this.setPlacement(),\n      scrollStrategy: this.overlay.scrollStrategies.reposition(),\n      minWidth: this.minWidth\n    };\n    this.setPosition(config);\n    this.portal = this.portalService.attach({\n      content: XDropdownPortalComponent,\n      viewContainerRef: this.viewContainerRef,\n      overlayConfig: config\n    });\n    this.setInstance();\n  }\n\n  setPosition(config) {\n    let position = config.positionStrategy;\n    position.positionChanges.pipe(takeUntil(this._unSubject)).subscribe(pos => {\n      const place = XPortalConnectedPosition.get(pos.connectionPair);\n      place !== this.portalPlacement && this.portalPositionChange.next(place);\n    });\n  }\n\n  setInstance() {\n    let componentRef = this.portal?.componentRef;\n    if (!componentRef) return;\n    Object.assign(componentRef.instance, {\n      data: this.node?.children,\n      minWidth: this.minWidth,\n      maxWidth: this.maxWidth,\n      minHeight: this.minHeight,\n      maxHeight: this.maxHeight,\n      close: () => this.closePortal(),\n      placement: this.portalPlacement,\n      positionChange: this.portalPositionChange,\n      activatedId: this.activatedId,\n      activatedIdSub: this.activatedIdSub,\n      nodeEmit: node => this.nodeClick(node),\n      portalHover: hover => this.hover(hover),\n      animating: ing => this.childAnimating = ing\n    });\n    componentRef.changeDetectorRef.detectChanges();\n  }\n\n  hover(hover) {\n    if (this.timeoutHide && hover) {\n      clearTimeout(this.timeoutHide);\n    } else {\n      this.portalHover(false);\n      this.onLeave();\n    }\n  }\n\n  setPlacement() {\n    return this.portalService.setPlacement({\n      elementRef: new ElementRef(this.node?.event?.target),\n      placement: ['right-start', 'right-end', 'left-start', 'left-end'],\n      transformOriginOn: 'x-dropdown-portal'\n    });\n  }\n\n  onEnter(node) {\n    if (!node.leaf || node.disabled || this.childAnimating) return;\n    if (this.timeoutHide) clearTimeout(this.timeoutHide);\n\n    if (this.portalAttached() && this.node?.id !== node.id) {\n      this.portal?.overlayRef?.dispose();\n    }\n\n    this.node = node;\n\n    if (!this.portalAttached()) {\n      this.createPortal();\n    }\n\n    this.cdr.detectChanges();\n  }\n\n  onLeave() {\n    if (this.portalAttached()) {\n      this.timeoutHide = setTimeout(() => {\n        this.portal?.overlayRef?.dispose();\n      });\n    }\n  }\n\n}\n/** @nocollapse */\n\n\nXDropdownPortalComponent.ɵfac = function XDropdownPortalComponent_Factory(t) {\n  return new (t || XDropdownPortalComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.XPortalService), i0.ɵɵdirectiveInject(i2.Overlay), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n};\n/** @nocollapse */\n\n\nXDropdownPortalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XDropdownPortalComponent,\n  selectors: [[\"x-dropdown-portal\"]],\n  hostVars: 1,\n  hostBindings: function XDropdownPortalComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵsyntheticHostListener(\"@x-connect-base-animation.done\", function XDropdownPortalComponent_animation_x_connect_base_animation_done_HostBindingHandler($event) {\n        return ctx.done($event);\n      })(\"@x-connect-base-animation.start\", function XDropdownPortalComponent_animation_x_connect_base_animation_start_HostBindingHandler($event) {\n        return ctx.start($event);\n      });\n      i0.ɵɵlistener(\"mouseenter\", function XDropdownPortalComponent_mouseenter_HostBindingHandler() {\n        return ctx.mouseenter();\n      })(\"mouseleave\", function XDropdownPortalComponent_mouseleave_HostBindingHandler() {\n        return ctx.mouseleave();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵsyntheticHostProperty(\"@x-connect-base-animation\", ctx.placement);\n    }\n  },\n  decls: 3,\n  vars: 10,\n  consts: [[1, \"x-dropdown-portal\"], [\"dropdownPortal\", \"\"], [3, \"data\", \"ngModel\", \"nodeClick\", \"ngModelChange\", \"nodeMouseenter\", \"nodeMouseleave\"]],\n  template: function XDropdownPortalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1)(2, \"x-list\", 2);\n      i0.ɵɵlistener(\"nodeClick\", function XDropdownPortalComponent_Template_x_list_nodeClick_2_listener($event) {\n        return ctx.nodeClick($event);\n      })(\"ngModelChange\", function XDropdownPortalComponent_Template_x_list_ngModelChange_2_listener($event) {\n        return ctx.activatedId = $event;\n      })(\"nodeMouseenter\", function XDropdownPortalComponent_Template_x_list_nodeMouseenter_2_listener($event) {\n        return ctx.onEnter($event);\n      })(\"nodeMouseleave\", function XDropdownPortalComponent_Template_x_list_nodeMouseleave_2_listener() {\n        return ctx.onLeave();\n      });\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"min-width\", ctx.minWidth)(\"max-width\", ctx.maxWidth)(\"min-height\", ctx.minHeight)(\"max-height\", ctx.maxHeight);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"data\", ctx.data)(\"ngModel\", ctx.activatedId);\n    }\n  },\n  dependencies: [i3.XListComponent, i4.NgControlStatus, i4.NgModel],\n  styles: [\"x-dropdown-portal{width:100%}.x-dropdown-portal{margin:.0625rem 0;padding:.325rem 0;background-color:var(--x-background);border:var(--x-border-width) var(--x-border-style) var(--x-border);border-radius:var(--x-border-radius);box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color);overflow:auto}.x-dropdown-portal-child{margin-top:-.3875rem}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [XConnectBaseAnimation]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XDropdownPortalComponent, [{\n    type: Component,\n    args: [{\n      selector: `${XDropdownPortalPrefix}`,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [XConnectBaseAnimation],\n      template: \"<div\\r\\n  #dropdownPortal\\r\\n  class=\\\"x-dropdown-portal\\\"\\r\\n  [style.minWidth]=\\\"minWidth\\\"\\r\\n  [style.maxWidth]=\\\"maxWidth\\\"\\r\\n  [style.minHeight]=\\\"minHeight\\\"\\r\\n  [style.maxHeight]=\\\"maxHeight\\\"\\r\\n>\\r\\n  <x-list\\r\\n    [data]=\\\"data\\\"\\r\\n    (nodeClick)=\\\"nodeClick($event)\\\"\\r\\n    [(ngModel)]=\\\"activatedId\\\"\\r\\n    (nodeMouseenter)=\\\"onEnter($event)\\\"\\r\\n    (nodeMouseleave)=\\\"onLeave()\\\"\\r\\n  ></x-list>\\r\\n</div>\\r\\n\",\n      styles: [\"x-dropdown-portal{width:100%}.x-dropdown-portal{margin:.0625rem 0;padding:.325rem 0;background-color:var(--x-background);border:var(--x-border-width) var(--x-border-style) var(--x-border);border-radius:var(--x-border-radius);box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color);overflow:auto}.x-dropdown-portal-child{margin-top:-.3875rem}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.XPortalService\n    }, {\n      type: i2.Overlay\n    }, {\n      type: i0.ViewContainerRef\n    }];\n  }, {\n    placement: [{\n      type: HostBinding,\n      args: ['@x-connect-base-animation']\n    }],\n    done: [{\n      type: HostListener,\n      args: ['@x-connect-base-animation.done', ['$event']]\n    }],\n    start: [{\n      type: HostListener,\n      args: ['@x-connect-base-animation.start', ['$event']]\n    }],\n    mouseenter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    mouseleave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\n\nclass XDropdownComponent extends XDropdownProperty {\n  constructor(renderer, elementRef, cdr, portalService, viewContainerRef, overlay, configService) {\n    super();\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.cdr = cdr;\n    this.portalService = portalService;\n    this.viewContainerRef = viewContainerRef;\n    this.overlay = overlay;\n    this.configService = configService;\n    this.datas = [];\n    this.nodes = [];\n    this.visible = false;\n    this.animating = false;\n    this.outsideClick = false;\n    this.hoverDelayUnsub = new Subject();\n    this.positionChange = new Subject();\n    this.closeSubject = new Subject();\n    this.activatedIdSub = new Subject();\n    this._unSubject = new Subject();\n  }\n\n  ngOnInit() {\n    this.setSubject();\n  }\n\n  ngOnChanges(changes) {\n    const {\n      data\n    } = changes;\n    XIsChange(data) && this.setData();\n  }\n\n  ngOnDestroy() {\n    this._unSubject.next();\n\n    this._unSubject.complete();\n\n    this.hoverDelayUnsub.next();\n    this.hoverDelayUnsub.complete();\n  }\n\n  setSubject() {\n    this.closeSubject.pipe(takeUntil(this._unSubject)).subscribe(() => {\n      this.closePortal();\n    });\n    this.activatedIdSub.pipe(takeUntil(this._unSubject)).subscribe(x => {\n      this.activatedId = x;\n      this.activatedIdChange.emit(x);\n    });\n  }\n\n  onEnter() {\n    of(true).pipe(delay(this.hoverDelay), takeUntil(this.hoverDelayUnsub)).subscribe(() => {\n      if (this.disabled || this.trigger === 'click') return;\n\n      if (this.timeoutHide) {\n        clearTimeout(this.timeoutHide);\n        this.timeoutHide = null;\n      }\n\n      if (!this.portal || this.portal && !this.portal?.overlayRef?.hasAttached()) {\n        this.visible = true;\n        this.createPortal();\n        this.cdr.detectChanges();\n      }\n    });\n  }\n\n  onLeave() {\n    this.hoverDelayUnsub.next();\n    if (this.disabled || this.trigger === 'click') return;\n\n    if (this.portal?.overlayRef?.hasAttached()) {\n      this.timeoutHide = setTimeout(() => {\n        this.visible = false;\n        this.portal?.overlayRef?.dispose();\n        this.cdr.detectChanges();\n      });\n    }\n  }\n\n  showPortal() {\n    if (this.disabled || this.trigger === 'hover' || this.animating) return;\n\n    if (this.trigger === 'click' && this.portalAttached()) {\n      this.closeSubject.next();\n      return;\n    }\n\n    this.createPortal();\n  }\n\n  portalAttached() {\n    return this.portal?.overlayRef?.hasAttached();\n  }\n\n  closePortal() {\n    if (this.portalAttached()) {\n      this.portal?.overlayRef?.dispose();\n      this.visible = false;\n      return true;\n    }\n\n    return false;\n  }\n\n  destroyPortal() {\n    this.portal?.overlayRef?.dispose();\n  }\n\n  createPortal() {\n    let box = this.dropdown.nativeElement.getBoundingClientRect();\n    this.minWidth = this.portalMinWidth ? this.portalMinWidth : box.width;\n    const config = {\n      backdropClass: '',\n      positionStrategy: this.setPlacement(),\n      scrollStrategy: this.overlay.scrollStrategies.reposition(),\n      minWidth: this.minWidth\n    };\n    this.setPosition(config);\n    this.portal = this.portalService.attach({\n      content: XDropdownPortalComponent,\n      viewContainerRef: this.viewContainerRef,\n      overlayConfig: config\n    });\n\n    if (this.trigger === 'click') {\n      this.portal.overlayRef?.outsidePointerEvents().pipe(debounceTime(30), takeUntil(this._unSubject)).subscribe(() => {\n        this.closeSubject.next();\n      });\n    }\n\n    this.setInstance();\n  }\n\n  setPosition(config) {\n    let position = config.positionStrategy;\n    position.positionChanges.pipe(takeUntil(this._unSubject)).subscribe(pos => {\n      const place = XPortalConnectedPosition.get(pos.connectionPair);\n      place !== this.placement && this.positionChange.next(place);\n    });\n  }\n\n  setInstance() {\n    let componentRef = this.portal?.componentRef;\n    if (!componentRef) return;\n    Object.assign(componentRef.instance, {\n      data: this.nodes,\n      trigger: this.trigger,\n      minWidth: this.minWidth,\n      maxWidth: this.portalMaxWidth,\n      minHeight: this.portalMinHeight,\n      maxHeight: this.portalMaxHeight,\n      activatedId: this.activatedId,\n      activatedIdSub: this.activatedIdSub,\n      close: () => this.closeSubject.next(),\n      positionChange: this.positionChange,\n      destroyPortal: () => this.destroyPortal(),\n      nodeEmit: node => this.nodeClick.emit(node),\n      portalHover: hover => this.portalHover(hover),\n      animating: ing => this.animating = ing\n    });\n    componentRef.changeDetectorRef.detectChanges();\n  }\n\n  portalHover(hover) {\n    if (this.timeoutHide && hover) {\n      clearTimeout(this.timeoutHide);\n    } else {\n      this.onLeave();\n    }\n  }\n\n  setPlacement() {\n    return this.portalService.setPlacement({\n      elementRef: this.dropdown,\n      placement: [this.placement, 'bottom-start', 'top-start', 'bottom-end', 'top-end'],\n      transformOriginOn: 'x-dropdown-portal'\n    });\n  }\n\n  setData() {\n    XSetData(this.data, this._unSubject).subscribe(x => {\n      this.datas = x;\n\n      if (!this.children) {\n        this.nodes = x.filter(y => XIsEmpty(y.pid)).map(y => XGetChildren(x, y, 0));\n      } else {\n        this.nodes = x;\n      }\n\n      this.cdr.detectChanges();\n    });\n  }\n\n}\n/** @nocollapse */\n\n\nXDropdownComponent.ɵfac = function XDropdownComponent_Factory(t) {\n  return new (t || XDropdownComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.XPortalService), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i2.Overlay), i0.ɵɵdirectiveInject(i3$1.XConfigService));\n};\n/** @nocollapse */\n\n\nXDropdownComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XDropdownComponent,\n  selectors: [[\"x-dropdown\"]],\n  viewQuery: function XDropdownComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropdown = _t.first);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c1,\n  decls: 3,\n  vars: 3,\n  consts: [[1, \"x-dropdown\", 3, \"ngClass\", \"mouseenter\", \"mouseleave\", \"click\"], [\"dropdown\", \"\"]],\n  template: function XDropdownComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵlistener(\"mouseenter\", function XDropdownComponent_Template_div_mouseenter_0_listener() {\n        return ctx.onEnter();\n      })(\"mouseleave\", function XDropdownComponent_Template_div_mouseleave_0_listener() {\n        return ctx.onLeave();\n      })(\"click\", function XDropdownComponent_Template_div_click_0_listener() {\n        return ctx.showPortal();\n      });\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"x-visible\", ctx.visible);\n      i0.ɵɵproperty(\"ngClass\", ctx.classMap);\n    }\n  },\n  dependencies: [i4$1.NgClass],\n  styles: [\".x-dropdown{margin:0;padding:0;display:inline-block}.x-dropdown.x-visible{color:var(--x-primary)}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XDropdownComponent, [{\n    type: Component,\n    args: [{\n      selector: `${XDropdownPrefix}`,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div\\r\\n  #dropdown\\r\\n  class=\\\"x-dropdown\\\"\\r\\n  [ngClass]=\\\"classMap\\\"\\r\\n  [class.x-visible]=\\\"visible\\\"\\r\\n  (mouseenter)=\\\"onEnter()\\\"\\r\\n  (mouseleave)=\\\"onLeave()\\\"\\r\\n  (click)=\\\"showPortal()\\\"\\r\\n>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n      styles: [\".x-dropdown{margin:0;padding:0;display:inline-block}.x-dropdown.x-visible{color:var(--x-primary)}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.XPortalService\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i2.Overlay\n    }, {\n      type: i3$1.XConfigService\n    }];\n  }, {\n    dropdown: [{\n      type: ViewChild,\n      args: ['dropdown', {\n        static: true\n      }]\n    }]\n  });\n})();\n\nclass XDropdownModule {}\n/** @nocollapse */\n\n\nXDropdownModule.ɵfac = function XDropdownModule_Factory(t) {\n  return new (t || XDropdownModule)();\n};\n/** @nocollapse */\n\n\nXDropdownModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: XDropdownModule\n});\n/** @nocollapse */\n\nXDropdownModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, XPortalModule, XListModule, FormsModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XDropdownModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [XDropdownComponent, XDropdownPortalComponent, XDropdownProperty],\n      exports: [XDropdownComponent, XDropdownPortalComponent],\n      imports: [CommonModule, XPortalModule, XListModule, FormsModule]\n    }]\n  }], null, null);\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { XDropdownComponent, XDropdownModule, XDropdownPortalComponent, XDropdownPortalPrefix, XDropdownPrefix, XDropdownProperty };","map":{"version":3,"names":["i0","EventEmitter","Component","Input","Output","ElementRef","ViewEncapsulation","ChangeDetectionStrategy","HostBinding","HostListener","ViewChild","NgModule","__decorate","i3$1","XProperty","XDataConvert","XWithConfig","XInputBoolean","XConnectBaseAnimation","XIsChange","XSetData","XIsEmpty","XGetChildren","Subject","of","i1","XPortalConnectedPosition","XPortalModule","takeUntil","delay","debounceTime","i2","i3","XListModule","i4","FormsModule","i4$1","CommonModule","XDropdownPrefix","X_CONFIG_NAME","XDropdownProperty","constructor","arguments","data","hoverDelay","nodeClick","activatedIdChange","ɵfac","ɵcmp","prototype","type","args","template","trigger","placement","disabled","children","portalMinWidth","portalMaxWidth","portalMinHeight","portalMaxHeight","activatedId","XDropdownPortalPrefix","XDropdownPortalComponent","renderer","elementRef","cdr","portalService","overlay","viewContainerRef","portalPositionChange","timespan","childAnimating","_unSubject","done","event","animating","toState","destroyPortal","start","mouseenter","portalHover","mouseleave","portalAttached","ngOnInit","positionChange","pipe","subscribe","x","detectChanges","ngAfterViewInit","ngOnDestroy","next","unsubscribe","node","leaf","close","id","activatedIdSub","nodeEmit","portal","overlayRef","hasAttached","closePortal","dispose","createPortal","config","backdropClass","panelClass","positionStrategy","setPlacement","scrollStrategy","scrollStrategies","reposition","minWidth","setPosition","attach","content","overlayConfig","setInstance","position","positionChanges","pos","place","get","connectionPair","portalPlacement","componentRef","Object","assign","instance","maxWidth","minHeight","maxHeight","hover","ing","changeDetectorRef","timeoutHide","clearTimeout","onLeave","target","transformOriginOn","onEnter","setTimeout","Renderer2","ChangeDetectorRef","XPortalService","Overlay","ViewContainerRef","XListComponent","NgControlStatus","NgModel","selector","encapsulation","None","changeDetection","OnPush","animations","styles","XDropdownComponent","configService","datas","nodes","visible","outsideClick","hoverDelayUnsub","closeSubject","setSubject","ngOnChanges","changes","setData","complete","emit","showPortal","box","dropdown","nativeElement","getBoundingClientRect","width","outsidePointerEvents","filter","y","pid","map","XConfigService","NgClass","static","XDropdownModule","ɵmod","ɵinj","declarations","exports","imports"],"sources":["/Users/lzl/my-angular-app/node_modules/@ng-nest/ui/fesm2020/ng-nest-ui-dropdown.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, ElementRef, ViewEncapsulation, ChangeDetectionStrategy, HostBinding, HostListener, ViewChild, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport * as i3$1 from '@ng-nest/ui/core';\nimport { XProperty, XDataConvert, XWithConfig, XInputBoolean, XConnectBaseAnimation, XIsChange, XSetData, XIsEmpty, XGetChildren } from '@ng-nest/ui/core';\nimport { Subject, of } from 'rxjs';\nimport * as i1 from '@ng-nest/ui/portal';\nimport { XPortalConnectedPosition, XPortalModule } from '@ng-nest/ui/portal';\nimport { takeUntil, delay, debounceTime } from 'rxjs/operators';\nimport * as i2 from '@angular/cdk/overlay';\nimport * as i3 from '@ng-nest/ui/list';\nimport { XListModule } from '@ng-nest/ui/list';\nimport * as i4 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i4$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n/**\r\n * Dropdown\r\n * @selector x-dropdown\r\n * @decorator component\r\n */\r\nconst XDropdownPrefix = 'x-dropdown';\r\nconst X_CONFIG_NAME = 'dropdown';\r\n/**\r\n * Dropdown Property\r\n */\r\nclass XDropdownProperty extends XProperty {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * @zh_CN 节点数据\r\n         * @en_US Node data\r\n         */\r\n        this.data = [];\r\n        /**\r\n         * @zh_CN hover 延迟触发时间，只有 trigger 为 'hover' 生效\r\n         * @en_US Hover delay trigger time, only trigger is the 'hover'\r\n         */\r\n        this.hoverDelay = 200;\r\n        /**\r\n         * @zh_CN 节点点击事件\r\n         * @en_US Node click event\r\n         */\r\n        this.nodeClick = new EventEmitter();\r\n        /**\r\n         * @zh_CN 当前激活的菜单事件\r\n         * @en_US The currently activated menu event\r\n         */\r\n        this.activatedIdChange = new EventEmitter();\r\n    }\r\n}\r\n/** @nocollapse */ XDropdownProperty.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDropdownProperty, deps: null, target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XDropdownProperty.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XDropdownProperty, selector: \"ng-component\", inputs: { data: \"data\", trigger: \"trigger\", placement: \"placement\", disabled: \"disabled\", children: \"children\", portalMinWidth: \"portalMinWidth\", portalMaxWidth: \"portalMaxWidth\", portalMinHeight: \"portalMinHeight\", portalMaxHeight: \"portalMaxHeight\", hoverDelay: \"hoverDelay\", activatedId: \"activatedId\" }, outputs: { nodeClick: \"nodeClick\", activatedIdChange: \"activatedIdChange\" }, usesInheritance: true, ngImport: i0, template: '', isInline: true });\r\n__decorate([\r\n    XDataConvert()\r\n], XDropdownProperty.prototype, \"data\", void 0);\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, 'hover')\r\n], XDropdownProperty.prototype, \"trigger\", void 0);\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, 'bottom-start')\r\n], XDropdownProperty.prototype, \"placement\", void 0);\r\n__decorate([\r\n    XInputBoolean()\r\n], XDropdownProperty.prototype, \"disabled\", void 0);\r\n__decorate([\r\n    XInputBoolean()\r\n], XDropdownProperty.prototype, \"children\", void 0);\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDropdownProperty, decorators: [{\r\n            type: Component,\r\n            args: [{ template: '' }]\r\n        }], propDecorators: { data: [{\r\n                type: Input\r\n            }], trigger: [{\r\n                type: Input\r\n            }], placement: [{\r\n                type: Input\r\n            }], disabled: [{\r\n                type: Input\r\n            }], children: [{\r\n                type: Input\r\n            }], portalMinWidth: [{\r\n                type: Input\r\n            }], portalMaxWidth: [{\r\n                type: Input\r\n            }], portalMinHeight: [{\r\n                type: Input\r\n            }], portalMaxHeight: [{\r\n                type: Input\r\n            }], hoverDelay: [{\r\n                type: Input\r\n            }], activatedId: [{\r\n                type: Input\r\n            }], nodeClick: [{\r\n                type: Output\r\n            }], activatedIdChange: [{\r\n                type: Output\r\n            }] } });\r\n/**\r\n * Dropdown Portal\r\n * @selector x-dropdown-portal\r\n * @decorator component\r\n */\r\nconst XDropdownPortalPrefix = 'x-dropdown-portal';\n\nclass XDropdownPortalComponent {\r\n    constructor(renderer, elementRef, cdr, portalService, overlay, viewContainerRef) {\r\n        this.renderer = renderer;\r\n        this.elementRef = elementRef;\r\n        this.cdr = cdr;\r\n        this.portalService = portalService;\r\n        this.overlay = overlay;\r\n        this.viewContainerRef = viewContainerRef;\r\n        this.portalPositionChange = new Subject();\r\n        this.timespan = 200;\r\n        this.childAnimating = false;\r\n        this._unSubject = new Subject();\r\n    }\r\n    done(event) {\r\n        this.animating(false);\r\n        event.toState === 'void' && this.destroyPortal();\r\n    }\r\n    start() {\r\n        this.animating(true);\r\n    }\r\n    mouseenter() {\r\n        this.portalHover(true);\r\n    }\r\n    mouseleave() {\r\n        !this.portalAttached() && this.portalHover(false);\r\n    }\r\n    ngOnInit() {\r\n        this.positionChange.pipe(takeUntil(this._unSubject)).subscribe((x) => {\r\n            this.placement = x;\r\n            this.cdr.detectChanges();\r\n        });\r\n    }\r\n    ngAfterViewInit() { }\r\n    ngOnDestroy() {\r\n        this._unSubject.next();\r\n        this._unSubject.unsubscribe();\r\n    }\r\n    nodeClick(node) {\r\n        if (!node.leaf) {\r\n            this.close();\r\n            this.activatedId = node.id;\r\n            this.activatedIdSub.next(this.activatedId);\r\n        }\r\n        this.nodeEmit(node);\r\n    }\r\n    portalAttached() {\r\n        return this.portal?.overlayRef?.hasAttached();\r\n    }\r\n    closePortal() {\r\n        if (this.portalAttached()) {\r\n            this.portal?.overlayRef?.dispose();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    createPortal() {\r\n        const config = {\r\n            backdropClass: '',\r\n            panelClass: 'x-dropdown-portal-child',\r\n            positionStrategy: this.setPlacement(),\r\n            scrollStrategy: this.overlay.scrollStrategies.reposition(),\r\n            minWidth: this.minWidth\r\n        };\r\n        this.setPosition(config);\r\n        this.portal = this.portalService.attach({\r\n            content: XDropdownPortalComponent,\r\n            viewContainerRef: this.viewContainerRef,\r\n            overlayConfig: config\r\n        });\r\n        this.setInstance();\r\n    }\r\n    setPosition(config) {\r\n        let position = config.positionStrategy;\r\n        position.positionChanges.pipe(takeUntil(this._unSubject)).subscribe((pos) => {\r\n            const place = XPortalConnectedPosition.get(pos.connectionPair);\r\n            place !== this.portalPlacement && this.portalPositionChange.next(place);\r\n        });\r\n    }\r\n    setInstance() {\r\n        let componentRef = this.portal?.componentRef;\r\n        if (!componentRef)\r\n            return;\r\n        Object.assign(componentRef.instance, {\r\n            data: this.node?.children,\r\n            minWidth: this.minWidth,\r\n            maxWidth: this.maxWidth,\r\n            minHeight: this.minHeight,\r\n            maxHeight: this.maxHeight,\r\n            close: () => this.closePortal(),\r\n            placement: this.portalPlacement,\r\n            positionChange: this.portalPositionChange,\r\n            activatedId: this.activatedId,\r\n            activatedIdSub: this.activatedIdSub,\r\n            nodeEmit: (node) => this.nodeClick(node),\r\n            portalHover: (hover) => this.hover(hover),\r\n            animating: (ing) => (this.childAnimating = ing)\r\n        });\r\n        componentRef.changeDetectorRef.detectChanges();\r\n    }\r\n    hover(hover) {\r\n        if (this.timeoutHide && hover) {\r\n            clearTimeout(this.timeoutHide);\r\n        }\r\n        else {\r\n            this.portalHover(false);\r\n            this.onLeave();\r\n        }\r\n    }\r\n    setPlacement() {\r\n        return this.portalService.setPlacement({\r\n            elementRef: new ElementRef(this.node?.event?.target),\r\n            placement: ['right-start', 'right-end', 'left-start', 'left-end'],\r\n            transformOriginOn: 'x-dropdown-portal'\r\n        });\r\n    }\r\n    onEnter(node) {\r\n        if (!node.leaf || node.disabled || this.childAnimating)\r\n            return;\r\n        if (this.timeoutHide)\r\n            clearTimeout(this.timeoutHide);\r\n        if (this.portalAttached() && this.node?.id !== node.id) {\r\n            this.portal?.overlayRef?.dispose();\r\n        }\r\n        this.node = node;\r\n        if (!this.portalAttached()) {\r\n            this.createPortal();\r\n        }\r\n        this.cdr.detectChanges();\r\n    }\r\n    onLeave() {\r\n        if (this.portalAttached()) {\r\n            this.timeoutHide = setTimeout(() => {\r\n                this.portal?.overlayRef?.dispose();\r\n            });\r\n        }\r\n    }\r\n}\r\n/** @nocollapse */ XDropdownPortalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDropdownPortalComponent, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.XPortalService }, { token: i2.Overlay }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XDropdownPortalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XDropdownPortalComponent, selector: \"x-dropdown-portal\", host: { listeners: { \"@x-connect-base-animation.done\": \"done($event)\", \"@x-connect-base-animation.start\": \"start($event)\", \"mouseenter\": \"mouseenter()\", \"mouseleave\": \"mouseleave()\" }, properties: { \"@x-connect-base-animation\": \"this.placement\" } }, ngImport: i0, template: \"<div\\r\\n  #dropdownPortal\\r\\n  class=\\\"x-dropdown-portal\\\"\\r\\n  [style.minWidth]=\\\"minWidth\\\"\\r\\n  [style.maxWidth]=\\\"maxWidth\\\"\\r\\n  [style.minHeight]=\\\"minHeight\\\"\\r\\n  [style.maxHeight]=\\\"maxHeight\\\"\\r\\n>\\r\\n  <x-list\\r\\n    [data]=\\\"data\\\"\\r\\n    (nodeClick)=\\\"nodeClick($event)\\\"\\r\\n    [(ngModel)]=\\\"activatedId\\\"\\r\\n    (nodeMouseenter)=\\\"onEnter($event)\\\"\\r\\n    (nodeMouseleave)=\\\"onLeave()\\\"\\r\\n  ></x-list>\\r\\n</div>\\r\\n\", styles: [\"x-dropdown-portal{width:100%}.x-dropdown-portal{margin:.0625rem 0;padding:.325rem 0;background-color:var(--x-background);border:var(--x-border-width) var(--x-border-style) var(--x-border);border-radius:var(--x-border-radius);box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color);overflow:auto}.x-dropdown-portal-child{margin-top:-.3875rem}\\n\"], dependencies: [{ kind: \"component\", type: i3.XListComponent, selector: \"x-list\" }, { kind: \"directive\", type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i4.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }], animations: [XConnectBaseAnimation], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDropdownPortalComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: `${XDropdownPortalPrefix}`, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [XConnectBaseAnimation], template: \"<div\\r\\n  #dropdownPortal\\r\\n  class=\\\"x-dropdown-portal\\\"\\r\\n  [style.minWidth]=\\\"minWidth\\\"\\r\\n  [style.maxWidth]=\\\"maxWidth\\\"\\r\\n  [style.minHeight]=\\\"minHeight\\\"\\r\\n  [style.maxHeight]=\\\"maxHeight\\\"\\r\\n>\\r\\n  <x-list\\r\\n    [data]=\\\"data\\\"\\r\\n    (nodeClick)=\\\"nodeClick($event)\\\"\\r\\n    [(ngModel)]=\\\"activatedId\\\"\\r\\n    (nodeMouseenter)=\\\"onEnter($event)\\\"\\r\\n    (nodeMouseleave)=\\\"onLeave()\\\"\\r\\n  ></x-list>\\r\\n</div>\\r\\n\", styles: [\"x-dropdown-portal{width:100%}.x-dropdown-portal{margin:.0625rem 0;padding:.325rem 0;background-color:var(--x-background);border:var(--x-border-width) var(--x-border-style) var(--x-border);border-radius:var(--x-border-radius);box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color);overflow:auto}.x-dropdown-portal-child{margin-top:-.3875rem}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.XPortalService }, { type: i2.Overlay }, { type: i0.ViewContainerRef }]; }, propDecorators: { placement: [{\r\n                type: HostBinding,\r\n                args: ['@x-connect-base-animation']\r\n            }], done: [{\r\n                type: HostListener,\r\n                args: ['@x-connect-base-animation.done', ['$event']]\r\n            }], start: [{\r\n                type: HostListener,\r\n                args: ['@x-connect-base-animation.start', ['$event']]\r\n            }], mouseenter: [{\r\n                type: HostListener,\r\n                args: ['mouseenter']\r\n            }], mouseleave: [{\r\n                type: HostListener,\r\n                args: ['mouseleave']\r\n            }] } });\n\nclass XDropdownComponent extends XDropdownProperty {\r\n    constructor(renderer, elementRef, cdr, portalService, viewContainerRef, overlay, configService) {\r\n        super();\r\n        this.renderer = renderer;\r\n        this.elementRef = elementRef;\r\n        this.cdr = cdr;\r\n        this.portalService = portalService;\r\n        this.viewContainerRef = viewContainerRef;\r\n        this.overlay = overlay;\r\n        this.configService = configService;\r\n        this.datas = [];\r\n        this.nodes = [];\r\n        this.visible = false;\r\n        this.animating = false;\r\n        this.outsideClick = false;\r\n        this.hoverDelayUnsub = new Subject();\r\n        this.positionChange = new Subject();\r\n        this.closeSubject = new Subject();\r\n        this.activatedIdSub = new Subject();\r\n        this._unSubject = new Subject();\r\n    }\r\n    ngOnInit() {\r\n        this.setSubject();\r\n    }\r\n    ngOnChanges(changes) {\r\n        const { data } = changes;\r\n        XIsChange(data) && this.setData();\r\n    }\r\n    ngOnDestroy() {\r\n        this._unSubject.next();\r\n        this._unSubject.complete();\r\n        this.hoverDelayUnsub.next();\r\n        this.hoverDelayUnsub.complete();\r\n    }\r\n    setSubject() {\r\n        this.closeSubject.pipe(takeUntil(this._unSubject)).subscribe(() => {\r\n            this.closePortal();\r\n        });\r\n        this.activatedIdSub.pipe(takeUntil(this._unSubject)).subscribe((x) => {\r\n            this.activatedId = x;\r\n            this.activatedIdChange.emit(x);\r\n        });\r\n    }\r\n    onEnter() {\r\n        of(true)\r\n            .pipe(delay(this.hoverDelay), takeUntil(this.hoverDelayUnsub))\r\n            .subscribe(() => {\r\n            if (this.disabled || this.trigger === 'click')\r\n                return;\r\n            if (this.timeoutHide) {\r\n                clearTimeout(this.timeoutHide);\r\n                this.timeoutHide = null;\r\n            }\r\n            if (!this.portal || (this.portal && !this.portal?.overlayRef?.hasAttached())) {\r\n                this.visible = true;\r\n                this.createPortal();\r\n                this.cdr.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    onLeave() {\r\n        this.hoverDelayUnsub.next();\r\n        if (this.disabled || this.trigger === 'click')\r\n            return;\r\n        if (this.portal?.overlayRef?.hasAttached()) {\r\n            this.timeoutHide = setTimeout(() => {\r\n                this.visible = false;\r\n                this.portal?.overlayRef?.dispose();\r\n                this.cdr.detectChanges();\r\n            });\r\n        }\r\n    }\r\n    showPortal() {\r\n        if (this.disabled || this.trigger === 'hover' || this.animating)\r\n            return;\r\n        if (this.trigger === 'click' && this.portalAttached()) {\r\n            this.closeSubject.next();\r\n            return;\r\n        }\r\n        this.createPortal();\r\n    }\r\n    portalAttached() {\r\n        return this.portal?.overlayRef?.hasAttached();\r\n    }\r\n    closePortal() {\r\n        if (this.portalAttached()) {\r\n            this.portal?.overlayRef?.dispose();\r\n            this.visible = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    destroyPortal() {\r\n        this.portal?.overlayRef?.dispose();\r\n    }\r\n    createPortal() {\r\n        let box = this.dropdown.nativeElement.getBoundingClientRect();\r\n        this.minWidth = this.portalMinWidth ? this.portalMinWidth : box.width;\r\n        const config = {\r\n            backdropClass: '',\r\n            positionStrategy: this.setPlacement(),\r\n            scrollStrategy: this.overlay.scrollStrategies.reposition(),\r\n            minWidth: this.minWidth\r\n        };\r\n        this.setPosition(config);\r\n        this.portal = this.portalService.attach({\r\n            content: XDropdownPortalComponent,\r\n            viewContainerRef: this.viewContainerRef,\r\n            overlayConfig: config\r\n        });\r\n        if (this.trigger === 'click') {\r\n            this.portal.overlayRef\r\n                ?.outsidePointerEvents()\r\n                .pipe(debounceTime(30), takeUntil(this._unSubject))\r\n                .subscribe(() => {\r\n                this.closeSubject.next();\r\n            });\r\n        }\r\n        this.setInstance();\r\n    }\r\n    setPosition(config) {\r\n        let position = config.positionStrategy;\r\n        position.positionChanges.pipe(takeUntil(this._unSubject)).subscribe((pos) => {\r\n            const place = XPortalConnectedPosition.get(pos.connectionPair);\r\n            place !== this.placement && this.positionChange.next(place);\r\n        });\r\n    }\r\n    setInstance() {\r\n        let componentRef = this.portal?.componentRef;\r\n        if (!componentRef)\r\n            return;\r\n        Object.assign(componentRef.instance, {\r\n            data: this.nodes,\r\n            trigger: this.trigger,\r\n            minWidth: this.minWidth,\r\n            maxWidth: this.portalMaxWidth,\r\n            minHeight: this.portalMinHeight,\r\n            maxHeight: this.portalMaxHeight,\r\n            activatedId: this.activatedId,\r\n            activatedIdSub: this.activatedIdSub,\r\n            close: () => this.closeSubject.next(),\r\n            positionChange: this.positionChange,\r\n            destroyPortal: () => this.destroyPortal(),\r\n            nodeEmit: (node) => this.nodeClick.emit(node),\r\n            portalHover: (hover) => this.portalHover(hover),\r\n            animating: (ing) => (this.animating = ing)\r\n        });\r\n        componentRef.changeDetectorRef.detectChanges();\r\n    }\r\n    portalHover(hover) {\r\n        if (this.timeoutHide && hover) {\r\n            clearTimeout(this.timeoutHide);\r\n        }\r\n        else {\r\n            this.onLeave();\r\n        }\r\n    }\r\n    setPlacement() {\r\n        return this.portalService.setPlacement({\r\n            elementRef: this.dropdown,\r\n            placement: [this.placement, 'bottom-start', 'top-start', 'bottom-end', 'top-end'],\r\n            transformOriginOn: 'x-dropdown-portal'\r\n        });\r\n    }\r\n    setData() {\r\n        XSetData(this.data, this._unSubject).subscribe((x) => {\r\n            this.datas = x;\r\n            if (!this.children) {\r\n                this.nodes = x.filter((y) => XIsEmpty(y.pid)).map((y) => XGetChildren(x, y, 0));\r\n            }\r\n            else {\r\n                this.nodes = x;\r\n            }\r\n            this.cdr.detectChanges();\r\n        });\r\n    }\r\n}\r\n/** @nocollapse */ XDropdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDropdownComponent, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.XPortalService }, { token: i0.ViewContainerRef }, { token: i2.Overlay }, { token: i3$1.XConfigService }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XDropdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XDropdownComponent, selector: \"x-dropdown\", viewQueries: [{ propertyName: \"dropdown\", first: true, predicate: [\"dropdown\"], descendants: true, static: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<div\\r\\n  #dropdown\\r\\n  class=\\\"x-dropdown\\\"\\r\\n  [ngClass]=\\\"classMap\\\"\\r\\n  [class.x-visible]=\\\"visible\\\"\\r\\n  (mouseenter)=\\\"onEnter()\\\"\\r\\n  (mouseleave)=\\\"onLeave()\\\"\\r\\n  (click)=\\\"showPortal()\\\"\\r\\n>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\", styles: [\".x-dropdown{margin:0;padding:0;display:inline-block}.x-dropdown.x-visible{color:var(--x-primary)}\\n\"], dependencies: [{ kind: \"directive\", type: i4$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDropdownComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: `${XDropdownPrefix}`, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div\\r\\n  #dropdown\\r\\n  class=\\\"x-dropdown\\\"\\r\\n  [ngClass]=\\\"classMap\\\"\\r\\n  [class.x-visible]=\\\"visible\\\"\\r\\n  (mouseenter)=\\\"onEnter()\\\"\\r\\n  (mouseleave)=\\\"onLeave()\\\"\\r\\n  (click)=\\\"showPortal()\\\"\\r\\n>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\", styles: [\".x-dropdown{margin:0;padding:0;display:inline-block}.x-dropdown.x-visible{color:var(--x-primary)}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.XPortalService }, { type: i0.ViewContainerRef }, { type: i2.Overlay }, { type: i3$1.XConfigService }]; }, propDecorators: { dropdown: [{\r\n                type: ViewChild,\r\n                args: ['dropdown', { static: true }]\r\n            }] } });\n\nclass XDropdownModule {\r\n}\r\n/** @nocollapse */ XDropdownModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDropdownModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\n/** @nocollapse */ XDropdownModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.2\", ngImport: i0, type: XDropdownModule, declarations: [XDropdownComponent, XDropdownPortalComponent, XDropdownProperty], imports: [CommonModule, XPortalModule, XListModule, FormsModule], exports: [XDropdownComponent, XDropdownPortalComponent] });\r\n/** @nocollapse */ XDropdownModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDropdownModule, imports: [CommonModule, XPortalModule, XListModule, FormsModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDropdownModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [XDropdownComponent, XDropdownPortalComponent, XDropdownProperty],\r\n                    exports: [XDropdownComponent, XDropdownPortalComponent],\r\n                    imports: [CommonModule, XPortalModule, XListModule, FormsModule]\r\n                }]\r\n        }] });\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { XDropdownComponent, XDropdownModule, XDropdownPortalComponent, XDropdownPortalPrefix, XDropdownPrefix, XDropdownProperty };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}