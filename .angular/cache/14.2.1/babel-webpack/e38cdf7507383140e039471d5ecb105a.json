{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, Component, Input, Output, ViewEncapsulation, ChangeDetectionStrategy, HostBinding, Optional, Inject, ViewChild, HostListener, Directive, TemplateRef, Injectable, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport * as i3 from '@ng-nest/ui/core';\nimport { XProperty, XInputBoolean, XWithConfig, XIsChange, XClearClass, XIsEmpty, XSlideAnimation, fillDefault } from '@ng-nest/ui/core';\nimport * as i1 from '@angular/cdk/overlay';\nimport * as i2 from '@ng-nest/ui/portal';\nimport { XPortalModule } from '@ng-nest/ui/portal';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i5 from '@ng-nest/ui/outlet';\nimport { XOutletModule } from '@ng-nest/ui/outlet';\nimport * as i6 from '@ng-nest/ui/button';\nimport { XButtonModule } from '@ng-nest/ui/button';\nimport * as i1$1 from '@angular/cdk/portal';\nimport { BasePortalOutlet, CdkPortalOutlet, TemplatePortal, ComponentPortal } from '@angular/cdk/portal';\nimport { filter, take } from 'rxjs';\n/**\r\n * Drawer\r\n * @selector x-drawer\r\n * @decorator component\r\n */\n\nconst _c0 = [\"*\"];\nconst _c1 = [\"drawerTpl\"];\n\nfunction XDrawerComponent_ng_template_0_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵlistener(\"click\", function XDrawerComponent_ng_template_0_div_0_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.closePortal());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction XDrawerComponent_ng_template_0_div_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r7.title);\n  }\n}\n\nfunction XDrawerComponent_ng_template_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 8);\n    i0.ɵɵtemplate(2, XDrawerComponent_ng_template_0_div_2_ng_container_2_Template, 2, 1, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"x-button\", 10);\n    i0.ɵɵlistener(\"click\", function XDrawerComponent_ng_template_0_div_2_Template_x_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.closePortal());\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"xOutlet\", ctx_r4.title);\n  }\n}\n\nfunction XDrawerComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, XDrawerComponent_ng_template_0_div_0_Template, 1, 0, \"div\", 2);\n    i0.ɵɵelementStart(1, \"div\", 3);\n    i0.ɵɵtemplate(2, XDrawerComponent_ng_template_0_div_2_Template, 4, 1, \"div\", 4);\n    i0.ɵɵelementStart(3, \"div\", 5);\n    i0.ɵɵprojection(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.container);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"width\", ctx_r1.width)(\"height\", ctx_r1.height);\n    i0.ɵɵclassProp(\"x-drawer-visible\", ctx_r1.visible);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.classMap)(\"@x-slide-animation\", ctx_r1.placement);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.title);\n  }\n}\n\nfunction XDrawerComponent_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction XDrawerComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, XDrawerComponent_ng_container_2_ng_container_1_Template, 1, 0, \"ng-container\", 11);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(1);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r0);\n  }\n}\n\nfunction XDrawerPortalComponent_ng_template_0_Template(rf, ctx) {}\n\nconst XDrawerPrefix = 'x-drawer';\nconst X_DRAWER_CONFIG_NAME = 'drawer';\nconst X_DRAWER_DATA = new InjectionToken('XDrawerData');\n/**\r\n * Drawer Property\r\n */\n\nclass XDrawerProperty extends XProperty {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * @zh_CN 关闭的事件\r\n     * @en_US Closed event\r\n     */\n\n    this.close = new EventEmitter();\n    /**\r\n     * @zh_CN 显示/隐藏的事件\r\n     * @en_US Show/hide event\r\n     */\n\n    this.visibleChange = new EventEmitter();\n  }\n\n}\n/** @nocollapse */\n\n\nXDrawerProperty.ɵfac = /* @__PURE__ */function () {\n  let ɵXDrawerProperty_BaseFactory;\n  return function XDrawerProperty_Factory(t) {\n    return (ɵXDrawerProperty_BaseFactory || (ɵXDrawerProperty_BaseFactory = i0.ɵɵgetInheritedFactory(XDrawerProperty)))(t || XDrawerProperty);\n  };\n}();\n/** @nocollapse */\n\n\nXDrawerProperty.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XDrawerProperty,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    title: \"title\",\n    visible: \"visible\",\n    placement: \"placement\",\n    size: \"size\",\n    backdropClose: \"backdropClose\",\n    hasBackdrop: \"hasBackdrop\",\n    className: \"className\"\n  },\n  outputs: {\n    close: \"close\",\n    visibleChange: \"visibleChange\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function XDrawerProperty_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n__decorate([XInputBoolean()], XDrawerProperty.prototype, \"visible\", void 0);\n\n__decorate([XWithConfig(X_DRAWER_CONFIG_NAME, 'right')], XDrawerProperty.prototype, \"placement\", void 0);\n\n__decorate([XWithConfig(X_DRAWER_CONFIG_NAME, '30%')], XDrawerProperty.prototype, \"size\", void 0);\n\n__decorate([XWithConfig(X_DRAWER_CONFIG_NAME, true)], XDrawerProperty.prototype, \"backdropClose\", void 0);\n\n__decorate([XWithConfig(X_DRAWER_CONFIG_NAME, true)], XDrawerProperty.prototype, \"hasBackdrop\", void 0);\n\n__decorate([XWithConfig(X_DRAWER_CONFIG_NAME, '')], XDrawerProperty.prototype, \"className\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XDrawerProperty, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], null, {\n    title: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    backdropClose: [{\n      type: Input\n    }],\n    hasBackdrop: [{\n      type: Input\n    }],\n    className: [{\n      type: Input\n    }],\n    close: [{\n      type: Output\n    }],\n    visibleChange: [{\n      type: Output\n    }]\n  });\n})();\n/**\r\n * Drawer Container\r\n * @selector x-drawer-container\r\n * @decorator component\r\n */\n\n\nconst XDrawerContainerPrefix = 'x-drawer-container';\nconst X_DRAWER_CONTAINER = new InjectionToken('X_DRAWER_CONTAINER');\n/**\r\n * Drawer Container Property\r\n */\n\nclass XDrawerContainerProperty extends XProperty {}\n/** @nocollapse */\n\n\nXDrawerContainerProperty.ɵfac = /* @__PURE__ */function () {\n  let ɵXDrawerContainerProperty_BaseFactory;\n  return function XDrawerContainerProperty_Factory(t) {\n    return (ɵXDrawerContainerProperty_BaseFactory || (ɵXDrawerContainerProperty_BaseFactory = i0.ɵɵgetInheritedFactory(XDrawerContainerProperty)))(t || XDrawerContainerProperty);\n  };\n}();\n/** @nocollapse */\n\n\nXDrawerContainerProperty.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XDrawerContainerProperty,\n  selectors: [[\"ng-component\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function XDrawerContainerProperty_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XDrawerContainerProperty, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], null, null);\n})();\n\nclass XDrawerContainerComponent extends XDrawerContainerProperty {\n  constructor() {\n    super();\n    this._has = true;\n  }\n\n}\n/** @nocollapse */\n\n\nXDrawerContainerComponent.ɵfac = function XDrawerContainerComponent_Factory(t) {\n  return new (t || XDrawerContainerComponent)();\n};\n/** @nocollapse */\n\n\nXDrawerContainerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XDrawerContainerComponent,\n  selectors: [[\"x-drawer-container\"]],\n  hostVars: 2,\n  hostBindings: function XDrawerContainerComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"x-drawer-container\", ctx._has);\n    }\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: X_DRAWER_CONTAINER,\n    useExisting: XDrawerContainerComponent\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function XDrawerContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  styles: [\".x-drawer-container{margin:0;padding:0;position:relative;z-index:1;box-sizing:border-box;display:block;overflow:hidden}.x-drawer-container .x-drawer{position:absolute;display:block;outline:0;z-index:2;transition:transform .2s ease-in,visibility .2s ease-in;visibility:hidden}.x-drawer-container .x-drawer-left{transform:translate3d(-100%,0,0);left:0;top:0}.x-drawer-container .x-drawer-right{transform:translate3d(100%,0,0);right:0;top:0}.x-drawer-container .x-drawer-top{transform:translate3d(0,-100%,0);top:0;left:0}.x-drawer-container .x-drawer-bottom{transform:translate3d(0,100%,0);bottom:0;left:0}.x-drawer-container .x-drawer-visible{transform:translateZ(0);visibility:inherit}.x-drawer-container .x-drawer-visible .x-drawer-backdrop{opacity:1;z-index:1}.x-drawer-container .x-drawer-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;z-index:-1;pointer-events:auto;background:rgba(0,0,0,.32);transition:opacity .4s cubic-bezier(.25,.8,.25,1),z-index 0 ease-in .4s;opacity:0}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XDrawerContainerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'x-drawer-container',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: X_DRAWER_CONTAINER,\n        useExisting: XDrawerContainerComponent\n      }],\n      template: \"<ng-content></ng-content>\\r\\n\",\n      styles: [\".x-drawer-container{margin:0;padding:0;position:relative;z-index:1;box-sizing:border-box;display:block;overflow:hidden}.x-drawer-container .x-drawer{position:absolute;display:block;outline:0;z-index:2;transition:transform .2s ease-in,visibility .2s ease-in;visibility:hidden}.x-drawer-container .x-drawer-left{transform:translate3d(-100%,0,0);left:0;top:0}.x-drawer-container .x-drawer-right{transform:translate3d(100%,0,0);right:0;top:0}.x-drawer-container .x-drawer-top{transform:translate3d(0,-100%,0);top:0;left:0}.x-drawer-container .x-drawer-bottom{transform:translate3d(0,100%,0);bottom:0;left:0}.x-drawer-container .x-drawer-visible{transform:translateZ(0);visibility:inherit}.x-drawer-container .x-drawer-visible .x-drawer-backdrop{opacity:1;z-index:1}.x-drawer-container .x-drawer-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;z-index:-1;pointer-events:auto;background:rgba(0,0,0,.32);transition:opacity .4s cubic-bezier(.25,.8,.25,1),z-index 0 ease-in .4s;opacity:0}\\n\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    _has: [{\n      type: HostBinding,\n      args: ['class.x-drawer-container']\n    }]\n  });\n})();\n\nclass XDrawerComponent extends XDrawerProperty {\n  constructor(renderer, elementRef, cdr, overlay, portalService, viewContainerRef, configService, container) {\n    super();\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.cdr = cdr;\n    this.overlay = overlay;\n    this.portalService = portalService;\n    this.viewContainerRef = viewContainerRef;\n    this.configService = configService;\n    this.container = container;\n    this.back$ = null;\n    this.width = '100%';\n    this.height = '100%';\n  }\n\n  get getVisible() {\n    return this.visible;\n  }\n\n  ngOnInit() {\n    this.setClassMap();\n    this.setSize();\n  }\n\n  ngOnChanges(simples) {\n    const {\n      visible,\n      placement\n    } = simples;\n    XIsChange(visible) && this.setVisible();\n\n    if (XIsChange(placement)) {\n      this.setClassMap();\n      this.setSize();\n    }\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe();\n  }\n\n  unsubscribe() {\n    this.back$?.unsubscribe();\n  }\n\n  setClassMap() {\n    XClearClass(this.classMap);\n    this.classMap = {\n      [`${XDrawerPrefix}-${this.placement}`]: !XIsEmpty(this.placement),\n      [`${XDrawerPrefix}-no-title`]: XIsEmpty(this.title)\n    };\n  }\n\n  setSize() {\n    if (this.container) [this.width, this.height] = this.getSize();\n  }\n\n  getSize() {\n    return [this.placement === 'left' || this.placement === 'right' ? this.size : '100%', this.placement === 'top' || this.placement === 'bottom' ? this.size : '100%'];\n  }\n\n  setVisible() {\n    if (this.visible) {\n      this.createPortal();\n    } else {\n      this.closePortal();\n    }\n  }\n\n  createPortal() {\n    if (this.container) return;\n    const [width, height] = this.getSize();\n    this.portal = this.portalService.attach({\n      content: this.drawerTpl,\n      viewContainerRef: this.viewContainerRef,\n      overlayConfig: {\n        hasBackdrop: true,\n        scrollStrategy: this.overlay.scrollStrategies.block(),\n        positionStrategy: this.portalService.setPosition(this.placement, width, height)\n      }\n    });\n    if (this.portal.overlayRef) this.back$ = this.portal.overlayRef.backdropClick().subscribe(() => this.closePortal());\n  }\n\n  portalAttached() {\n    return this.portal?.overlayRef?.hasAttached();\n  }\n\n  closePortal() {\n    if (this.container) {\n      this.visibleChange.emit(this.visible);\n      this.close.emit();\n    } else {\n      if (this.portalAttached()) {\n        this.portal?.overlayRef?.detach();\n        this.unsubscribe();\n        this.visibleChange.emit(this.visible);\n        this.close.emit();\n      }\n    }\n  }\n\n}\n/** @nocollapse */\n\n\nXDrawerComponent.ɵfac = function XDrawerComponent_Factory(t) {\n  return new (t || XDrawerComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.Overlay), i0.ɵɵdirectiveInject(i2.XPortalService), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i3.XConfigService), i0.ɵɵdirectiveInject(X_DRAWER_CONTAINER, 8));\n};\n/** @nocollapse */\n\n\nXDrawerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XDrawerComponent,\n  selectors: [[\"x-drawer\"]],\n  viewQuery: function XDrawerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c1, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.drawerTpl = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function XDrawerComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"x-drawer-visible\", ctx.getVisible);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 3,\n  vars: 1,\n  consts: [[\"drawerTpl\", \"\"], [4, \"ngIf\"], [\"class\", \"x-drawer-backdrop\", 3, \"click\", 4, \"ngIf\"], [1, \"x-drawer\", 3, \"ngClass\"], [\"class\", \"x-drawer-header\", 4, \"ngIf\"], [1, \"x-drawer-content\"], [1, \"x-drawer-backdrop\", 3, \"click\"], [1, \"x-drawer-header\"], [1, \"x-drawer-title\"], [4, \"xOutlet\"], [\"icon\", \"fto-x\", \"onlyIcon\", \"\", \"closable\", \"\", 1, \"x-drawer-close\", 3, \"click\"], [4, \"ngTemplateOutlet\"]],\n  template: function XDrawerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, XDrawerComponent_ng_template_0_Template, 5, 10, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(2, XDrawerComponent_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.container);\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgIf, i4.NgTemplateOutlet, i5.XOutletDirective, i6.XButtonComponent],\n  styles: [\".x-drawer{margin:0;padding:0;background-color:var(--x-background);position:relative;box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color)}.x-drawer-header{padding:1rem 1rem .5rem}.x-drawer-title{font-weight:600;color:var(--x-text-300);white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.x-drawer-close{position:absolute;top:.425rem;right:.425rem}.x-drawer-title{padding:0}.x-drawer-content{padding:0 1rem 1rem;height:calc(100% - 3rem);overflow:auto}.x-drawer-no-title .x-drawer-content{padding:.5rem 1rem}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [XSlideAnimation]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XDrawerComponent, [{\n    type: Component,\n    args: [{\n      selector: `${XDrawerPrefix}`,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [XSlideAnimation],\n      template: \"<ng-template #drawerTpl>\\r\\n  <div class=\\\"x-drawer-backdrop\\\" *ngIf=\\\"container\\\" (click)=\\\"closePortal()\\\"></div>\\r\\n  <div\\r\\n    class=\\\"x-drawer\\\"\\r\\n    [ngClass]=\\\"classMap\\\"\\r\\n    [style.width]=\\\"width\\\"\\r\\n    [style.height]=\\\"height\\\"\\r\\n    [class.x-drawer-visible]=\\\"visible\\\"\\r\\n    [@x-slide-animation]=\\\"placement\\\"\\r\\n  >\\r\\n    <div class=\\\"x-drawer-header\\\" *ngIf=\\\"title\\\">\\r\\n      <div class=\\\"x-drawer-title\\\">\\r\\n        <ng-container *xOutlet=\\\"title\\\">{{ title }}</ng-container>\\r\\n      </div>\\r\\n      <x-button class=\\\"x-drawer-close\\\" icon=\\\"fto-x\\\" (click)=\\\"closePortal()\\\" onlyIcon closable></x-button>\\r\\n    </div>\\r\\n    <div class=\\\"x-drawer-content\\\">\\r\\n      <ng-content></ng-content>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n<ng-container *ngIf=\\\"container\\\">\\r\\n  <ng-container *ngTemplateOutlet=\\\"drawerTpl\\\"></ng-container>\\r\\n</ng-container>\\r\\n\",\n      styles: [\".x-drawer{margin:0;padding:0;background-color:var(--x-background);position:relative;box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color)}.x-drawer-header{padding:1rem 1rem .5rem}.x-drawer-title{font-weight:600;color:var(--x-text-300);white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.x-drawer-close{position:absolute;top:.425rem;right:.425rem}.x-drawer-title{padding:0}.x-drawer-content{padding:0 1rem 1rem;height:calc(100% - 3rem);overflow:auto}.x-drawer-no-title .x-drawer-content{padding:.5rem 1rem}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.Overlay\n    }, {\n      type: i2.XPortalService\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i3.XConfigService\n    }, {\n      type: XDrawerContainerComponent,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [X_DRAWER_CONTAINER]\n      }]\n    }];\n  }, {\n    getVisible: [{\n      type: HostBinding,\n      args: ['class.x-drawer-visible']\n    }],\n    drawerTpl: [{\n      type: ViewChild,\n      args: ['drawerTpl', {\n        static: true\n      }]\n    }]\n  });\n})();\n\nclass XDrawerPortalComponent extends BasePortalOutlet {\n  constructor() {\n    super();\n    this._has = true;\n    this.animationChanged = new EventEmitter();\n  }\n\n  done({\n    toState,\n    totalTime\n  }) {\n    this.animationChanged.next({\n      action: 'done',\n      state: toState,\n      totalTime\n    });\n  }\n\n  start({\n    toState,\n    totalTime\n  }) {\n    this.animationChanged.next({\n      action: 'start',\n      state: toState,\n      totalTime\n    });\n  }\n\n  attachComponentPortal(portal) {\n    if (this.portalOutlet.hasAttached()) {\n      throw Error('drawer portal has attached');\n    }\n\n    return this.portalOutlet.attachComponentPortal(portal);\n  }\n\n  attachTemplatePortal(portal) {\n    if (this.portalOutlet.hasAttached()) {\n      throw Error('drawer portal has attached');\n    }\n\n    return this.portalOutlet.attachTemplatePortal(portal);\n  }\n\n}\n/** @nocollapse */\n\n\nXDrawerPortalComponent.ɵfac = function XDrawerPortalComponent_Factory(t) {\n  return new (t || XDrawerPortalComponent)();\n};\n/** @nocollapse */\n\n\nXDrawerPortalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XDrawerPortalComponent,\n  selectors: [[\"x-drawer-portal\"]],\n  viewQuery: function XDrawerPortalComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(CdkPortalOutlet, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.portalOutlet = _t.first);\n    }\n  },\n  hostVars: 3,\n  hostBindings: function XDrawerPortalComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵsyntheticHostListener(\"@x-slide-animation.done\", function XDrawerPortalComponent_animation_x_slide_animation_done_HostBindingHandler($event) {\n        return ctx.done($event);\n      })(\"@x-slide-animation.start\", function XDrawerPortalComponent_animation_x_slide_animation_start_HostBindingHandler($event) {\n        return ctx.start($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵsyntheticHostProperty(\"@x-slide-animation\", ctx.placement);\n      i0.ɵɵclassProp(\"x-drawer-portal\", ctx._has);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 0,\n  consts: [[\"cdkPortalOutlet\", \"\"]],\n  template: function XDrawerPortalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, XDrawerPortalComponent_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    }\n  },\n  dependencies: [i1$1.CdkPortalOutlet],\n  styles: [\".x-drawer-portal{margin:0;padding:0;height:100%;width:100%;background-color:var(--x-background);position:relative;box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color);overflow:auto;padding:1rem}.x-drawer-portal-title{display:block;margin:0 0 .5rem;font-weight:600;color:var(--x-text-300);white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.x-drawer-portal-content{display:block;margin:0 -1rem;padding:0 1rem;overflow:auto}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [XSlideAnimation]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XDrawerPortalComponent, [{\n    type: Component,\n    args: [{\n      selector: 'x-drawer-portal',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [XSlideAnimation],\n      template: \"<ng-template cdkPortalOutlet></ng-template>\\r\\n\",\n      styles: [\".x-drawer-portal{margin:0;padding:0;height:100%;width:100%;background-color:var(--x-background);position:relative;box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color);overflow:auto;padding:1rem}.x-drawer-portal-title{display:block;margin:0 0 .5rem;font-weight:600;color:var(--x-text-300);white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.x-drawer-portal-content{display:block;margin:0 -1rem;padding:0 1rem;overflow:auto}\\n\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    _has: [{\n      type: HostBinding,\n      args: ['class.x-drawer-portal']\n    }],\n    placement: [{\n      type: HostBinding,\n      args: ['@x-slide-animation']\n    }],\n    done: [{\n      type: HostListener,\n      args: ['@x-slide-animation.done', ['$event']]\n    }],\n    start: [{\n      type: HostListener,\n      args: ['@x-slide-animation.start', ['$event']]\n    }],\n    portalOutlet: [{\n      type: ViewChild,\n      args: [CdkPortalOutlet, {\n        static: true\n      }]\n    }]\n  });\n})(); // TODO: add more function\n\n\nclass XDrawerRef {\n  constructor(overlayRef, containerInstance) {\n    this.overlayRef = overlayRef;\n    this.containerInstance = containerInstance;\n  }\n\n  close() {\n    this.containerInstance.animationChanged.pipe(filter(event => event.state === 'void' && event.action === 'done'), take(1)).subscribe(() => {\n      this.overlayRef.detach();\n    });\n    this.containerInstance.placement = 'void';\n  }\n\n}\n\nclass XDrawerCloseDirective {\n  constructor(drawerRef) {\n    this.drawerRef = drawerRef;\n  }\n\n  onCloseClick() {\n    this.drawerRef && this.drawerRef.close();\n  }\n\n}\n/** @nocollapse */\n\n\nXDrawerCloseDirective.ɵfac = function XDrawerCloseDirective_Factory(t) {\n  return new (t || XDrawerCloseDirective)(i0.ɵɵdirectiveInject(XDrawerRef, 8));\n};\n/** @nocollapse */\n\n\nXDrawerCloseDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: XDrawerCloseDirective,\n  selectors: [[\"\", \"x-drawer-close\", \"\"]],\n  hostBindings: function XDrawerCloseDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function XDrawerCloseDirective_click_HostBindingHandler($event) {\n        return ctx.onCloseClick($event);\n      });\n    }\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XDrawerCloseDirective, [{\n    type: Directive,\n    args: [{\n      selector: `[x-drawer-close]`\n    }]\n  }], function () {\n    return [{\n      type: XDrawerRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    onCloseClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n\nclass XDrawerTitleDirective {\n  constructor() {\n    this._has = true;\n  }\n\n}\n/** @nocollapse */\n\n\nXDrawerTitleDirective.ɵfac = function XDrawerTitleDirective_Factory(t) {\n  return new (t || XDrawerTitleDirective)();\n};\n/** @nocollapse */\n\n\nXDrawerTitleDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: XDrawerTitleDirective,\n  selectors: [[\"\", \"x-drawer-title\", \"\"]],\n  hostVars: 2,\n  hostBindings: function XDrawerTitleDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"x-drawer-portal-title\", ctx._has);\n    }\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XDrawerTitleDirective, [{\n    type: Directive,\n    args: [{\n      selector: `[x-drawer-title]`\n    }]\n  }], null, {\n    _has: [{\n      type: HostBinding,\n      args: ['class.x-drawer-portal-title']\n    }]\n  });\n})();\n\nclass XDrawerContentDirective {\n  constructor() {\n    this._has = true;\n  }\n\n}\n/** @nocollapse */\n\n\nXDrawerContentDirective.ɵfac = function XDrawerContentDirective_Factory(t) {\n  return new (t || XDrawerContentDirective)();\n};\n/** @nocollapse */\n\n\nXDrawerContentDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: XDrawerContentDirective,\n  selectors: [[\"\", \"x-drawer-content\", \"\"], [\"x-drawer-content\"]],\n  hostVars: 2,\n  hostBindings: function XDrawerContentDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"x-drawer-portal-content\", ctx._has);\n    }\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XDrawerContentDirective, [{\n    type: Directive,\n    args: [{\n      selector: `[x-drawer-content], x-drawer-content`\n    }]\n  }], null, {\n    _has: [{\n      type: HostBinding,\n      args: ['class.x-drawer-portal-content']\n    }]\n  });\n})();\n\nclass XDrawerService {\n  constructor(portalService, configService, overlay) {\n    this.portalService = portalService;\n    this.configService = configService;\n    this.overlay = overlay;\n    this.default = {\n      placement: 'right',\n      size: '30%',\n      hasBackdrop: true,\n      backdropClose: true\n    };\n    this.configDefault = this.configService.getConfigForComponent(X_DRAWER_CONFIG_NAME);\n    Object.assign(this.default, this.configDefault);\n  }\n\n  create(content, option = {}) {\n    fillDefault(option, this.default);\n    const width = ['left', 'right'].includes(option.placement) ? option.size : '100%';\n    const height = ['top', 'bottom'].includes(option.placement) ? option.size : '100%';\n    const portal = this.portalService.attach({\n      content: XDrawerPortalComponent,\n      viewContainerRef: option.viewContainerRef,\n      overlayConfig: {\n        hasBackdrop: option.hasBackdrop,\n        panelClass: option.className,\n        scrollStrategy: this.overlay.scrollStrategies.block(),\n        positionStrategy: this.portalService.setPosition(option.placement, width, height)\n      }\n    });\n    const {\n      overlayRef,\n      componentRef\n    } = portal || {};\n    const {\n      instance\n    } = componentRef || {};\n    instance.placement = option.placement;\n    const drawerRef = new XDrawerRef(overlayRef, instance);\n\n    if (content instanceof TemplateRef) {\n      instance.attachTemplatePortal(new TemplatePortal(content, option.viewContainerRef, {\n        $implicit: option.data,\n        drawerRef: drawerRef\n      }));\n    } else {\n      const injector = this.portalService.createInjector([{\n        provide: X_DRAWER_DATA,\n        useValue: option.data\n      }, {\n        provide: XDrawerRef,\n        useValue: drawerRef\n      }]);\n      instance.attachComponentPortal(new ComponentPortal(content, option.viewContainerRef, injector));\n    }\n\n    if (option.hasBackdrop && option.backdropClose && overlayRef) overlayRef.backdropClick().subscribe(() => {\n      drawerRef.close();\n    });\n    return drawerRef;\n  }\n\n}\n/** @nocollapse */\n\n\nXDrawerService.ɵfac = function XDrawerService_Factory(t) {\n  return new (t || XDrawerService)(i0.ɵɵinject(i2.XPortalService), i0.ɵɵinject(i3.XConfigService), i0.ɵɵinject(i1.Overlay));\n};\n/** @nocollapse */\n\n\nXDrawerService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: XDrawerService,\n  factory: XDrawerService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XDrawerService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i2.XPortalService\n    }, {\n      type: i3.XConfigService\n    }, {\n      type: i1.Overlay\n    }];\n  }, null);\n})();\n\nclass XDrawerModule {}\n/** @nocollapse */\n\n\nXDrawerModule.ɵfac = function XDrawerModule_Factory(t) {\n  return new (t || XDrawerModule)();\n};\n/** @nocollapse */\n\n\nXDrawerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: XDrawerModule\n});\n/** @nocollapse */\n\nXDrawerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [XDrawerService],\n  imports: [CommonModule, XOutletModule, XButtonModule, XPortalModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XDrawerModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [XDrawerComponent, XDrawerCloseDirective, XDrawerTitleDirective, XDrawerContentDirective, XDrawerPortalComponent, XDrawerContainerComponent, XDrawerProperty, XDrawerContainerProperty],\n      exports: [XDrawerComponent, XDrawerCloseDirective, XDrawerTitleDirective, XDrawerContentDirective, XDrawerPortalComponent, XDrawerContainerComponent],\n      imports: [CommonModule, XOutletModule, XButtonModule, XPortalModule],\n      providers: [XDrawerService]\n    }]\n  }], null, null);\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { XDrawerCloseDirective, XDrawerComponent, XDrawerContainerComponent, XDrawerContainerPrefix, XDrawerContainerProperty, XDrawerContentDirective, XDrawerModule, XDrawerPortalComponent, XDrawerPrefix, XDrawerProperty, XDrawerRef, XDrawerService, XDrawerTitleDirective, X_DRAWER_CONFIG_NAME, X_DRAWER_CONTAINER, X_DRAWER_DATA };","map":{"version":3,"names":["i0","InjectionToken","EventEmitter","Component","Input","Output","ViewEncapsulation","ChangeDetectionStrategy","HostBinding","Optional","Inject","ViewChild","HostListener","Directive","TemplateRef","Injectable","NgModule","__decorate","i3","XProperty","XInputBoolean","XWithConfig","XIsChange","XClearClass","XIsEmpty","XSlideAnimation","fillDefault","i1","i2","XPortalModule","i4","CommonModule","i5","XOutletModule","i6","XButtonModule","i1$1","BasePortalOutlet","CdkPortalOutlet","TemplatePortal","ComponentPortal","filter","take","XDrawerPrefix","X_DRAWER_CONFIG_NAME","X_DRAWER_DATA","XDrawerProperty","constructor","arguments","close","visibleChange","ɵfac","ɵcmp","prototype","type","args","template","title","visible","placement","size","backdropClose","hasBackdrop","className","XDrawerContainerPrefix","X_DRAWER_CONTAINER","XDrawerContainerProperty","XDrawerContainerComponent","_has","provide","useExisting","selector","encapsulation","None","changeDetection","OnPush","providers","styles","XDrawerComponent","renderer","elementRef","cdr","overlay","portalService","viewContainerRef","configService","container","back$","width","height","getVisible","ngOnInit","setClassMap","setSize","ngOnChanges","simples","setVisible","ngOnDestroy","unsubscribe","classMap","getSize","createPortal","closePortal","portal","attach","content","drawerTpl","overlayConfig","scrollStrategy","scrollStrategies","block","positionStrategy","setPosition","overlayRef","backdropClick","subscribe","portalAttached","hasAttached","emit","detach","Renderer2","ElementRef","ChangeDetectorRef","Overlay","XPortalService","ViewContainerRef","XConfigService","NgClass","NgIf","NgTemplateOutlet","XOutletDirective","XButtonComponent","animations","decorators","static","XDrawerPortalComponent","animationChanged","done","toState","totalTime","next","action","state","start","attachComponentPortal","portalOutlet","Error","attachTemplatePortal","XDrawerRef","containerInstance","pipe","event","XDrawerCloseDirective","drawerRef","onCloseClick","ɵdir","XDrawerTitleDirective","XDrawerContentDirective","XDrawerService","default","configDefault","getConfigForComponent","Object","assign","create","option","includes","panelClass","componentRef","instance","$implicit","data","injector","createInjector","useValue","ɵprov","XDrawerModule","ɵmod","ɵinj","declarations","exports","imports"],"sources":["/Users/lzl/my-angular-app/node_modules/@ng-nest/ui/fesm2020/ng-nest-ui-drawer.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, Component, Input, Output, ViewEncapsulation, ChangeDetectionStrategy, HostBinding, Optional, Inject, ViewChild, HostListener, Directive, TemplateRef, Injectable, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport * as i3 from '@ng-nest/ui/core';\nimport { XProperty, XInputBoolean, XWithConfig, XIsChange, XClearClass, XIsEmpty, XSlideAnimation, fillDefault } from '@ng-nest/ui/core';\nimport * as i1 from '@angular/cdk/overlay';\nimport * as i2 from '@ng-nest/ui/portal';\nimport { XPortalModule } from '@ng-nest/ui/portal';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i5 from '@ng-nest/ui/outlet';\nimport { XOutletModule } from '@ng-nest/ui/outlet';\nimport * as i6 from '@ng-nest/ui/button';\nimport { XButtonModule } from '@ng-nest/ui/button';\nimport * as i1$1 from '@angular/cdk/portal';\nimport { BasePortalOutlet, CdkPortalOutlet, TemplatePortal, ComponentPortal } from '@angular/cdk/portal';\nimport { filter, take } from 'rxjs';\n\n/**\r\n * Drawer\r\n * @selector x-drawer\r\n * @decorator component\r\n */\r\nconst XDrawerPrefix = 'x-drawer';\r\nconst X_DRAWER_CONFIG_NAME = 'drawer';\r\nconst X_DRAWER_DATA = new InjectionToken('XDrawerData');\r\n/**\r\n * Drawer Property\r\n */\r\nclass XDrawerProperty extends XProperty {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * @zh_CN 关闭的事件\r\n         * @en_US Closed event\r\n         */\r\n        this.close = new EventEmitter();\r\n        /**\r\n         * @zh_CN 显示/隐藏的事件\r\n         * @en_US Show/hide event\r\n         */\r\n        this.visibleChange = new EventEmitter();\r\n    }\r\n}\r\n/** @nocollapse */ XDrawerProperty.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDrawerProperty, deps: null, target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XDrawerProperty.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XDrawerProperty, selector: \"ng-component\", inputs: { title: \"title\", visible: \"visible\", placement: \"placement\", size: \"size\", backdropClose: \"backdropClose\", hasBackdrop: \"hasBackdrop\", className: \"className\" }, outputs: { close: \"close\", visibleChange: \"visibleChange\" }, usesInheritance: true, ngImport: i0, template: '', isInline: true });\r\n__decorate([\r\n    XInputBoolean()\r\n], XDrawerProperty.prototype, \"visible\", void 0);\r\n__decorate([\r\n    XWithConfig(X_DRAWER_CONFIG_NAME, 'right')\r\n], XDrawerProperty.prototype, \"placement\", void 0);\r\n__decorate([\r\n    XWithConfig(X_DRAWER_CONFIG_NAME, '30%')\r\n], XDrawerProperty.prototype, \"size\", void 0);\r\n__decorate([\r\n    XWithConfig(X_DRAWER_CONFIG_NAME, true)\r\n], XDrawerProperty.prototype, \"backdropClose\", void 0);\r\n__decorate([\r\n    XWithConfig(X_DRAWER_CONFIG_NAME, true)\r\n], XDrawerProperty.prototype, \"hasBackdrop\", void 0);\r\n__decorate([\r\n    XWithConfig(X_DRAWER_CONFIG_NAME, '')\r\n], XDrawerProperty.prototype, \"className\", void 0);\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDrawerProperty, decorators: [{\r\n            type: Component,\r\n            args: [{ template: '' }]\r\n        }], propDecorators: { title: [{\r\n                type: Input\r\n            }], visible: [{\r\n                type: Input\r\n            }], placement: [{\r\n                type: Input\r\n            }], size: [{\r\n                type: Input\r\n            }], backdropClose: [{\r\n                type: Input\r\n            }], hasBackdrop: [{\r\n                type: Input\r\n            }], className: [{\r\n                type: Input\r\n            }], close: [{\r\n                type: Output\r\n            }], visibleChange: [{\r\n                type: Output\r\n            }] } });\r\n/**\r\n * Drawer Container\r\n * @selector x-drawer-container\r\n * @decorator component\r\n */\r\nconst XDrawerContainerPrefix = 'x-drawer-container';\r\nconst X_DRAWER_CONTAINER = new InjectionToken('X_DRAWER_CONTAINER');\r\n/**\r\n * Drawer Container Property\r\n */\r\nclass XDrawerContainerProperty extends XProperty {\r\n}\r\n/** @nocollapse */ XDrawerContainerProperty.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDrawerContainerProperty, deps: null, target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XDrawerContainerProperty.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XDrawerContainerProperty, selector: \"ng-component\", usesInheritance: true, ngImport: i0, template: '', isInline: true });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDrawerContainerProperty, decorators: [{\r\n            type: Component,\r\n            args: [{ template: '' }]\r\n        }] });\n\nclass XDrawerContainerComponent extends XDrawerContainerProperty {\r\n    constructor() {\r\n        super();\r\n        this._has = true;\r\n    }\r\n}\r\n/** @nocollapse */ XDrawerContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDrawerContainerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XDrawerContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XDrawerContainerComponent, selector: \"x-drawer-container\", host: { properties: { \"class.x-drawer-container\": \"this._has\" } }, providers: [\r\n        {\r\n            provide: X_DRAWER_CONTAINER,\r\n            useExisting: XDrawerContainerComponent\r\n        }\r\n    ], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\r\\n\", styles: [\".x-drawer-container{margin:0;padding:0;position:relative;z-index:1;box-sizing:border-box;display:block;overflow:hidden}.x-drawer-container .x-drawer{position:absolute;display:block;outline:0;z-index:2;transition:transform .2s ease-in,visibility .2s ease-in;visibility:hidden}.x-drawer-container .x-drawer-left{transform:translate3d(-100%,0,0);left:0;top:0}.x-drawer-container .x-drawer-right{transform:translate3d(100%,0,0);right:0;top:0}.x-drawer-container .x-drawer-top{transform:translate3d(0,-100%,0);top:0;left:0}.x-drawer-container .x-drawer-bottom{transform:translate3d(0,100%,0);bottom:0;left:0}.x-drawer-container .x-drawer-visible{transform:translateZ(0);visibility:inherit}.x-drawer-container .x-drawer-visible .x-drawer-backdrop{opacity:1;z-index:1}.x-drawer-container .x-drawer-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;z-index:-1;pointer-events:auto;background:rgba(0,0,0,.32);transition:opacity .4s cubic-bezier(.25,.8,.25,1),z-index 0 ease-in .4s;opacity:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDrawerContainerComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'x-drawer-container', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\r\n                        {\r\n                            provide: X_DRAWER_CONTAINER,\r\n                            useExisting: XDrawerContainerComponent\r\n                        }\r\n                    ], template: \"<ng-content></ng-content>\\r\\n\", styles: [\".x-drawer-container{margin:0;padding:0;position:relative;z-index:1;box-sizing:border-box;display:block;overflow:hidden}.x-drawer-container .x-drawer{position:absolute;display:block;outline:0;z-index:2;transition:transform .2s ease-in,visibility .2s ease-in;visibility:hidden}.x-drawer-container .x-drawer-left{transform:translate3d(-100%,0,0);left:0;top:0}.x-drawer-container .x-drawer-right{transform:translate3d(100%,0,0);right:0;top:0}.x-drawer-container .x-drawer-top{transform:translate3d(0,-100%,0);top:0;left:0}.x-drawer-container .x-drawer-bottom{transform:translate3d(0,100%,0);bottom:0;left:0}.x-drawer-container .x-drawer-visible{transform:translateZ(0);visibility:inherit}.x-drawer-container .x-drawer-visible .x-drawer-backdrop{opacity:1;z-index:1}.x-drawer-container .x-drawer-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;z-index:-1;pointer-events:auto;background:rgba(0,0,0,.32);transition:opacity .4s cubic-bezier(.25,.8,.25,1),z-index 0 ease-in .4s;opacity:0}\\n\"] }]\r\n        }], ctorParameters: function () { return []; }, propDecorators: { _has: [{\r\n                type: HostBinding,\r\n                args: ['class.x-drawer-container']\r\n            }] } });\n\nclass XDrawerComponent extends XDrawerProperty {\r\n    constructor(renderer, elementRef, cdr, overlay, portalService, viewContainerRef, configService, container) {\r\n        super();\r\n        this.renderer = renderer;\r\n        this.elementRef = elementRef;\r\n        this.cdr = cdr;\r\n        this.overlay = overlay;\r\n        this.portalService = portalService;\r\n        this.viewContainerRef = viewContainerRef;\r\n        this.configService = configService;\r\n        this.container = container;\r\n        this.back$ = null;\r\n        this.width = '100%';\r\n        this.height = '100%';\r\n    }\r\n    get getVisible() {\r\n        return this.visible;\r\n    }\r\n    ngOnInit() {\r\n        this.setClassMap();\r\n        this.setSize();\r\n    }\r\n    ngOnChanges(simples) {\r\n        const { visible, placement } = simples;\r\n        XIsChange(visible) && this.setVisible();\r\n        if (XIsChange(placement)) {\r\n            this.setClassMap();\r\n            this.setSize();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.unsubscribe();\r\n    }\r\n    unsubscribe() {\r\n        this.back$?.unsubscribe();\r\n    }\r\n    setClassMap() {\r\n        XClearClass(this.classMap);\r\n        this.classMap = {\r\n            [`${XDrawerPrefix}-${this.placement}`]: !XIsEmpty(this.placement),\r\n            [`${XDrawerPrefix}-no-title`]: XIsEmpty(this.title)\r\n        };\r\n    }\r\n    setSize() {\r\n        if (this.container)\r\n            [this.width, this.height] = this.getSize();\r\n    }\r\n    getSize() {\r\n        return [\r\n            this.placement === 'left' || this.placement === 'right' ? this.size : '100%',\r\n            this.placement === 'top' || this.placement === 'bottom' ? this.size : '100%'\r\n        ];\r\n    }\r\n    setVisible() {\r\n        if (this.visible) {\r\n            this.createPortal();\r\n        }\r\n        else {\r\n            this.closePortal();\r\n        }\r\n    }\r\n    createPortal() {\r\n        if (this.container)\r\n            return;\r\n        const [width, height] = this.getSize();\r\n        this.portal = this.portalService.attach({\r\n            content: this.drawerTpl,\r\n            viewContainerRef: this.viewContainerRef,\r\n            overlayConfig: {\r\n                hasBackdrop: true,\r\n                scrollStrategy: this.overlay.scrollStrategies.block(),\r\n                positionStrategy: this.portalService.setPosition(this.placement, width, height)\r\n            }\r\n        });\r\n        if (this.portal.overlayRef)\r\n            this.back$ = this.portal.overlayRef.backdropClick().subscribe(() => this.closePortal());\r\n    }\r\n    portalAttached() {\r\n        return this.portal?.overlayRef?.hasAttached();\r\n    }\r\n    closePortal() {\r\n        if (this.container) {\r\n            this.visibleChange.emit(this.visible);\r\n            this.close.emit();\r\n        }\r\n        else {\r\n            if (this.portalAttached()) {\r\n                this.portal?.overlayRef?.detach();\r\n                this.unsubscribe();\r\n                this.visibleChange.emit(this.visible);\r\n                this.close.emit();\r\n            }\r\n        }\r\n    }\r\n}\r\n/** @nocollapse */ XDrawerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDrawerComponent, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.Overlay }, { token: i2.XPortalService }, { token: i0.ViewContainerRef }, { token: i3.XConfigService }, { token: X_DRAWER_CONTAINER, optional: true }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XDrawerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XDrawerComponent, selector: \"x-drawer\", host: { properties: { \"class.x-drawer-visible\": \"this.getVisible\" } }, viewQueries: [{ propertyName: \"drawerTpl\", first: true, predicate: [\"drawerTpl\"], descendants: true, static: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<ng-template #drawerTpl>\\r\\n  <div class=\\\"x-drawer-backdrop\\\" *ngIf=\\\"container\\\" (click)=\\\"closePortal()\\\"></div>\\r\\n  <div\\r\\n    class=\\\"x-drawer\\\"\\r\\n    [ngClass]=\\\"classMap\\\"\\r\\n    [style.width]=\\\"width\\\"\\r\\n    [style.height]=\\\"height\\\"\\r\\n    [class.x-drawer-visible]=\\\"visible\\\"\\r\\n    [@x-slide-animation]=\\\"placement\\\"\\r\\n  >\\r\\n    <div class=\\\"x-drawer-header\\\" *ngIf=\\\"title\\\">\\r\\n      <div class=\\\"x-drawer-title\\\">\\r\\n        <ng-container *xOutlet=\\\"title\\\">{{ title }}</ng-container>\\r\\n      </div>\\r\\n      <x-button class=\\\"x-drawer-close\\\" icon=\\\"fto-x\\\" (click)=\\\"closePortal()\\\" onlyIcon closable></x-button>\\r\\n    </div>\\r\\n    <div class=\\\"x-drawer-content\\\">\\r\\n      <ng-content></ng-content>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n<ng-container *ngIf=\\\"container\\\">\\r\\n  <ng-container *ngTemplateOutlet=\\\"drawerTpl\\\"></ng-container>\\r\\n</ng-container>\\r\\n\", styles: [\".x-drawer{margin:0;padding:0;background-color:var(--x-background);position:relative;box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color)}.x-drawer-header{padding:1rem 1rem .5rem}.x-drawer-title{font-weight:600;color:var(--x-text-300);white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.x-drawer-close{position:absolute;top:.425rem;right:.425rem}.x-drawer-title{padding:0}.x-drawer-content{padding:0 1rem 1rem;height:calc(100% - 3rem);overflow:auto}.x-drawer-no-title .x-drawer-content{padding:.5rem 1rem}\\n\"], dependencies: [{ kind: \"directive\", type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i4.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i5.XOutletDirective, selector: \"[xOutlet]\", inputs: [\"xOutletContext\", \"xOutlet\"] }, { kind: \"component\", type: i6.XButtonComponent, selector: \"x-button\" }], animations: [XSlideAnimation], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDrawerComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: `${XDrawerPrefix}`, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [XSlideAnimation], template: \"<ng-template #drawerTpl>\\r\\n  <div class=\\\"x-drawer-backdrop\\\" *ngIf=\\\"container\\\" (click)=\\\"closePortal()\\\"></div>\\r\\n  <div\\r\\n    class=\\\"x-drawer\\\"\\r\\n    [ngClass]=\\\"classMap\\\"\\r\\n    [style.width]=\\\"width\\\"\\r\\n    [style.height]=\\\"height\\\"\\r\\n    [class.x-drawer-visible]=\\\"visible\\\"\\r\\n    [@x-slide-animation]=\\\"placement\\\"\\r\\n  >\\r\\n    <div class=\\\"x-drawer-header\\\" *ngIf=\\\"title\\\">\\r\\n      <div class=\\\"x-drawer-title\\\">\\r\\n        <ng-container *xOutlet=\\\"title\\\">{{ title }}</ng-container>\\r\\n      </div>\\r\\n      <x-button class=\\\"x-drawer-close\\\" icon=\\\"fto-x\\\" (click)=\\\"closePortal()\\\" onlyIcon closable></x-button>\\r\\n    </div>\\r\\n    <div class=\\\"x-drawer-content\\\">\\r\\n      <ng-content></ng-content>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n<ng-container *ngIf=\\\"container\\\">\\r\\n  <ng-container *ngTemplateOutlet=\\\"drawerTpl\\\"></ng-container>\\r\\n</ng-container>\\r\\n\", styles: [\".x-drawer{margin:0;padding:0;background-color:var(--x-background);position:relative;box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color)}.x-drawer-header{padding:1rem 1rem .5rem}.x-drawer-title{font-weight:600;color:var(--x-text-300);white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.x-drawer-close{position:absolute;top:.425rem;right:.425rem}.x-drawer-title{padding:0}.x-drawer-content{padding:0 1rem 1rem;height:calc(100% - 3rem);overflow:auto}.x-drawer-no-title .x-drawer-content{padding:.5rem 1rem}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.Overlay }, { type: i2.XPortalService }, { type: i0.ViewContainerRef }, { type: i3.XConfigService }, { type: XDrawerContainerComponent, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [X_DRAWER_CONTAINER]\r\n                }] }]; }, propDecorators: { getVisible: [{\r\n                type: HostBinding,\r\n                args: ['class.x-drawer-visible']\r\n            }], drawerTpl: [{\r\n                type: ViewChild,\r\n                args: ['drawerTpl', { static: true }]\r\n            }] } });\n\nclass XDrawerPortalComponent extends BasePortalOutlet {\r\n    constructor() {\r\n        super();\r\n        this._has = true;\r\n        this.animationChanged = new EventEmitter();\r\n    }\r\n    done({ toState, totalTime }) {\r\n        this.animationChanged.next({ action: 'done', state: toState, totalTime });\r\n    }\r\n    start({ toState, totalTime }) {\r\n        this.animationChanged.next({ action: 'start', state: toState, totalTime });\r\n    }\r\n    attachComponentPortal(portal) {\r\n        if (this.portalOutlet.hasAttached()) {\r\n            throw Error('drawer portal has attached');\r\n        }\r\n        return this.portalOutlet.attachComponentPortal(portal);\r\n    }\r\n    attachTemplatePortal(portal) {\r\n        if (this.portalOutlet.hasAttached()) {\r\n            throw Error('drawer portal has attached');\r\n        }\r\n        return this.portalOutlet.attachTemplatePortal(portal);\r\n    }\r\n}\r\n/** @nocollapse */ XDrawerPortalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDrawerPortalComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XDrawerPortalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XDrawerPortalComponent, selector: \"x-drawer-portal\", host: { listeners: { \"@x-slide-animation.done\": \"done($event)\", \"@x-slide-animation.start\": \"start($event)\" }, properties: { \"class.x-drawer-portal\": \"this._has\", \"@x-slide-animation\": \"this.placement\" } }, viewQueries: [{ propertyName: \"portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<ng-template cdkPortalOutlet></ng-template>\\r\\n\", styles: [\".x-drawer-portal{margin:0;padding:0;height:100%;width:100%;background-color:var(--x-background);position:relative;box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color);overflow:auto;padding:1rem}.x-drawer-portal-title{display:block;margin:0 0 .5rem;font-weight:600;color:var(--x-text-300);white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.x-drawer-portal-content{display:block;margin:0 -1rem;padding:0 1rem;overflow:auto}\\n\"], dependencies: [{ kind: \"directive\", type: i1$1.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [XSlideAnimation], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDrawerPortalComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'x-drawer-portal', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [XSlideAnimation], template: \"<ng-template cdkPortalOutlet></ng-template>\\r\\n\", styles: [\".x-drawer-portal{margin:0;padding:0;height:100%;width:100%;background-color:var(--x-background);position:relative;box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color);overflow:auto;padding:1rem}.x-drawer-portal-title{display:block;margin:0 0 .5rem;font-weight:600;color:var(--x-text-300);white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.x-drawer-portal-content{display:block;margin:0 -1rem;padding:0 1rem;overflow:auto}\\n\"] }]\r\n        }], ctorParameters: function () { return []; }, propDecorators: { _has: [{\r\n                type: HostBinding,\r\n                args: ['class.x-drawer-portal']\r\n            }], placement: [{\r\n                type: HostBinding,\r\n                args: ['@x-slide-animation']\r\n            }], done: [{\r\n                type: HostListener,\r\n                args: ['@x-slide-animation.done', ['$event']]\r\n            }], start: [{\r\n                type: HostListener,\r\n                args: ['@x-slide-animation.start', ['$event']]\r\n            }], portalOutlet: [{\r\n                type: ViewChild,\r\n                args: [CdkPortalOutlet, { static: true }]\r\n            }] } });\n\n// TODO: add more function\r\nclass XDrawerRef {\r\n    constructor(overlayRef, containerInstance) {\r\n        this.overlayRef = overlayRef;\r\n        this.containerInstance = containerInstance;\r\n    }\r\n    close() {\r\n        this.containerInstance.animationChanged\r\n            .pipe(filter((event) => event.state === 'void' && event.action === 'done'), take(1))\r\n            .subscribe(() => {\r\n            this.overlayRef.detach();\r\n        });\r\n        this.containerInstance.placement = 'void';\r\n    }\r\n}\n\nclass XDrawerCloseDirective {\r\n    constructor(drawerRef) {\r\n        this.drawerRef = drawerRef;\r\n    }\r\n    onCloseClick() {\r\n        this.drawerRef && this.drawerRef.close();\r\n    }\r\n}\r\n/** @nocollapse */ XDrawerCloseDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDrawerCloseDirective, deps: [{ token: XDrawerRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\r\n/** @nocollapse */ XDrawerCloseDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XDrawerCloseDirective, selector: \"[x-drawer-close]\", host: { listeners: { \"click\": \"onCloseClick($event)\" } }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDrawerCloseDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: `[x-drawer-close]`\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: XDrawerRef, decorators: [{\r\n                    type: Optional\r\n                }] }]; }, propDecorators: { onCloseClick: [{\r\n                type: HostListener,\r\n                args: ['click', ['$event']]\r\n            }] } });\r\nclass XDrawerTitleDirective {\r\n    constructor() {\r\n        this._has = true;\r\n    }\r\n}\r\n/** @nocollapse */ XDrawerTitleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDrawerTitleDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\r\n/** @nocollapse */ XDrawerTitleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XDrawerTitleDirective, selector: \"[x-drawer-title]\", host: { properties: { \"class.x-drawer-portal-title\": \"this._has\" } }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDrawerTitleDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: `[x-drawer-title]`\r\n                }]\r\n        }], propDecorators: { _has: [{\r\n                type: HostBinding,\r\n                args: ['class.x-drawer-portal-title']\r\n            }] } });\r\nclass XDrawerContentDirective {\r\n    constructor() {\r\n        this._has = true;\r\n    }\r\n}\r\n/** @nocollapse */ XDrawerContentDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDrawerContentDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\r\n/** @nocollapse */ XDrawerContentDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XDrawerContentDirective, selector: \"[x-drawer-content], x-drawer-content\", host: { properties: { \"class.x-drawer-portal-content\": \"this._has\" } }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDrawerContentDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: `[x-drawer-content], x-drawer-content`\r\n                }]\r\n        }], propDecorators: { _has: [{\r\n                type: HostBinding,\r\n                args: ['class.x-drawer-portal-content']\r\n            }] } });\n\nclass XDrawerService {\r\n    constructor(portalService, configService, overlay) {\r\n        this.portalService = portalService;\r\n        this.configService = configService;\r\n        this.overlay = overlay;\r\n        this.default = {\r\n            placement: 'right',\r\n            size: '30%',\r\n            hasBackdrop: true,\r\n            backdropClose: true\r\n        };\r\n        this.configDefault = this.configService.getConfigForComponent(X_DRAWER_CONFIG_NAME);\r\n        Object.assign(this.default, this.configDefault);\r\n    }\r\n    create(content, option = {}) {\r\n        fillDefault(option, this.default);\r\n        const width = ['left', 'right'].includes(option.placement) ? option.size : '100%';\r\n        const height = ['top', 'bottom'].includes(option.placement) ? option.size : '100%';\r\n        const portal = this.portalService.attach({\r\n            content: XDrawerPortalComponent,\r\n            viewContainerRef: option.viewContainerRef,\r\n            overlayConfig: {\r\n                hasBackdrop: option.hasBackdrop,\r\n                panelClass: option.className,\r\n                scrollStrategy: this.overlay.scrollStrategies.block(),\r\n                positionStrategy: this.portalService.setPosition(option.placement, width, height)\r\n            }\r\n        });\r\n        const { overlayRef, componentRef } = portal || {};\r\n        const { instance } = componentRef || {};\r\n        instance.placement = option.placement;\r\n        const drawerRef = new XDrawerRef(overlayRef, instance);\r\n        if (content instanceof TemplateRef) {\r\n            instance.attachTemplatePortal(new TemplatePortal(content, option.viewContainerRef, { $implicit: option.data, drawerRef: drawerRef }));\r\n        }\r\n        else {\r\n            const injector = this.portalService.createInjector([\r\n                { provide: X_DRAWER_DATA, useValue: option.data },\r\n                { provide: XDrawerRef, useValue: drawerRef }\r\n            ]);\r\n            instance.attachComponentPortal(new ComponentPortal(content, option.viewContainerRef, injector));\r\n        }\r\n        if (option.hasBackdrop && option.backdropClose && overlayRef)\r\n            overlayRef.backdropClick().subscribe(() => {\r\n                drawerRef.close();\r\n            });\r\n        return drawerRef;\r\n    }\r\n}\r\n/** @nocollapse */ XDrawerService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDrawerService, deps: [{ token: i2.XPortalService }, { token: i3.XConfigService }, { token: i1.Overlay }], target: i0.ɵɵFactoryTarget.Injectable });\r\n/** @nocollapse */ XDrawerService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDrawerService });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDrawerService, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: i2.XPortalService }, { type: i3.XConfigService }, { type: i1.Overlay }]; } });\n\nclass XDrawerModule {\r\n}\r\n/** @nocollapse */ XDrawerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDrawerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\n/** @nocollapse */ XDrawerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.2\", ngImport: i0, type: XDrawerModule, declarations: [XDrawerComponent,\r\n        XDrawerCloseDirective,\r\n        XDrawerTitleDirective,\r\n        XDrawerContentDirective,\r\n        XDrawerPortalComponent,\r\n        XDrawerContainerComponent,\r\n        XDrawerProperty,\r\n        XDrawerContainerProperty], imports: [CommonModule, XOutletModule, XButtonModule, XPortalModule], exports: [XDrawerComponent,\r\n        XDrawerCloseDirective,\r\n        XDrawerTitleDirective,\r\n        XDrawerContentDirective,\r\n        XDrawerPortalComponent,\r\n        XDrawerContainerComponent] });\r\n/** @nocollapse */ XDrawerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDrawerModule, providers: [XDrawerService], imports: [CommonModule, XOutletModule, XButtonModule, XPortalModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XDrawerModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        XDrawerComponent,\r\n                        XDrawerCloseDirective,\r\n                        XDrawerTitleDirective,\r\n                        XDrawerContentDirective,\r\n                        XDrawerPortalComponent,\r\n                        XDrawerContainerComponent,\r\n                        XDrawerProperty,\r\n                        XDrawerContainerProperty\r\n                    ],\r\n                    exports: [\r\n                        XDrawerComponent,\r\n                        XDrawerCloseDirective,\r\n                        XDrawerTitleDirective,\r\n                        XDrawerContentDirective,\r\n                        XDrawerPortalComponent,\r\n                        XDrawerContainerComponent\r\n                    ],\r\n                    imports: [CommonModule, XOutletModule, XButtonModule, XPortalModule],\r\n                    providers: [XDrawerService]\r\n                }]\r\n        }] });\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { XDrawerCloseDirective, XDrawerComponent, XDrawerContainerComponent, XDrawerContainerPrefix, XDrawerContainerProperty, XDrawerContentDirective, XDrawerModule, XDrawerPortalComponent, XDrawerPrefix, XDrawerProperty, XDrawerRef, XDrawerService, XDrawerTitleDirective, X_DRAWER_CONFIG_NAME, X_DRAWER_CONTAINER, X_DRAWER_DATA };\n"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,SAASC,cAAT,EAAyBC,YAAzB,EAAuCC,SAAvC,EAAkDC,KAAlD,EAAyDC,MAAzD,EAAiEC,iBAAjE,EAAoFC,uBAApF,EAA6GC,WAA7G,EAA0HC,QAA1H,EAAoIC,MAApI,EAA4IC,SAA5I,EAAuJC,YAAvJ,EAAqKC,SAArK,EAAgLC,WAAhL,EAA6LC,UAA7L,EAAyMC,QAAzM,QAAyN,eAAzN;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAO,KAAKC,EAAZ,MAAoB,kBAApB;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,WAAnC,EAAgDC,SAAhD,EAA2DC,WAA3D,EAAwEC,QAAxE,EAAkFC,eAAlF,EAAmGC,WAAnG,QAAsH,kBAAtH;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,oBAApB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAO,KAAKC,EAAZ,MAAoB,oBAApB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAO,KAAKC,EAAZ,MAAoB,oBAApB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAO,KAAKC,IAAZ,MAAsB,qBAAtB;AACA,SAASC,gBAAT,EAA2BC,eAA3B,EAA4CC,cAA5C,EAA4DC,eAA5D,QAAmF,qBAAnF;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AAEA;AACA;AACA;AACA;AACA;;;;;;;gBAsBqH1C,E;;IAAAA,EAuLuU,4B;IAvLvUA,EAuL4X;MAvL5XA,EAuL4X;MAAA,eAvL5XA,EAuL4X;MAAA,OAvL5XA,EAuLsY,kCAAV;IAAA,E;IAvL5XA,EAuLsZ,e;;;;;;IAvLtZA,EAuLsuB,2B;IAvLtuBA,EAuLuwB,U;IAvLvwBA,EAuLkxB,wB;;;;mBAvLlxBA,E;IAAAA,EAuLuwB,a;IAvLvwBA,EAuLuwB,gC;;;;;;gBAvLvwBA,E;;IAAAA,EAuLmoB,yC;IAvLnoBA,EAuLsuB,qG;IAvLtuBA,EAuL2yB,e;IAvL3yBA,EAuL2zB,kC;IAvL3zBA,EAuL62B;MAvL72BA,EAuL62B;MAAA,eAvL72BA,EAuL62B;MAAA,OAvL72BA,EAuLu3B,kCAAV;IAAA,E;IAvL72BA,EAuLy5B,iB;;;;mBAvLz5BA,E;IAAAA,EAuLqvB,a;IAvLrvBA,EAuLqvB,oC;;;;;;IAvLrvBA,EAuLuU,6E;IAvLvUA,EAuLka,4B;IAvLlaA,EAuLmoB,6E;IAvLnoBA,EAuL07B,4B;IAvL17BA,EAuLo+B,gB;IAvLp+BA,EAuLqgC,iB;;;;mBAvLrgCA,E;IAAAA,EAuLyW,qC;IAvLzWA,EAuLse,a;IAvLteA,EAuLse,4D;IAvLteA,EAuLsiB,gD;IAvLtiBA,EAuLwc,+E;IAvLxcA,EAuLmqB,a;IAvLnqBA,EAuLmqB,iC;;;;;;IAvLnqBA,EAuLqlC,sB;;;;;;IAvLrlCA,EAuL6iC,2B;IAvL7iCA,EAuLqlC,iG;IAvLrlCA,EAuLspC,wB;;;;IAvLtpCA,E;;gBAAAA,E;;IAAAA,EAuLomC,a;IAvLpmCA,EAuLomC,oC;;;;;;AA5MztC,MAAM2C,aAAa,GAAG,UAAtB;AACA,MAAMC,oBAAoB,GAAG,QAA7B;AACA,MAAMC,aAAa,GAAG,IAAI5C,cAAJ,CAAmB,aAAnB,CAAtB;AACA;AACA;AACA;;AACA,MAAM6C,eAAN,SAA8B3B,SAA9B,CAAwC;EACpC4B,WAAW,GAAG;IACV,MAAM,GAAGC,SAAT;IACA;AACR;AACA;AACA;;IACQ,KAAKC,KAAL,GAAa,IAAI/C,YAAJ,EAAb;IACA;AACR;AACA;AACA;;IACQ,KAAKgD,aAAL,GAAqB,IAAIhD,YAAJ,EAArB;EACH;;AAbmC;AAexC;;;AAAmB4C,eAAe,CAACK,IAAhB;EAAA;EAAA;IAAA,wEAAkGnD,EAAlG,uBAA4G8C,eAA5G,SAA4GA,eAA5G;EAAA;AAAA;AACnB;;;AAAmBA,eAAe,CAACM,IAAhB,kBADkGpD,EAClG;EAAA,MAAgG8C,eAAhG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA,WADkG9C,EAClG;EAAA;EAAA;EAAA;EAAA;AAAA;;AACnBiB,UAAU,CAAC,CACPG,aAAa,EADN,CAAD,EAEP0B,eAAe,CAACO,SAFT,EAEoB,SAFpB,EAE+B,KAAK,CAFpC,CAAV;;AAGApC,UAAU,CAAC,CACPI,WAAW,CAACuB,oBAAD,EAAuB,OAAvB,CADJ,CAAD,EAEPE,eAAe,CAACO,SAFT,EAEoB,WAFpB,EAEiC,KAAK,CAFtC,CAAV;;AAGApC,UAAU,CAAC,CACPI,WAAW,CAACuB,oBAAD,EAAuB,KAAvB,CADJ,CAAD,EAEPE,eAAe,CAACO,SAFT,EAEoB,MAFpB,EAE4B,KAAK,CAFjC,CAAV;;AAGApC,UAAU,CAAC,CACPI,WAAW,CAACuB,oBAAD,EAAuB,IAAvB,CADJ,CAAD,EAEPE,eAAe,CAACO,SAFT,EAEoB,eAFpB,EAEqC,KAAK,CAF1C,CAAV;;AAGApC,UAAU,CAAC,CACPI,WAAW,CAACuB,oBAAD,EAAuB,IAAvB,CADJ,CAAD,EAEPE,eAAe,CAACO,SAFT,EAEoB,aAFpB,EAEmC,KAAK,CAFxC,CAAV;;AAGApC,UAAU,CAAC,CACPI,WAAW,CAACuB,oBAAD,EAAuB,EAAvB,CADJ,CAAD,EAEPE,eAAe,CAACO,SAFT,EAEoB,WAFpB,EAEiC,KAAK,CAFtC,CAAV;;AAGA;EAAA,mDApBqHrD,EAoBrH,mBAA2F8C,eAA3F,EAAwH,CAAC;IAC7GQ,IAAI,EAAEnD,SADuG;IAE7GoD,IAAI,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAZ,CAAD;EAFuG,CAAD,CAAxH,QAG4B;IAAEC,KAAK,EAAE,CAAC;MACtBH,IAAI,EAAElD;IADgB,CAAD,CAAT;IAEZsD,OAAO,EAAE,CAAC;MACVJ,IAAI,EAAElD;IADI,CAAD,CAFG;IAIZuD,SAAS,EAAE,CAAC;MACZL,IAAI,EAAElD;IADM,CAAD,CAJC;IAMZwD,IAAI,EAAE,CAAC;MACPN,IAAI,EAAElD;IADC,CAAD,CANM;IAQZyD,aAAa,EAAE,CAAC;MAChBP,IAAI,EAAElD;IADU,CAAD,CARH;IAUZ0D,WAAW,EAAE,CAAC;MACdR,IAAI,EAAElD;IADQ,CAAD,CAVD;IAYZ2D,SAAS,EAAE,CAAC;MACZT,IAAI,EAAElD;IADM,CAAD,CAZC;IAcZ6C,KAAK,EAAE,CAAC;MACRK,IAAI,EAAEjD;IADE,CAAD,CAdK;IAgBZ6C,aAAa,EAAE,CAAC;MAChBI,IAAI,EAAEjD;IADU,CAAD;EAhBH,CAH5B;AAAA;AAsBA;AACA;AACA;AACA;AACA;;;AACA,MAAM2D,sBAAsB,GAAG,oBAA/B;AACA,MAAMC,kBAAkB,GAAG,IAAIhE,cAAJ,CAAmB,oBAAnB,CAA3B;AACA;AACA;AACA;;AACA,MAAMiE,wBAAN,SAAuC/C,SAAvC,CAAiD;AAEjD;;;AAAmB+C,wBAAwB,CAACf,IAAzB;EAAA;EAAA;IAAA,0FAtDkGnD,EAsDlG,uBAAqHkE,wBAArH,SAAqHA,wBAArH;EAAA;AAAA;AACnB;;;AAAmBA,wBAAwB,CAACd,IAAzB,kBAvDkGpD,EAuDlG;EAAA,MAAyGkE,wBAAzG;EAAA;EAAA,WAvDkGlE,EAuDlG;EAAA;EAAA;EAAA;EAAA;AAAA;;AACnB;EAAA,mDAxDqHA,EAwDrH,mBAA2FkE,wBAA3F,EAAiI,CAAC;IACtHZ,IAAI,EAAEnD,SADgH;IAEtHoD,IAAI,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAZ,CAAD;EAFgH,CAAD,CAAjI;AAAA;;AAKA,MAAMW,yBAAN,SAAwCD,wBAAxC,CAAiE;EAC7DnB,WAAW,GAAG;IACV;IACA,KAAKqB,IAAL,GAAY,IAAZ;EACH;;AAJ4D;AAMjE;;;AAAmBD,yBAAyB,CAAChB,IAA1B;EAAA,iBAAsHgB,yBAAtH;AAAA;AACnB;;;AAAmBA,yBAAyB,CAACf,IAA1B,kBApEkGpD,EAoElG;EAAA,MAA0GmE,yBAA1G;EAAA;EAAA;EAAA;IAAA;MApEkGnE,EAoElG;IAAA;EAAA;EAAA,WApEkGA,EAoElG,oBAAmP,CAC9P;IACIqE,OAAO,EAAEJ,kBADb;IAEIK,WAAW,EAAEH;EAFjB,CAD8P,CAAnP,GApEkGnE,EAoElG;EAAA;EAAA;EAAA;EAAA;IAAA;MApEkGA,EAoElG;MApEkGA,EAyE9D,gBALpC;IAAA;EAAA;EAAA;EAAA;EAAA;AAAA;;AAMnB;EAAA,mDA1EqHA,EA0ErH,mBAA2FmE,yBAA3F,EAAkI,CAAC;IACvHb,IAAI,EAAEnD,SADiH;IAEvHoD,IAAI,EAAE,CAAC;MAAEgB,QAAQ,EAAE,oBAAZ;MAAkCC,aAAa,EAAElE,iBAAiB,CAACmE,IAAnE;MAAyEC,eAAe,EAAEnE,uBAAuB,CAACoE,MAAlH;MAA0HC,SAAS,EAAE,CAChI;QACIP,OAAO,EAAEJ,kBADb;QAEIK,WAAW,EAAEH;MAFjB,CADgI,CAArI;MAKIX,QAAQ,EAAE,+BALd;MAK+CqB,MAAM,EAAE,CAAC,g+BAAD;IALvD,CAAD;EAFiH,CAAD,CAAlI,EAQ4B,YAAY;IAAE,OAAO,EAAP;EAAY,CARtD,EAQwE;IAAET,IAAI,EAAE,CAAC;MACjEd,IAAI,EAAE9C,WAD2D;MAEjE+C,IAAI,EAAE,CAAC,0BAAD;IAF2D,CAAD;EAAR,CARxE;AAAA;;AAaA,MAAMuB,gBAAN,SAA+BhC,eAA/B,CAA+C;EAC3CC,WAAW,CAACgC,QAAD,EAAWC,UAAX,EAAuBC,GAAvB,EAA4BC,OAA5B,EAAqCC,aAArC,EAAoDC,gBAApD,EAAsEC,aAAtE,EAAqFC,SAArF,EAAgG;IACvG;IACA,KAAKP,QAAL,GAAgBA,QAAhB;IACA,KAAKC,UAAL,GAAkBA,UAAlB;IACA,KAAKC,GAAL,GAAWA,GAAX;IACA,KAAKC,OAAL,GAAeA,OAAf;IACA,KAAKC,aAAL,GAAqBA,aAArB;IACA,KAAKC,gBAAL,GAAwBA,gBAAxB;IACA,KAAKC,aAAL,GAAqBA,aAArB;IACA,KAAKC,SAAL,GAAiBA,SAAjB;IACA,KAAKC,KAAL,GAAa,IAAb;IACA,KAAKC,KAAL,GAAa,MAAb;IACA,KAAKC,MAAL,GAAc,MAAd;EACH;;EACa,IAAVC,UAAU,GAAG;IACb,OAAO,KAAKhC,OAAZ;EACH;;EACDiC,QAAQ,GAAG;IACP,KAAKC,WAAL;IACA,KAAKC,OAAL;EACH;;EACDC,WAAW,CAACC,OAAD,EAAU;IACjB,MAAM;MAAErC,OAAF;MAAWC;IAAX,IAAyBoC,OAA/B;IACAzE,SAAS,CAACoC,OAAD,CAAT,IAAsB,KAAKsC,UAAL,EAAtB;;IACA,IAAI1E,SAAS,CAACqC,SAAD,CAAb,EAA0B;MACtB,KAAKiC,WAAL;MACA,KAAKC,OAAL;IACH;EACJ;;EACDI,WAAW,GAAG;IACV,KAAKC,WAAL;EACH;;EACDA,WAAW,GAAG;IACV,KAAKX,KAAL,EAAYW,WAAZ;EACH;;EACDN,WAAW,GAAG;IACVrE,WAAW,CAAC,KAAK4E,QAAN,CAAX;IACA,KAAKA,QAAL,GAAgB;MACZ,CAAE,GAAExD,aAAc,IAAG,KAAKgB,SAAU,EAApC,GAAwC,CAACnC,QAAQ,CAAC,KAAKmC,SAAN,CADrC;MAEZ,CAAE,GAAEhB,aAAc,WAAlB,GAA+BnB,QAAQ,CAAC,KAAKiC,KAAN;IAF3B,CAAhB;EAIH;;EACDoC,OAAO,GAAG;IACN,IAAI,KAAKP,SAAT,EACI,CAAC,KAAKE,KAAN,EAAa,KAAKC,MAAlB,IAA4B,KAAKW,OAAL,EAA5B;EACP;;EACDA,OAAO,GAAG;IACN,OAAO,CACH,KAAKzC,SAAL,KAAmB,MAAnB,IAA6B,KAAKA,SAAL,KAAmB,OAAhD,GAA0D,KAAKC,IAA/D,GAAsE,MADnE,EAEH,KAAKD,SAAL,KAAmB,KAAnB,IAA4B,KAAKA,SAAL,KAAmB,QAA/C,GAA0D,KAAKC,IAA/D,GAAsE,MAFnE,CAAP;EAIH;;EACDoC,UAAU,GAAG;IACT,IAAI,KAAKtC,OAAT,EAAkB;MACd,KAAK2C,YAAL;IACH,CAFD,MAGK;MACD,KAAKC,WAAL;IACH;EACJ;;EACDD,YAAY,GAAG;IACX,IAAI,KAAKf,SAAT,EACI;IACJ,MAAM,CAACE,KAAD,EAAQC,MAAR,IAAkB,KAAKW,OAAL,EAAxB;IACA,KAAKG,MAAL,GAAc,KAAKpB,aAAL,CAAmBqB,MAAnB,CAA0B;MACpCC,OAAO,EAAE,KAAKC,SADsB;MAEpCtB,gBAAgB,EAAE,KAAKA,gBAFa;MAGpCuB,aAAa,EAAE;QACX7C,WAAW,EAAE,IADF;QAEX8C,cAAc,EAAE,KAAK1B,OAAL,CAAa2B,gBAAb,CAA8BC,KAA9B,EAFL;QAGXC,gBAAgB,EAAE,KAAK5B,aAAL,CAAmB6B,WAAnB,CAA+B,KAAKrD,SAApC,EAA+C6B,KAA/C,EAAsDC,MAAtD;MAHP;IAHqB,CAA1B,CAAd;IASA,IAAI,KAAKc,MAAL,CAAYU,UAAhB,EACI,KAAK1B,KAAL,GAAa,KAAKgB,MAAL,CAAYU,UAAZ,CAAuBC,aAAvB,GAAuCC,SAAvC,CAAiD,MAAM,KAAKb,WAAL,EAAvD,CAAb;EACP;;EACDc,cAAc,GAAG;IACb,OAAO,KAAKb,MAAL,EAAaU,UAAb,EAAyBI,WAAzB,EAAP;EACH;;EACDf,WAAW,GAAG;IACV,IAAI,KAAKhB,SAAT,EAAoB;MAChB,KAAKpC,aAAL,CAAmBoE,IAAnB,CAAwB,KAAK5D,OAA7B;MACA,KAAKT,KAAL,CAAWqE,IAAX;IACH,CAHD,MAIK;MACD,IAAI,KAAKF,cAAL,EAAJ,EAA2B;QACvB,KAAKb,MAAL,EAAaU,UAAb,EAAyBM,MAAzB;QACA,KAAKrB,WAAL;QACA,KAAKhD,aAAL,CAAmBoE,IAAnB,CAAwB,KAAK5D,OAA7B;QACA,KAAKT,KAAL,CAAWqE,IAAX;MACH;IACJ;EACJ;;AA7F0C;AA+F/C;;;AAAmBxC,gBAAgB,CAAC3B,IAAjB;EAAA,iBAA6G2B,gBAA7G,EAtLkG9E,EAsLlG,mBAA+IA,EAAE,CAACwH,SAAlJ,GAtLkGxH,EAsLlG,mBAAwKA,EAAE,CAACyH,UAA3K,GAtLkGzH,EAsLlG,mBAAkMA,EAAE,CAAC0H,iBAArM,GAtLkG1H,EAsLlG,mBAAmO2B,EAAE,CAACgG,OAAtO,GAtLkG3H,EAsLlG,mBAA0P4B,EAAE,CAACgG,cAA7P,GAtLkG5H,EAsLlG,mBAAwRA,EAAE,CAAC6H,gBAA3R,GAtLkG7H,EAsLlG,mBAAwTkB,EAAE,CAAC4G,cAA3T,GAtLkG9H,EAsLlG,mBAAsViE,kBAAtV;AAAA;AACnB;;;AAAmBa,gBAAgB,CAAC1B,IAAjB,kBAvLkGpD,EAuLlG;EAAA,MAAiG8E,gBAAjG;EAAA;EAAA;IAAA;MAvLkG9E,EAuLlG;IAAA;;IAAA;MAAA;;MAvLkGA,EAuLlG,qBAvLkGA,EAuLlG;IAAA;EAAA;EAAA;EAAA;IAAA;MAvLkGA,EAuLlG;IAAA;EAAA;EAAA,WAvLkGA,EAuLlG,6BAvLkGA,EAuLlG;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAvLkGA,EAuLlG;MAvLkGA,EAuLyS,uFAvLzSA,EAuLyS,wBAA3Y;MAvLkGA,EAuL6iC,iFAA/oC;IAAA;;IAAA;MAvLkGA,EAuL4jC,aAA9pC;MAvLkGA,EAuL4jC,kCAA9pC;IAAA;EAAA;EAAA,eAAi1D8B,EAAE,CAACiG,OAAp1D,EAA+6DjG,EAAE,CAACkG,IAAl7D,EAAmhElG,EAAE,CAACmG,gBAAthE,EAA0rEjG,EAAE,CAACkG,gBAA7rE,EAA0yEhG,EAAE,CAACiG,gBAA7yE;EAAA;EAAA;EAAA;IAAA,WAAo2E,CAAC1G,eAAD;EAAp2E;EAAA;AAAA;;AACnB;EAAA,mDAxLqHzB,EAwLrH,mBAA2F8E,gBAA3F,EAAyH,CAAC;IAC9GxB,IAAI,EAAEnD,SADwG;IAE9GoD,IAAI,EAAE,CAAC;MAAEgB,QAAQ,EAAG,GAAE5B,aAAc,EAA7B;MAAgC6B,aAAa,EAAElE,iBAAiB,CAACmE,IAAjE;MAAuEC,eAAe,EAAEnE,uBAAuB,CAACoE,MAAhH;MAAwHyD,UAAU,EAAE,CAAC3G,eAAD,CAApI;MAAuJ+B,QAAQ,EAAE,k4BAAjK;MAAqiCqB,MAAM,EAAE,CAAC,6gBAAD;IAA7iC,CAAD;EAFwG,CAAD,CAAzH,EAG4B,YAAY;IAAE,OAAO,CAAC;MAAEvB,IAAI,EAAEtD,EAAE,CAACwH;IAAX,CAAD,EAAyB;MAAElE,IAAI,EAAEtD,EAAE,CAACyH;IAAX,CAAzB,EAAkD;MAAEnE,IAAI,EAAEtD,EAAE,CAAC0H;IAAX,CAAlD,EAAkF;MAAEpE,IAAI,EAAE3B,EAAE,CAACgG;IAAX,CAAlF,EAAwG;MAAErE,IAAI,EAAE1B,EAAE,CAACgG;IAAX,CAAxG,EAAqI;MAAEtE,IAAI,EAAEtD,EAAE,CAAC6H;IAAX,CAArI,EAAoK;MAAEvE,IAAI,EAAEpC,EAAE,CAAC4G;IAAX,CAApK,EAAiM;MAAExE,IAAI,EAAEa,yBAAR;MAAmCkE,UAAU,EAAE,CAAC;QAC9Q/E,IAAI,EAAE7C;MADwQ,CAAD,EAE9Q;QACC6C,IAAI,EAAE5C,MADP;QAEC6C,IAAI,EAAE,CAACU,kBAAD;MAFP,CAF8Q;IAA/C,CAAjM,CAAP;EAKlB,CARxB,EAQ0C;IAAEyB,UAAU,EAAE,CAAC;MACzCpC,IAAI,EAAE9C,WADmC;MAEzC+C,IAAI,EAAE,CAAC,wBAAD;IAFmC,CAAD,CAAd;IAG1BmD,SAAS,EAAE,CAAC;MACZpD,IAAI,EAAE3C,SADM;MAEZ4C,IAAI,EAAE,CAAC,WAAD,EAAc;QAAE+E,MAAM,EAAE;MAAV,CAAd;IAFM,CAAD;EAHe,CAR1C;AAAA;;AAgBA,MAAMC,sBAAN,SAAqClG,gBAArC,CAAsD;EAClDU,WAAW,GAAG;IACV;IACA,KAAKqB,IAAL,GAAY,IAAZ;IACA,KAAKoE,gBAAL,GAAwB,IAAItI,YAAJ,EAAxB;EACH;;EACDuI,IAAI,CAAC;IAAEC,OAAF;IAAWC;EAAX,CAAD,EAAyB;IACzB,KAAKH,gBAAL,CAAsBI,IAAtB,CAA2B;MAAEC,MAAM,EAAE,MAAV;MAAkBC,KAAK,EAAEJ,OAAzB;MAAkCC;IAAlC,CAA3B;EACH;;EACDI,KAAK,CAAC;IAAEL,OAAF;IAAWC;EAAX,CAAD,EAAyB;IAC1B,KAAKH,gBAAL,CAAsBI,IAAtB,CAA2B;MAAEC,MAAM,EAAE,OAAV;MAAmBC,KAAK,EAAEJ,OAA1B;MAAmCC;IAAnC,CAA3B;EACH;;EACDK,qBAAqB,CAACzC,MAAD,EAAS;IAC1B,IAAI,KAAK0C,YAAL,CAAkB5B,WAAlB,EAAJ,EAAqC;MACjC,MAAM6B,KAAK,CAAC,4BAAD,CAAX;IACH;;IACD,OAAO,KAAKD,YAAL,CAAkBD,qBAAlB,CAAwCzC,MAAxC,CAAP;EACH;;EACD4C,oBAAoB,CAAC5C,MAAD,EAAS;IACzB,IAAI,KAAK0C,YAAL,CAAkB5B,WAAlB,EAAJ,EAAqC;MACjC,MAAM6B,KAAK,CAAC,4BAAD,CAAX;IACH;;IACD,OAAO,KAAKD,YAAL,CAAkBE,oBAAlB,CAAuC5C,MAAvC,CAAP;EACH;;AAvBiD;AAyBtD;;;AAAmBgC,sBAAsB,CAACpF,IAAvB;EAAA,iBAAmHoF,sBAAnH;AAAA;AACnB;;;AAAmBA,sBAAsB,CAACnF,IAAvB,kBAlOkGpD,EAkOlG;EAAA,MAAuGuI,sBAAvG;EAAA;EAAA;IAAA;MAlOkGvI,EAkOlG,aAAibsC,eAAjb;IAAA;;IAAA;MAAA;;MAlOkGtC,EAkOlG,qBAlOkGA,EAkOlG;IAAA;EAAA;EAAA;EAAA;IAAA;MAlOkGA,EAkOlG;QAAA,OAAuG,gBAAvG;MAAA;QAAA,OAAuG,iBAAvG;MAAA;IAAA;;IAAA;MAlOkGA,EAkOlG;MAlOkGA,EAkOlG;IAAA;EAAA;EAAA,WAlOkGA,EAkOlG;EAAA;EAAA;EAAA;EAAA;IAAA;MAlOkGA,EAkOob,qFAAthB;IAAA;EAAA;EAAA,eAAyjCoC,IAAI,CAACE,eAA9jC;EAAA;EAAA;EAAA;IAAA,WAAgtC,CAACb,eAAD;EAAhtC;EAAA;AAAA;;AACnB;EAAA,mDAnOqHzB,EAmOrH,mBAA2FuI,sBAA3F,EAA+H,CAAC;IACpHjF,IAAI,EAAEnD,SAD8G;IAEpHoD,IAAI,EAAE,CAAC;MAAEgB,QAAQ,EAAE,iBAAZ;MAA+BC,aAAa,EAAElE,iBAAiB,CAACmE,IAAhE;MAAsEC,eAAe,EAAEnE,uBAAuB,CAACoE,MAA/G;MAAuHyD,UAAU,EAAE,CAAC3G,eAAD,CAAnI;MAAsJ+B,QAAQ,EAAE,iDAAhK;MAAmNqB,MAAM,EAAE,CAAC,2bAAD;IAA3N,CAAD;EAF8G,CAAD,CAA/H,EAG4B,YAAY;IAAE,OAAO,EAAP;EAAY,CAHtD,EAGwE;IAAET,IAAI,EAAE,CAAC;MACjEd,IAAI,EAAE9C,WAD2D;MAEjE+C,IAAI,EAAE,CAAC,uBAAD;IAF2D,CAAD,CAAR;IAGxDI,SAAS,EAAE,CAAC;MACZL,IAAI,EAAE9C,WADM;MAEZ+C,IAAI,EAAE,CAAC,oBAAD;IAFM,CAAD,CAH6C;IAMxDkF,IAAI,EAAE,CAAC;MACPnF,IAAI,EAAE1C,YADC;MAEP2C,IAAI,EAAE,CAAC,yBAAD,EAA4B,CAAC,QAAD,CAA5B;IAFC,CAAD,CANkD;IASxDwF,KAAK,EAAE,CAAC;MACRzF,IAAI,EAAE1C,YADE;MAER2C,IAAI,EAAE,CAAC,0BAAD,EAA6B,CAAC,QAAD,CAA7B;IAFE,CAAD,CATiD;IAYxD0F,YAAY,EAAE,CAAC;MACf3F,IAAI,EAAE3C,SADS;MAEf4C,IAAI,EAAE,CAACjB,eAAD,EAAkB;QAAEgG,MAAM,EAAE;MAAV,CAAlB;IAFS,CAAD;EAZ0C,CAHxE;AAAA,K,CAoBA;;;AACA,MAAMc,UAAN,CAAiB;EACbrG,WAAW,CAACkE,UAAD,EAAaoC,iBAAb,EAAgC;IACvC,KAAKpC,UAAL,GAAkBA,UAAlB;IACA,KAAKoC,iBAAL,GAAyBA,iBAAzB;EACH;;EACDpG,KAAK,GAAG;IACJ,KAAKoG,iBAAL,CAAuBb,gBAAvB,CACKc,IADL,CACU7G,MAAM,CAAE8G,KAAD,IAAWA,KAAK,CAACT,KAAN,KAAgB,MAAhB,IAA0BS,KAAK,CAACV,MAAN,KAAiB,MAAvD,CADhB,EACgFnG,IAAI,CAAC,CAAD,CADpF,EAEKyE,SAFL,CAEe,MAAM;MACjB,KAAKF,UAAL,CAAgBM,MAAhB;IACH,CAJD;IAKA,KAAK8B,iBAAL,CAAuB1F,SAAvB,GAAmC,MAAnC;EACH;;AAZY;;AAejB,MAAM6F,qBAAN,CAA4B;EACxBzG,WAAW,CAAC0G,SAAD,EAAY;IACnB,KAAKA,SAAL,GAAiBA,SAAjB;EACH;;EACDC,YAAY,GAAG;IACX,KAAKD,SAAL,IAAkB,KAAKA,SAAL,CAAexG,KAAf,EAAlB;EACH;;AANuB;AAQ5B;;;AAAmBuG,qBAAqB,CAACrG,IAAtB;EAAA,iBAAkHqG,qBAAlH,EA/QkGxJ,EA+QlG,mBAAyJoJ,UAAzJ;AAAA;AACnB;;;AAAmBI,qBAAqB,CAACG,IAAtB,kBAhRkG3J,EAgRlG;EAAA,MAAsGwJ,qBAAtG;EAAA;EAAA;IAAA;MAhRkGxJ,EAgRlG;QAAA,OAAsG,wBAAtG;MAAA;IAAA;EAAA;AAAA;;AACnB;EAAA,mDAjRqHA,EAiRrH,mBAA2FwJ,qBAA3F,EAA8H,CAAC;IACnHlG,IAAI,EAAEzC,SAD6G;IAEnH0C,IAAI,EAAE,CAAC;MACCgB,QAAQ,EAAG;IADZ,CAAD;EAF6G,CAAD,CAA9H,EAK4B,YAAY;IAAE,OAAO,CAAC;MAAEjB,IAAI,EAAE8F,UAAR;MAAoBf,UAAU,EAAE,CAAC;QAC/D/E,IAAI,EAAE7C;MADyD,CAAD;IAAhC,CAAD,CAAP;EAElB,CAPxB,EAO0C;IAAEiJ,YAAY,EAAE,CAAC;MAC3CpG,IAAI,EAAE1C,YADqC;MAE3C2C,IAAI,EAAE,CAAC,OAAD,EAAU,CAAC,QAAD,CAAV;IAFqC,CAAD;EAAhB,CAP1C;AAAA;;AAWA,MAAMqG,qBAAN,CAA4B;EACxB7G,WAAW,GAAG;IACV,KAAKqB,IAAL,GAAY,IAAZ;EACH;;AAHuB;AAK5B;;;AAAmBwF,qBAAqB,CAACzG,IAAtB;EAAA,iBAAkHyG,qBAAlH;AAAA;AACnB;;;AAAmBA,qBAAqB,CAACD,IAAtB,kBAlSkG3J,EAkSlG;EAAA,MAAsG4J,qBAAtG;EAAA;EAAA;EAAA;IAAA;MAlSkG5J,EAkSlG;IAAA;EAAA;AAAA;;AACnB;EAAA,mDAnSqHA,EAmSrH,mBAA2F4J,qBAA3F,EAA8H,CAAC;IACnHtG,IAAI,EAAEzC,SAD6G;IAEnH0C,IAAI,EAAE,CAAC;MACCgB,QAAQ,EAAG;IADZ,CAAD;EAF6G,CAAD,CAA9H,QAK4B;IAAEH,IAAI,EAAE,CAAC;MACrBd,IAAI,EAAE9C,WADe;MAErB+C,IAAI,EAAE,CAAC,6BAAD;IAFe,CAAD;EAAR,CAL5B;AAAA;;AASA,MAAMsG,uBAAN,CAA8B;EAC1B9G,WAAW,GAAG;IACV,KAAKqB,IAAL,GAAY,IAAZ;EACH;;AAHyB;AAK9B;;;AAAmByF,uBAAuB,CAAC1G,IAAxB;EAAA,iBAAoH0G,uBAApH;AAAA;AACnB;;;AAAmBA,uBAAuB,CAACF,IAAxB,kBAlTkG3J,EAkTlG;EAAA,MAAwG6J,uBAAxG;EAAA;EAAA;EAAA;IAAA;MAlTkG7J,EAkTlG;IAAA;EAAA;AAAA;;AACnB;EAAA,mDAnTqHA,EAmTrH,mBAA2F6J,uBAA3F,EAAgI,CAAC;IACrHvG,IAAI,EAAEzC,SAD+G;IAErH0C,IAAI,EAAE,CAAC;MACCgB,QAAQ,EAAG;IADZ,CAAD;EAF+G,CAAD,CAAhI,QAK4B;IAAEH,IAAI,EAAE,CAAC;MACrBd,IAAI,EAAE9C,WADe;MAErB+C,IAAI,EAAE,CAAC,+BAAD;IAFe,CAAD;EAAR,CAL5B;AAAA;;AAUA,MAAMuG,cAAN,CAAqB;EACjB/G,WAAW,CAACoC,aAAD,EAAgBE,aAAhB,EAA+BH,OAA/B,EAAwC;IAC/C,KAAKC,aAAL,GAAqBA,aAArB;IACA,KAAKE,aAAL,GAAqBA,aAArB;IACA,KAAKH,OAAL,GAAeA,OAAf;IACA,KAAK6E,OAAL,GAAe;MACXpG,SAAS,EAAE,OADA;MAEXC,IAAI,EAAE,KAFK;MAGXE,WAAW,EAAE,IAHF;MAIXD,aAAa,EAAE;IAJJ,CAAf;IAMA,KAAKmG,aAAL,GAAqB,KAAK3E,aAAL,CAAmB4E,qBAAnB,CAAyCrH,oBAAzC,CAArB;IACAsH,MAAM,CAACC,MAAP,CAAc,KAAKJ,OAAnB,EAA4B,KAAKC,aAAjC;EACH;;EACDI,MAAM,CAAC3D,OAAD,EAAU4D,MAAM,GAAG,EAAnB,EAAuB;IACzB3I,WAAW,CAAC2I,MAAD,EAAS,KAAKN,OAAd,CAAX;IACA,MAAMvE,KAAK,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB8E,QAAlB,CAA2BD,MAAM,CAAC1G,SAAlC,IAA+C0G,MAAM,CAACzG,IAAtD,GAA6D,MAA3E;IACA,MAAM6B,MAAM,GAAG,CAAC,KAAD,EAAQ,QAAR,EAAkB6E,QAAlB,CAA2BD,MAAM,CAAC1G,SAAlC,IAA+C0G,MAAM,CAACzG,IAAtD,GAA6D,MAA5E;IACA,MAAM2C,MAAM,GAAG,KAAKpB,aAAL,CAAmBqB,MAAnB,CAA0B;MACrCC,OAAO,EAAE8B,sBAD4B;MAErCnD,gBAAgB,EAAEiF,MAAM,CAACjF,gBAFY;MAGrCuB,aAAa,EAAE;QACX7C,WAAW,EAAEuG,MAAM,CAACvG,WADT;QAEXyG,UAAU,EAAEF,MAAM,CAACtG,SAFR;QAGX6C,cAAc,EAAE,KAAK1B,OAAL,CAAa2B,gBAAb,CAA8BC,KAA9B,EAHL;QAIXC,gBAAgB,EAAE,KAAK5B,aAAL,CAAmB6B,WAAnB,CAA+BqD,MAAM,CAAC1G,SAAtC,EAAiD6B,KAAjD,EAAwDC,MAAxD;MAJP;IAHsB,CAA1B,CAAf;IAUA,MAAM;MAAEwB,UAAF;MAAcuD;IAAd,IAA+BjE,MAAM,IAAI,EAA/C;IACA,MAAM;MAAEkE;IAAF,IAAeD,YAAY,IAAI,EAArC;IACAC,QAAQ,CAAC9G,SAAT,GAAqB0G,MAAM,CAAC1G,SAA5B;IACA,MAAM8F,SAAS,GAAG,IAAIL,UAAJ,CAAenC,UAAf,EAA2BwD,QAA3B,CAAlB;;IACA,IAAIhE,OAAO,YAAY3F,WAAvB,EAAoC;MAChC2J,QAAQ,CAACtB,oBAAT,CAA8B,IAAI5G,cAAJ,CAAmBkE,OAAnB,EAA4B4D,MAAM,CAACjF,gBAAnC,EAAqD;QAAEsF,SAAS,EAAEL,MAAM,CAACM,IAApB;QAA0BlB,SAAS,EAAEA;MAArC,CAArD,CAA9B;IACH,CAFD,MAGK;MACD,MAAMmB,QAAQ,GAAG,KAAKzF,aAAL,CAAmB0F,cAAnB,CAAkC,CAC/C;QAAExG,OAAO,EAAExB,aAAX;QAA0BiI,QAAQ,EAAET,MAAM,CAACM;MAA3C,CAD+C,EAE/C;QAAEtG,OAAO,EAAE+E,UAAX;QAAuB0B,QAAQ,EAAErB;MAAjC,CAF+C,CAAlC,CAAjB;MAIAgB,QAAQ,CAACzB,qBAAT,CAA+B,IAAIxG,eAAJ,CAAoBiE,OAApB,EAA6B4D,MAAM,CAACjF,gBAApC,EAAsDwF,QAAtD,CAA/B;IACH;;IACD,IAAIP,MAAM,CAACvG,WAAP,IAAsBuG,MAAM,CAACxG,aAA7B,IAA8CoD,UAAlD,EACIA,UAAU,CAACC,aAAX,GAA2BC,SAA3B,CAAqC,MAAM;MACvCsC,SAAS,CAACxG,KAAV;IACH,CAFD;IAGJ,OAAOwG,SAAP;EACH;;AA/CgB;AAiDrB;;;AAAmBK,cAAc,CAAC3G,IAAf;EAAA,iBAA2G2G,cAA3G,EA9WkG9J,EA8WlG,UAA2I4B,EAAE,CAACgG,cAA9I,GA9WkG5H,EA8WlG,UAAyKkB,EAAE,CAAC4G,cAA5K,GA9WkG9H,EA8WlG,UAAuM2B,EAAE,CAACgG,OAA1M;AAAA;AACnB;;;AAAmBmC,cAAc,CAACiB,KAAf,kBA/WkG/K,EA+WlG;EAAA,OAA+G8J,cAA/G;EAAA,SAA+GA,cAA/G;AAAA;;AACnB;EAAA,mDAhXqH9J,EAgXrH,mBAA2F8J,cAA3F,EAAuH,CAAC;IAC5GxG,IAAI,EAAEvC;EADsG,CAAD,CAAvH,EAE4B,YAAY;IAAE,OAAO,CAAC;MAAEuC,IAAI,EAAE1B,EAAE,CAACgG;IAAX,CAAD,EAA8B;MAAEtE,IAAI,EAAEpC,EAAE,CAAC4G;IAAX,CAA9B,EAA2D;MAAExE,IAAI,EAAE3B,EAAE,CAACgG;IAAX,CAA3D,CAAP;EAA0F,CAFpI;AAAA;;AAIA,MAAMqD,aAAN,CAAoB;AAEpB;;;AAAmBA,aAAa,CAAC7H,IAAd;EAAA,iBAA0G6H,aAA1G;AAAA;AACnB;;;AAAmBA,aAAa,CAACC,IAAd,kBAvXkGjL,EAuXlG;EAAA,MAA2GgL;AAA3G;AAanB;;AAAmBA,aAAa,CAACE,IAAd,kBApYkGlL,EAoYlG;EAAA,WAAqI,CAAC8J,cAAD,CAArI;EAAA,UAAiK/H,YAAjK,EAA+KE,aAA/K,EAA8LE,aAA9L,EAA6MN,aAA7M;AAAA;;AACnB;EAAA,mDArYqH7B,EAqYrH,mBAA2FgL,aAA3F,EAAsH,CAAC;IAC3G1H,IAAI,EAAEtC,QADqG;IAE3GuC,IAAI,EAAE,CAAC;MACC4H,YAAY,EAAE,CACVrG,gBADU,EAEV0E,qBAFU,EAGVI,qBAHU,EAIVC,uBAJU,EAKVtB,sBALU,EAMVpE,yBANU,EAOVrB,eAPU,EAQVoB,wBARU,CADf;MAWCkH,OAAO,EAAE,CACLtG,gBADK,EAEL0E,qBAFK,EAGLI,qBAHK,EAILC,uBAJK,EAKLtB,sBALK,EAMLpE,yBANK,CAXV;MAmBCkH,OAAO,EAAE,CAACtJ,YAAD,EAAeE,aAAf,EAA8BE,aAA9B,EAA6CN,aAA7C,CAnBV;MAoBC+C,SAAS,EAAE,CAACkF,cAAD;IApBZ,CAAD;EAFqG,CAAD,CAAtH;AAAA;AA0BA;AACA;AACA;;;AAEA,SAASN,qBAAT,EAAgC1E,gBAAhC,EAAkDX,yBAAlD,EAA6EH,sBAA7E,EAAqGE,wBAArG,EAA+H2F,uBAA/H,EAAwJmB,aAAxJ,EAAuKzC,sBAAvK,EAA+L5F,aAA/L,EAA8MG,eAA9M,EAA+NsG,UAA/N,EAA2OU,cAA3O,EAA2PF,qBAA3P,EAAkRhH,oBAAlR,EAAwSqB,kBAAxS,EAA4TpB,aAA5T"},"metadata":{},"sourceType":"module"}