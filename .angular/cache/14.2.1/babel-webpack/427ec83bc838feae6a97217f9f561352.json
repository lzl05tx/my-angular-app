{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, Input, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport * as i1 from '@ng-nest/ui/core';\nimport { XDataConvert, XInputBoolean, XWithConfig, XIsChange, XClearClass, XSetData } from '@ng-nest/ui/core';\nimport { XControlValueAccessor, XValueAccessor, XBaseFormModule } from '@ng-nest/ui/base-form';\nimport { Subject } from 'rxjs';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@ng-nest/ui/button';\nimport { XButtonModule } from '@ng-nest/ui/button';\nimport * as i4 from '@ng-nest/ui/outlet';\nimport { XOutletModule } from '@ng-nest/ui/outlet';\nimport { FormsModule } from '@angular/forms';\n/**\r\n * Checkbox\r\n * @selector x-checkbox\r\n * @decorator component\r\n */\n\nconst _c0 = [\"checkbox\"];\n\nfunction XCheckboxComponent_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"width\", ctx_r1.labelWidth);\n    i0.ɵɵclassProp(\"x-checkbox-label-required\", ctx_r1.required);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.labelMap);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.label);\n  }\n}\n\nfunction XCheckboxComponent_ng_container_3_x_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"x-button\", 7);\n    i0.ɵɵlistener(\"click\", function XCheckboxComponent_ng_container_3_x_button_2_Template_x_button_click_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const item_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.checkboxClick($event, item_r6));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"icon\", item_r6.icon)(\"title\", item_r6.title)(\"size\", ctx_r5.size)(\"activated\", ctx_r5.getChecked(item_r6.id))(\"disabled\", ctx_r5.getDisabled(item_r6.disabled));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r6.label);\n  }\n}\n\nfunction XCheckboxComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"x-buttons\");\n    i0.ɵɵtemplate(2, XCheckboxComponent_ng_container_3_x_button_2_Template, 2, 6, \"x-button\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.nodes)(\"ngForTrackBy\", ctx_r2.trackByItem);\n  }\n}\n\nfunction XCheckboxComponent_ng_template_4_div_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r10 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r10.label);\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    $node: a0\n  };\n};\n\nfunction XCheckboxComponent_ng_template_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵlistener(\"click\", function XCheckboxComponent_ng_template_4_div_1_Template_div_click_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const item_r10 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.checkboxClick($event, item_r10));\n    });\n    i0.ɵɵelement(1, \"span\", 11);\n    i0.ɵɵelementStart(2, \"span\", 12);\n    i0.ɵɵtemplate(3, XCheckboxComponent_ng_template_4_div_1_ng_container_3_Template, 2, 1, \"ng-container\", 13);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const item_r10 = ctx.$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"x-checked\", ctx_r9.getChecked(item_r10.id))(\"x-disabled\", ctx_r9.disabled || item_r10.disabled)(\"x-indeterminate\", ctx_r9.indeterminate);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"xOutlet\", item_r10.label)(\"xOutletContext\", i0.ɵɵpureFunction1(8, _c1, item_r10));\n  }\n}\n\nfunction XCheckboxComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, XCheckboxComponent_ng_template_4_div_1_Template, 4, 10, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.nodes)(\"ngForTrackBy\", ctx_r4.trackByItem);\n  }\n}\n\nconst XCheckboxPrefix = 'x-checkbox';\nconst X_CONFIG_NAME = 'checkbox';\n/**\r\n * Checkbox Property\r\n */\n\nclass XCheckboxProperty extends XControlValueAccessor {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * @zh_CN 多选框数据\r\n     * @en_US Checkbox data\r\n     */\n\n    this.data = [];\n  }\n\n}\n/** @nocollapse */\n\n\nXCheckboxProperty.ɵfac = /* @__PURE__ */function () {\n  let ɵXCheckboxProperty_BaseFactory;\n  return function XCheckboxProperty_Factory(t) {\n    return (ɵXCheckboxProperty_BaseFactory || (ɵXCheckboxProperty_BaseFactory = i0.ɵɵgetInheritedFactory(XCheckboxProperty)))(t || XCheckboxProperty);\n  };\n}();\n/** @nocollapse */\n\n\nXCheckboxProperty.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XCheckboxProperty,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    data: \"data\",\n    button: \"button\",\n    icon: \"icon\",\n    indeterminate: \"indeterminate\",\n    size: \"size\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function XCheckboxProperty_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n__decorate([XDataConvert()], XCheckboxProperty.prototype, \"data\", void 0);\n\n__decorate([XInputBoolean()], XCheckboxProperty.prototype, \"button\", void 0);\n\n__decorate([XInputBoolean()], XCheckboxProperty.prototype, \"icon\", void 0);\n\n__decorate([XInputBoolean()], XCheckboxProperty.prototype, \"indeterminate\", void 0);\n\n__decorate([XWithConfig(X_CONFIG_NAME, 'medium')], XCheckboxProperty.prototype, \"size\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XCheckboxProperty, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    button: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    indeterminate: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }]\n  });\n})();\n\nclass XCheckboxComponent extends XCheckboxProperty {\n  constructor(renderer, elementRef, cdr, configService) {\n    super();\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.cdr = cdr;\n    this.configService = configService;\n    this.nodes = [];\n    this.single = false;\n    this._unSubject = new Subject();\n  }\n\n  writeValue(value) {\n    this.value = value;\n    this.cdr.detectChanges();\n  }\n\n  getDisabled(disabled) {\n    return this.disabled || disabled;\n  }\n\n  ngOnInit() {\n    this.setFlex(this.checkbox.nativeElement, this.renderer, this.justify, this.align, this.direction);\n    this.setClassMap();\n  }\n\n  ngOnChanges(changes) {\n    const {\n      data\n    } = changes;\n    XIsChange(data) && this.setData();\n  }\n\n  ngOnDestroy() {\n    this._unSubject.next();\n\n    this._unSubject.unsubscribe();\n  }\n\n  setClassMap() {\n    XClearClass(this.labelMap);\n    this.labelMap[`x-text-align-${this.labelAlign}`] = this.labelAlign ? true : false;\n  }\n\n  checkboxClick(event, node) {\n    event.preventDefault();\n    if (this.disabled || node.disabled) return;\n    this.formControlValidator();\n\n    if (this.single) {\n      this.value = !this.value;\n    } else {\n      this.value = this.value || [];\n      let index = this.value.indexOf(node.id);\n\n      if (index >= 0) {\n        this.value.splice(index, 1);\n        this.value = [...this.value];\n      } else this.value = [...this.value, node.id];\n    }\n\n    this.cdr.detectChanges();\n    if (this.onChange) this.onChange(this.value);\n  }\n\n  getChecked(id) {\n    if (this.single) return this.value;else return Array.isArray(this.value) && this.value.includes(id);\n  }\n\n  setData() {\n    XSetData(this.data, this._unSubject).subscribe(x => {\n      this.nodes = x;\n      this.single = this.nodes.length === 1;\n      this.cdr.detectChanges();\n    });\n  }\n\n  trackByItem(_index, item) {\n    return item.id;\n  }\n\n  formControlChanges() {\n    this.setData();\n    this.ngOnInit();\n    this.cdr.detectChanges();\n  }\n\n}\n/** @nocollapse */\n\n\nXCheckboxComponent.ɵfac = function XCheckboxComponent_Factory(t) {\n  return new (t || XCheckboxComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.XConfigService));\n};\n/** @nocollapse */\n\n\nXCheckboxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XCheckboxComponent,\n  selectors: [[\"x-checkbox\"]],\n  viewQuery: function XCheckboxComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.checkbox = _t.first);\n    }\n  },\n  features: [i0.ɵɵProvidersFeature([XValueAccessor(XCheckboxComponent)]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 6,\n  vars: 11,\n  consts: [[1, \"x-checkbox\"], [\"checkbox\", \"\"], [3, \"x-checkbox-label-required\", \"width\", \"ngClass\", 4, \"ngIf\"], [4, \"ngIf\", \"ngIfElse\"], [\"default\", \"\"], [3, \"ngClass\"], [\"attrType\", \"button\", 3, \"icon\", \"title\", \"size\", \"activated\", \"disabled\", \"click\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"attrType\", \"button\", 3, \"icon\", \"title\", \"size\", \"activated\", \"disabled\", \"click\"], [1, \"x-checkbox-row\"], [\"class\", \"x-checkbox-item\", 3, \"x-checked\", \"x-disabled\", \"x-indeterminate\", \"click\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"x-checkbox-item\", 3, \"click\"], [1, \"x-checkbox-box\"], [1, \"x-checkbox-label\"], [4, \"xOutlet\", \"xOutletContext\"]],\n  template: function XCheckboxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, XCheckboxComponent_label_2_Template, 2, 6, \"label\", 2);\n      i0.ɵɵtemplate(3, XCheckboxComponent_ng_container_3_Template, 3, 2, \"ng-container\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, XCheckboxComponent_ng_template_4_Template, 2, 2, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r3 = i0.ɵɵreference(5);\n\n      i0.ɵɵclassProp(\"x-flex\", ctx.justify || ctx.align || ctx.direction)(\"x-disabled\", ctx.disabled)(\"x-required\", ctx.requiredIsEmpty)(\"x-invalid\", ctx.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.label);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.button || ctx.icon)(\"ngIfElse\", _r3);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.XButtonComponent, i3.XButtonsComponent, i4.XOutletDirective],\n  styles: [\".x-checkbox{margin:0;padding:0;width:100%}.x-checkbox.x-flex{display:flex}.x-checkbox.x-justify-start{justify-content:flex-start}.x-checkbox.x-justify-center{justify-content:center}.x-checkbox.x-justify-end{justify-content:flex-end}.x-checkbox.x-justify-space-between{justify-content:space-between}.x-checkbox.x-justify-space-around{justify-content:space-around}.x-checkbox.x-align-start{align-items:flex-start}.x-checkbox.x-align-center{align-items:center}.x-checkbox.x-align-end{align-items:flex-end}.x-checkbox.x-direction-column{flex-direction:column}.x-checkbox.x-direction-column-reverse{flex-direction:column-reverse}.x-checkbox.x-direction-row{flex-direction:row}.x-checkbox.x-direction-row-reverse{flex-direction:row-reverse}.x-checkbox>label{display:inline-block;white-space:nowrap;height:calc(var(--x-font-size) + .875rem);line-height:calc(var(--x-font-size) + .875rem);position:relative;color:var(--x-text-300);font-weight:600}.x-checkbox>label.x-text-align-start{text-align:start}.x-checkbox>label.x-text-align-center{text-align:center}.x-checkbox>label.x-text-align-end{text-align:end}.x-checkbox-row{flex:1;display:flex;align-items:center;flex-wrap:wrap;position:relative;height:calc(var(--x-font-size) + .875rem);line-height:calc(var(--x-font-size) + .875rem)}.x-checkbox-item{position:relative;display:inline-flex;align-items:center;white-space:nowrap;outline:none;margin-right:.875rem;font-size:.875rem;cursor:pointer;transition:all .3s}.x-checkbox-item:hover{color:var(--x-primary)}.x-checkbox-item:hover .x-checkbox-box{border-color:var(--x-primary)}.x-checkbox-item:last-child{margin-right:0}.x-checkbox-item.x-indeterminate .x-checkbox-box{border-color:var(--x-primary)}.x-checkbox-item.x-indeterminate .x-checkbox-box:after{top:50%;left:50%;width:.5rem;height:.5rem;background-color:var(--x-primary);border:0;transform:translate(-50%,-50%) scale(1);opacity:1;content:\\\" \\\"}.x-checkbox-item.x-checked .x-checkbox-box{border-color:var(--x-primary);background-color:var(--x-primary)}.x-checkbox-item.x-checked .x-checkbox-box:after{border:.125rem solid var(--x-background-100);border-top:0;border-left:0;top:.3875rem;left:.1875rem;width:.3125rem;height:.625rem;transform:rotate(40deg) scale(1) translate(-50%,-50%);opacity:1;transition:all .2s;content:\\\" \\\"}.x-checkbox-item.x-disabled{color:var(--x-text-400);cursor:not-allowed}.x-checkbox-item.x-disabled .x-checkbox-box{border-color:var(--x-border-100);background-color:var(--x-border-300)}.x-checkbox-item.x-disabled .x-checkbox-box:after{border-color:var(--x-text-400);background-color:transparent}.x-checkbox-box{border:var(--x-border-width) solid var(--x-border);width:1rem;height:1rem;border-radius:.0625rem;background-color:var(--x-background-a100);position:relative;display:inline-block;box-sizing:border-box;transition:all .3s}.x-checkbox-box:hover{border-color:var(--x-primary)}.x-checkbox-box:after{position:absolute;top:.35rem;left:.175rem;display:inline-block;width:.3rem;height:.6rem;border:.125rem solid var(--x-background-a100);border-top:0;border-left:0;transform:rotate(40deg) scale(0) translate(-50%,-50%);opacity:0;transition:all .3s;content:\\\" \\\"}.x-checkbox-label{margin-left:.325rem;-webkit-user-select:none;user-select:none}.x-checkbox-label-required:before{display:inline-block;margin-right:.25rem;color:var(--x-danger);line-height:1;font-size:var(--x-font-size-small);content:\\\"*\\\"}.x-checkbox.x-disabled .x-checkbox-item{color:var(--x-text-400);cursor:not-allowed}.x-checkbox.x-disabled .x-checkbox-item.x-indeterminate .x-checkbox-box:after{background-color:var(--x-text-400)}.x-checkbox.x-disabled .x-checkbox-item.x-checked .x-checkbox-box:after{background-color:transparent}.x-checkbox.x-disabled .x-checkbox-item .x-checkbox-box{border-color:var(--x-border-100);background-color:var(--x-border-300)}.x-checkbox.x-disabled .x-checkbox-item .x-checkbox-box:after{border-color:var(--x-text-400);background-color:transparent}.x-checkbox.x-invalid>label,.x-checkbox.x-required>label{color:var(--x-danger)}.x-checkbox.x-direction-row>label{padding:0 .5rem 0 0}.x-checkbox.x-direction-row-reverse>label{padding:0 0 0 .5rem}.x-checkbox.x-direction-column,.x-checkbox.x-direction-column-reverse{align-items:inherit}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XCheckboxComponent, [{\n    type: Component,\n    args: [{\n      selector: `${XCheckboxPrefix}`,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [XValueAccessor(XCheckboxComponent)],\n      template: \"<div\\r\\n  #checkbox\\r\\n  class=\\\"x-checkbox\\\"\\r\\n  [class.x-flex]=\\\"justify || align || direction\\\"\\r\\n  [class.x-disabled]=\\\"disabled\\\"\\r\\n  [class.x-required]=\\\"requiredIsEmpty\\\"\\r\\n  [class.x-invalid]=\\\"invalid\\\"\\r\\n>\\r\\n  <label *ngIf=\\\"label\\\" [class.x-checkbox-label-required]=\\\"required\\\" [style.width]=\\\"labelWidth\\\" [ngClass]=\\\"labelMap\\\">{{ label }}</label>\\r\\n  <ng-container *ngIf=\\\"button || icon; else default\\\">\\r\\n    <x-buttons>\\r\\n      <x-button\\r\\n        *ngFor=\\\"let item of nodes; trackBy: trackByItem\\\"\\r\\n        [icon]=\\\"item.icon\\\"\\r\\n        [title]=\\\"item.title\\\"\\r\\n        [size]=\\\"size\\\"\\r\\n        [activated]=\\\"getChecked(item.id)\\\"\\r\\n        [disabled]=\\\"getDisabled(item.disabled)\\\"\\r\\n        attrType=\\\"button\\\"\\r\\n        (click)=\\\"checkboxClick($event, item)\\\"\\r\\n        >{{ item.label }}</x-button\\r\\n      >\\r\\n    </x-buttons>\\r\\n  </ng-container>\\r\\n</div>\\r\\n\\r\\n<ng-template #default>\\r\\n  <div class=\\\"x-checkbox-row\\\">\\r\\n    <div\\r\\n      class=\\\"x-checkbox-item\\\"\\r\\n      *ngFor=\\\"let item of nodes; trackBy: trackByItem\\\"\\r\\n      [class.x-checked]=\\\"getChecked(item.id)\\\"\\r\\n      [class.x-disabled]=\\\"disabled || item.disabled\\\"\\r\\n      [class.x-indeterminate]=\\\"indeterminate\\\"\\r\\n      (click)=\\\"checkboxClick($event, item)\\\"\\r\\n    >\\r\\n      <span class=\\\"x-checkbox-box\\\"></span>\\r\\n      <span class=\\\"x-checkbox-label\\\">\\r\\n        <ng-container *xOutlet=\\\"item.label; context: { $node: item }\\\">{{ item.label }}</ng-container>\\r\\n      </span>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\",\n      styles: [\".x-checkbox{margin:0;padding:0;width:100%}.x-checkbox.x-flex{display:flex}.x-checkbox.x-justify-start{justify-content:flex-start}.x-checkbox.x-justify-center{justify-content:center}.x-checkbox.x-justify-end{justify-content:flex-end}.x-checkbox.x-justify-space-between{justify-content:space-between}.x-checkbox.x-justify-space-around{justify-content:space-around}.x-checkbox.x-align-start{align-items:flex-start}.x-checkbox.x-align-center{align-items:center}.x-checkbox.x-align-end{align-items:flex-end}.x-checkbox.x-direction-column{flex-direction:column}.x-checkbox.x-direction-column-reverse{flex-direction:column-reverse}.x-checkbox.x-direction-row{flex-direction:row}.x-checkbox.x-direction-row-reverse{flex-direction:row-reverse}.x-checkbox>label{display:inline-block;white-space:nowrap;height:calc(var(--x-font-size) + .875rem);line-height:calc(var(--x-font-size) + .875rem);position:relative;color:var(--x-text-300);font-weight:600}.x-checkbox>label.x-text-align-start{text-align:start}.x-checkbox>label.x-text-align-center{text-align:center}.x-checkbox>label.x-text-align-end{text-align:end}.x-checkbox-row{flex:1;display:flex;align-items:center;flex-wrap:wrap;position:relative;height:calc(var(--x-font-size) + .875rem);line-height:calc(var(--x-font-size) + .875rem)}.x-checkbox-item{position:relative;display:inline-flex;align-items:center;white-space:nowrap;outline:none;margin-right:.875rem;font-size:.875rem;cursor:pointer;transition:all .3s}.x-checkbox-item:hover{color:var(--x-primary)}.x-checkbox-item:hover .x-checkbox-box{border-color:var(--x-primary)}.x-checkbox-item:last-child{margin-right:0}.x-checkbox-item.x-indeterminate .x-checkbox-box{border-color:var(--x-primary)}.x-checkbox-item.x-indeterminate .x-checkbox-box:after{top:50%;left:50%;width:.5rem;height:.5rem;background-color:var(--x-primary);border:0;transform:translate(-50%,-50%) scale(1);opacity:1;content:\\\" \\\"}.x-checkbox-item.x-checked .x-checkbox-box{border-color:var(--x-primary);background-color:var(--x-primary)}.x-checkbox-item.x-checked .x-checkbox-box:after{border:.125rem solid var(--x-background-100);border-top:0;border-left:0;top:.3875rem;left:.1875rem;width:.3125rem;height:.625rem;transform:rotate(40deg) scale(1) translate(-50%,-50%);opacity:1;transition:all .2s;content:\\\" \\\"}.x-checkbox-item.x-disabled{color:var(--x-text-400);cursor:not-allowed}.x-checkbox-item.x-disabled .x-checkbox-box{border-color:var(--x-border-100);background-color:var(--x-border-300)}.x-checkbox-item.x-disabled .x-checkbox-box:after{border-color:var(--x-text-400);background-color:transparent}.x-checkbox-box{border:var(--x-border-width) solid var(--x-border);width:1rem;height:1rem;border-radius:.0625rem;background-color:var(--x-background-a100);position:relative;display:inline-block;box-sizing:border-box;transition:all .3s}.x-checkbox-box:hover{border-color:var(--x-primary)}.x-checkbox-box:after{position:absolute;top:.35rem;left:.175rem;display:inline-block;width:.3rem;height:.6rem;border:.125rem solid var(--x-background-a100);border-top:0;border-left:0;transform:rotate(40deg) scale(0) translate(-50%,-50%);opacity:0;transition:all .3s;content:\\\" \\\"}.x-checkbox-label{margin-left:.325rem;-webkit-user-select:none;user-select:none}.x-checkbox-label-required:before{display:inline-block;margin-right:.25rem;color:var(--x-danger);line-height:1;font-size:var(--x-font-size-small);content:\\\"*\\\"}.x-checkbox.x-disabled .x-checkbox-item{color:var(--x-text-400);cursor:not-allowed}.x-checkbox.x-disabled .x-checkbox-item.x-indeterminate .x-checkbox-box:after{background-color:var(--x-text-400)}.x-checkbox.x-disabled .x-checkbox-item.x-checked .x-checkbox-box:after{background-color:transparent}.x-checkbox.x-disabled .x-checkbox-item .x-checkbox-box{border-color:var(--x-border-100);background-color:var(--x-border-300)}.x-checkbox.x-disabled .x-checkbox-item .x-checkbox-box:after{border-color:var(--x-text-400);background-color:transparent}.x-checkbox.x-invalid>label,.x-checkbox.x-required>label{color:var(--x-danger)}.x-checkbox.x-direction-row>label{padding:0 .5rem 0 0}.x-checkbox.x-direction-row-reverse>label{padding:0 0 0 .5rem}.x-checkbox.x-direction-column,.x-checkbox.x-direction-column-reverse{align-items:inherit}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.XConfigService\n    }];\n  }, {\n    checkbox: [{\n      type: ViewChild,\n      args: ['checkbox', {\n        static: true\n      }]\n    }]\n  });\n})();\n\nclass XCheckboxModule {}\n/** @nocollapse */\n\n\nXCheckboxModule.ɵfac = function XCheckboxModule_Factory(t) {\n  return new (t || XCheckboxModule)();\n};\n/** @nocollapse */\n\n\nXCheckboxModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: XCheckboxModule\n});\n/** @nocollapse */\n\nXCheckboxModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, FormsModule, XButtonModule, XOutletModule, XBaseFormModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [XCheckboxComponent, XCheckboxProperty],\n      exports: [XCheckboxComponent],\n      imports: [CommonModule, FormsModule, XButtonModule, XOutletModule, XBaseFormModule]\n    }]\n  }], null, null);\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { XCheckboxComponent, XCheckboxModule, XCheckboxPrefix, XCheckboxProperty };","map":{"version":3,"names":["i0","Component","Input","ViewEncapsulation","ChangeDetectionStrategy","ViewChild","NgModule","__decorate","i1","XDataConvert","XInputBoolean","XWithConfig","XIsChange","XClearClass","XSetData","XControlValueAccessor","XValueAccessor","XBaseFormModule","Subject","i2","CommonModule","i3","XButtonModule","i4","XOutletModule","FormsModule","XCheckboxPrefix","X_CONFIG_NAME","XCheckboxProperty","constructor","arguments","data","ɵfac","ɵcmp","prototype","type","args","template","button","icon","indeterminate","size","XCheckboxComponent","renderer","elementRef","cdr","configService","nodes","single","_unSubject","writeValue","value","detectChanges","getDisabled","disabled","ngOnInit","setFlex","checkbox","nativeElement","justify","align","direction","setClassMap","ngOnChanges","changes","setData","ngOnDestroy","next","unsubscribe","labelMap","labelAlign","checkboxClick","event","node","preventDefault","formControlValidator","index","indexOf","id","splice","onChange","getChecked","Array","isArray","includes","subscribe","x","length","trackByItem","_index","item","formControlChanges","Renderer2","ElementRef","ChangeDetectorRef","XConfigService","NgClass","NgForOf","NgIf","XButtonComponent","XButtonsComponent","XOutletDirective","selector","encapsulation","None","changeDetection","OnPush","providers","styles","static","XCheckboxModule","ɵmod","ɵinj","declarations","exports","imports"],"sources":["/Users/lzl/my-angular-app/node_modules/@ng-nest/ui/fesm2020/ng-nest-ui-checkbox.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, Input, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport * as i1 from '@ng-nest/ui/core';\nimport { XDataConvert, XInputBoolean, XWithConfig, XIsChange, XClearClass, XSetData } from '@ng-nest/ui/core';\nimport { XControlValueAccessor, XValueAccessor, XBaseFormModule } from '@ng-nest/ui/base-form';\nimport { Subject } from 'rxjs';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@ng-nest/ui/button';\nimport { XButtonModule } from '@ng-nest/ui/button';\nimport * as i4 from '@ng-nest/ui/outlet';\nimport { XOutletModule } from '@ng-nest/ui/outlet';\nimport { FormsModule } from '@angular/forms';\n\n/**\r\n * Checkbox\r\n * @selector x-checkbox\r\n * @decorator component\r\n */\r\nconst XCheckboxPrefix = 'x-checkbox';\r\nconst X_CONFIG_NAME = 'checkbox';\r\n/**\r\n * Checkbox Property\r\n */\r\nclass XCheckboxProperty extends XControlValueAccessor {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * @zh_CN 多选框数据\r\n         * @en_US Checkbox data\r\n         */\r\n        this.data = [];\r\n    }\r\n}\r\n/** @nocollapse */ XCheckboxProperty.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XCheckboxProperty, deps: null, target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XCheckboxProperty.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XCheckboxProperty, selector: \"ng-component\", inputs: { data: \"data\", button: \"button\", icon: \"icon\", indeterminate: \"indeterminate\", size: \"size\" }, usesInheritance: true, ngImport: i0, template: '', isInline: true });\r\n__decorate([\r\n    XDataConvert()\r\n], XCheckboxProperty.prototype, \"data\", void 0);\r\n__decorate([\r\n    XInputBoolean()\r\n], XCheckboxProperty.prototype, \"button\", void 0);\r\n__decorate([\r\n    XInputBoolean()\r\n], XCheckboxProperty.prototype, \"icon\", void 0);\r\n__decorate([\r\n    XInputBoolean()\r\n], XCheckboxProperty.prototype, \"indeterminate\", void 0);\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, 'medium')\r\n], XCheckboxProperty.prototype, \"size\", void 0);\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XCheckboxProperty, decorators: [{\r\n            type: Component,\r\n            args: [{ template: '' }]\r\n        }], propDecorators: { data: [{\r\n                type: Input\r\n            }], button: [{\r\n                type: Input\r\n            }], icon: [{\r\n                type: Input\r\n            }], indeterminate: [{\r\n                type: Input\r\n            }], size: [{\r\n                type: Input\r\n            }] } });\n\nclass XCheckboxComponent extends XCheckboxProperty {\r\n    constructor(renderer, elementRef, cdr, configService) {\r\n        super();\r\n        this.renderer = renderer;\r\n        this.elementRef = elementRef;\r\n        this.cdr = cdr;\r\n        this.configService = configService;\r\n        this.nodes = [];\r\n        this.single = false;\r\n        this._unSubject = new Subject();\r\n    }\r\n    writeValue(value) {\r\n        this.value = value;\r\n        this.cdr.detectChanges();\r\n    }\r\n    getDisabled(disabled) {\r\n        return (this.disabled || disabled);\r\n    }\r\n    ngOnInit() {\r\n        this.setFlex(this.checkbox.nativeElement, this.renderer, this.justify, this.align, this.direction);\r\n        this.setClassMap();\r\n    }\r\n    ngOnChanges(changes) {\r\n        const { data } = changes;\r\n        XIsChange(data) && this.setData();\r\n    }\r\n    ngOnDestroy() {\r\n        this._unSubject.next();\r\n        this._unSubject.unsubscribe();\r\n    }\r\n    setClassMap() {\r\n        XClearClass(this.labelMap);\r\n        this.labelMap[`x-text-align-${this.labelAlign}`] = this.labelAlign ? true : false;\r\n    }\r\n    checkboxClick(event, node) {\r\n        event.preventDefault();\r\n        if (this.disabled || node.disabled)\r\n            return;\r\n        this.formControlValidator();\r\n        if (this.single) {\r\n            this.value = !this.value;\r\n        }\r\n        else {\r\n            this.value = this.value || [];\r\n            let index = this.value.indexOf(node.id);\r\n            if (index >= 0) {\r\n                this.value.splice(index, 1);\r\n                this.value = [...this.value];\r\n            }\r\n            else\r\n                this.value = [...this.value, node.id];\r\n        }\r\n        this.cdr.detectChanges();\r\n        if (this.onChange)\r\n            this.onChange(this.value);\r\n    }\r\n    getChecked(id) {\r\n        if (this.single)\r\n            return this.value;\r\n        else\r\n            return Array.isArray(this.value) && this.value.includes(id);\r\n    }\r\n    setData() {\r\n        XSetData(this.data, this._unSubject).subscribe((x) => {\r\n            this.nodes = x;\r\n            this.single = this.nodes.length === 1;\r\n            this.cdr.detectChanges();\r\n        });\r\n    }\r\n    trackByItem(_index, item) {\r\n        return item.id;\r\n    }\r\n    formControlChanges() {\r\n        this.setData();\r\n        this.ngOnInit();\r\n        this.cdr.detectChanges();\r\n    }\r\n}\r\n/** @nocollapse */ XCheckboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XCheckboxComponent, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.XConfigService }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XCheckboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XCheckboxComponent, selector: \"x-checkbox\", providers: [XValueAccessor(XCheckboxComponent)], viewQueries: [{ propertyName: \"checkbox\", first: true, predicate: [\"checkbox\"], descendants: true, static: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<div\\r\\n  #checkbox\\r\\n  class=\\\"x-checkbox\\\"\\r\\n  [class.x-flex]=\\\"justify || align || direction\\\"\\r\\n  [class.x-disabled]=\\\"disabled\\\"\\r\\n  [class.x-required]=\\\"requiredIsEmpty\\\"\\r\\n  [class.x-invalid]=\\\"invalid\\\"\\r\\n>\\r\\n  <label *ngIf=\\\"label\\\" [class.x-checkbox-label-required]=\\\"required\\\" [style.width]=\\\"labelWidth\\\" [ngClass]=\\\"labelMap\\\">{{ label }}</label>\\r\\n  <ng-container *ngIf=\\\"button || icon; else default\\\">\\r\\n    <x-buttons>\\r\\n      <x-button\\r\\n        *ngFor=\\\"let item of nodes; trackBy: trackByItem\\\"\\r\\n        [icon]=\\\"item.icon\\\"\\r\\n        [title]=\\\"item.title\\\"\\r\\n        [size]=\\\"size\\\"\\r\\n        [activated]=\\\"getChecked(item.id)\\\"\\r\\n        [disabled]=\\\"getDisabled(item.disabled)\\\"\\r\\n        attrType=\\\"button\\\"\\r\\n        (click)=\\\"checkboxClick($event, item)\\\"\\r\\n        >{{ item.label }}</x-button\\r\\n      >\\r\\n    </x-buttons>\\r\\n  </ng-container>\\r\\n</div>\\r\\n\\r\\n<ng-template #default>\\r\\n  <div class=\\\"x-checkbox-row\\\">\\r\\n    <div\\r\\n      class=\\\"x-checkbox-item\\\"\\r\\n      *ngFor=\\\"let item of nodes; trackBy: trackByItem\\\"\\r\\n      [class.x-checked]=\\\"getChecked(item.id)\\\"\\r\\n      [class.x-disabled]=\\\"disabled || item.disabled\\\"\\r\\n      [class.x-indeterminate]=\\\"indeterminate\\\"\\r\\n      (click)=\\\"checkboxClick($event, item)\\\"\\r\\n    >\\r\\n      <span class=\\\"x-checkbox-box\\\"></span>\\r\\n      <span class=\\\"x-checkbox-label\\\">\\r\\n        <ng-container *xOutlet=\\\"item.label; context: { $node: item }\\\">{{ item.label }}</ng-container>\\r\\n      </span>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\", styles: [\".x-checkbox{margin:0;padding:0;width:100%}.x-checkbox.x-flex{display:flex}.x-checkbox.x-justify-start{justify-content:flex-start}.x-checkbox.x-justify-center{justify-content:center}.x-checkbox.x-justify-end{justify-content:flex-end}.x-checkbox.x-justify-space-between{justify-content:space-between}.x-checkbox.x-justify-space-around{justify-content:space-around}.x-checkbox.x-align-start{align-items:flex-start}.x-checkbox.x-align-center{align-items:center}.x-checkbox.x-align-end{align-items:flex-end}.x-checkbox.x-direction-column{flex-direction:column}.x-checkbox.x-direction-column-reverse{flex-direction:column-reverse}.x-checkbox.x-direction-row{flex-direction:row}.x-checkbox.x-direction-row-reverse{flex-direction:row-reverse}.x-checkbox>label{display:inline-block;white-space:nowrap;height:calc(var(--x-font-size) + .875rem);line-height:calc(var(--x-font-size) + .875rem);position:relative;color:var(--x-text-300);font-weight:600}.x-checkbox>label.x-text-align-start{text-align:start}.x-checkbox>label.x-text-align-center{text-align:center}.x-checkbox>label.x-text-align-end{text-align:end}.x-checkbox-row{flex:1;display:flex;align-items:center;flex-wrap:wrap;position:relative;height:calc(var(--x-font-size) + .875rem);line-height:calc(var(--x-font-size) + .875rem)}.x-checkbox-item{position:relative;display:inline-flex;align-items:center;white-space:nowrap;outline:none;margin-right:.875rem;font-size:.875rem;cursor:pointer;transition:all .3s}.x-checkbox-item:hover{color:var(--x-primary)}.x-checkbox-item:hover .x-checkbox-box{border-color:var(--x-primary)}.x-checkbox-item:last-child{margin-right:0}.x-checkbox-item.x-indeterminate .x-checkbox-box{border-color:var(--x-primary)}.x-checkbox-item.x-indeterminate .x-checkbox-box:after{top:50%;left:50%;width:.5rem;height:.5rem;background-color:var(--x-primary);border:0;transform:translate(-50%,-50%) scale(1);opacity:1;content:\\\" \\\"}.x-checkbox-item.x-checked .x-checkbox-box{border-color:var(--x-primary);background-color:var(--x-primary)}.x-checkbox-item.x-checked .x-checkbox-box:after{border:.125rem solid var(--x-background-100);border-top:0;border-left:0;top:.3875rem;left:.1875rem;width:.3125rem;height:.625rem;transform:rotate(40deg) scale(1) translate(-50%,-50%);opacity:1;transition:all .2s;content:\\\" \\\"}.x-checkbox-item.x-disabled{color:var(--x-text-400);cursor:not-allowed}.x-checkbox-item.x-disabled .x-checkbox-box{border-color:var(--x-border-100);background-color:var(--x-border-300)}.x-checkbox-item.x-disabled .x-checkbox-box:after{border-color:var(--x-text-400);background-color:transparent}.x-checkbox-box{border:var(--x-border-width) solid var(--x-border);width:1rem;height:1rem;border-radius:.0625rem;background-color:var(--x-background-a100);position:relative;display:inline-block;box-sizing:border-box;transition:all .3s}.x-checkbox-box:hover{border-color:var(--x-primary)}.x-checkbox-box:after{position:absolute;top:.35rem;left:.175rem;display:inline-block;width:.3rem;height:.6rem;border:.125rem solid var(--x-background-a100);border-top:0;border-left:0;transform:rotate(40deg) scale(0) translate(-50%,-50%);opacity:0;transition:all .3s;content:\\\" \\\"}.x-checkbox-label{margin-left:.325rem;-webkit-user-select:none;user-select:none}.x-checkbox-label-required:before{display:inline-block;margin-right:.25rem;color:var(--x-danger);line-height:1;font-size:var(--x-font-size-small);content:\\\"*\\\"}.x-checkbox.x-disabled .x-checkbox-item{color:var(--x-text-400);cursor:not-allowed}.x-checkbox.x-disabled .x-checkbox-item.x-indeterminate .x-checkbox-box:after{background-color:var(--x-text-400)}.x-checkbox.x-disabled .x-checkbox-item.x-checked .x-checkbox-box:after{background-color:transparent}.x-checkbox.x-disabled .x-checkbox-item .x-checkbox-box{border-color:var(--x-border-100);background-color:var(--x-border-300)}.x-checkbox.x-disabled .x-checkbox-item .x-checkbox-box:after{border-color:var(--x-text-400);background-color:transparent}.x-checkbox.x-invalid>label,.x-checkbox.x-required>label{color:var(--x-danger)}.x-checkbox.x-direction-row>label{padding:0 .5rem 0 0}.x-checkbox.x-direction-row-reverse>label{padding:0 0 0 .5rem}.x-checkbox.x-direction-column,.x-checkbox.x-direction-column-reverse{align-items:inherit}\\n\"], dependencies: [{ kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i3.XButtonComponent, selector: \"x-button\" }, { kind: \"component\", type: i3.XButtonsComponent, selector: \"x-buttons\" }, { kind: \"directive\", type: i4.XOutletDirective, selector: \"[xOutlet]\", inputs: [\"xOutletContext\", \"xOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XCheckboxComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: `${XCheckboxPrefix}`, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [XValueAccessor(XCheckboxComponent)], template: \"<div\\r\\n  #checkbox\\r\\n  class=\\\"x-checkbox\\\"\\r\\n  [class.x-flex]=\\\"justify || align || direction\\\"\\r\\n  [class.x-disabled]=\\\"disabled\\\"\\r\\n  [class.x-required]=\\\"requiredIsEmpty\\\"\\r\\n  [class.x-invalid]=\\\"invalid\\\"\\r\\n>\\r\\n  <label *ngIf=\\\"label\\\" [class.x-checkbox-label-required]=\\\"required\\\" [style.width]=\\\"labelWidth\\\" [ngClass]=\\\"labelMap\\\">{{ label }}</label>\\r\\n  <ng-container *ngIf=\\\"button || icon; else default\\\">\\r\\n    <x-buttons>\\r\\n      <x-button\\r\\n        *ngFor=\\\"let item of nodes; trackBy: trackByItem\\\"\\r\\n        [icon]=\\\"item.icon\\\"\\r\\n        [title]=\\\"item.title\\\"\\r\\n        [size]=\\\"size\\\"\\r\\n        [activated]=\\\"getChecked(item.id)\\\"\\r\\n        [disabled]=\\\"getDisabled(item.disabled)\\\"\\r\\n        attrType=\\\"button\\\"\\r\\n        (click)=\\\"checkboxClick($event, item)\\\"\\r\\n        >{{ item.label }}</x-button\\r\\n      >\\r\\n    </x-buttons>\\r\\n  </ng-container>\\r\\n</div>\\r\\n\\r\\n<ng-template #default>\\r\\n  <div class=\\\"x-checkbox-row\\\">\\r\\n    <div\\r\\n      class=\\\"x-checkbox-item\\\"\\r\\n      *ngFor=\\\"let item of nodes; trackBy: trackByItem\\\"\\r\\n      [class.x-checked]=\\\"getChecked(item.id)\\\"\\r\\n      [class.x-disabled]=\\\"disabled || item.disabled\\\"\\r\\n      [class.x-indeterminate]=\\\"indeterminate\\\"\\r\\n      (click)=\\\"checkboxClick($event, item)\\\"\\r\\n    >\\r\\n      <span class=\\\"x-checkbox-box\\\"></span>\\r\\n      <span class=\\\"x-checkbox-label\\\">\\r\\n        <ng-container *xOutlet=\\\"item.label; context: { $node: item }\\\">{{ item.label }}</ng-container>\\r\\n      </span>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\", styles: [\".x-checkbox{margin:0;padding:0;width:100%}.x-checkbox.x-flex{display:flex}.x-checkbox.x-justify-start{justify-content:flex-start}.x-checkbox.x-justify-center{justify-content:center}.x-checkbox.x-justify-end{justify-content:flex-end}.x-checkbox.x-justify-space-between{justify-content:space-between}.x-checkbox.x-justify-space-around{justify-content:space-around}.x-checkbox.x-align-start{align-items:flex-start}.x-checkbox.x-align-center{align-items:center}.x-checkbox.x-align-end{align-items:flex-end}.x-checkbox.x-direction-column{flex-direction:column}.x-checkbox.x-direction-column-reverse{flex-direction:column-reverse}.x-checkbox.x-direction-row{flex-direction:row}.x-checkbox.x-direction-row-reverse{flex-direction:row-reverse}.x-checkbox>label{display:inline-block;white-space:nowrap;height:calc(var(--x-font-size) + .875rem);line-height:calc(var(--x-font-size) + .875rem);position:relative;color:var(--x-text-300);font-weight:600}.x-checkbox>label.x-text-align-start{text-align:start}.x-checkbox>label.x-text-align-center{text-align:center}.x-checkbox>label.x-text-align-end{text-align:end}.x-checkbox-row{flex:1;display:flex;align-items:center;flex-wrap:wrap;position:relative;height:calc(var(--x-font-size) + .875rem);line-height:calc(var(--x-font-size) + .875rem)}.x-checkbox-item{position:relative;display:inline-flex;align-items:center;white-space:nowrap;outline:none;margin-right:.875rem;font-size:.875rem;cursor:pointer;transition:all .3s}.x-checkbox-item:hover{color:var(--x-primary)}.x-checkbox-item:hover .x-checkbox-box{border-color:var(--x-primary)}.x-checkbox-item:last-child{margin-right:0}.x-checkbox-item.x-indeterminate .x-checkbox-box{border-color:var(--x-primary)}.x-checkbox-item.x-indeterminate .x-checkbox-box:after{top:50%;left:50%;width:.5rem;height:.5rem;background-color:var(--x-primary);border:0;transform:translate(-50%,-50%) scale(1);opacity:1;content:\\\" \\\"}.x-checkbox-item.x-checked .x-checkbox-box{border-color:var(--x-primary);background-color:var(--x-primary)}.x-checkbox-item.x-checked .x-checkbox-box:after{border:.125rem solid var(--x-background-100);border-top:0;border-left:0;top:.3875rem;left:.1875rem;width:.3125rem;height:.625rem;transform:rotate(40deg) scale(1) translate(-50%,-50%);opacity:1;transition:all .2s;content:\\\" \\\"}.x-checkbox-item.x-disabled{color:var(--x-text-400);cursor:not-allowed}.x-checkbox-item.x-disabled .x-checkbox-box{border-color:var(--x-border-100);background-color:var(--x-border-300)}.x-checkbox-item.x-disabled .x-checkbox-box:after{border-color:var(--x-text-400);background-color:transparent}.x-checkbox-box{border:var(--x-border-width) solid var(--x-border);width:1rem;height:1rem;border-radius:.0625rem;background-color:var(--x-background-a100);position:relative;display:inline-block;box-sizing:border-box;transition:all .3s}.x-checkbox-box:hover{border-color:var(--x-primary)}.x-checkbox-box:after{position:absolute;top:.35rem;left:.175rem;display:inline-block;width:.3rem;height:.6rem;border:.125rem solid var(--x-background-a100);border-top:0;border-left:0;transform:rotate(40deg) scale(0) translate(-50%,-50%);opacity:0;transition:all .3s;content:\\\" \\\"}.x-checkbox-label{margin-left:.325rem;-webkit-user-select:none;user-select:none}.x-checkbox-label-required:before{display:inline-block;margin-right:.25rem;color:var(--x-danger);line-height:1;font-size:var(--x-font-size-small);content:\\\"*\\\"}.x-checkbox.x-disabled .x-checkbox-item{color:var(--x-text-400);cursor:not-allowed}.x-checkbox.x-disabled .x-checkbox-item.x-indeterminate .x-checkbox-box:after{background-color:var(--x-text-400)}.x-checkbox.x-disabled .x-checkbox-item.x-checked .x-checkbox-box:after{background-color:transparent}.x-checkbox.x-disabled .x-checkbox-item .x-checkbox-box{border-color:var(--x-border-100);background-color:var(--x-border-300)}.x-checkbox.x-disabled .x-checkbox-item .x-checkbox-box:after{border-color:var(--x-text-400);background-color:transparent}.x-checkbox.x-invalid>label,.x-checkbox.x-required>label{color:var(--x-danger)}.x-checkbox.x-direction-row>label{padding:0 .5rem 0 0}.x-checkbox.x-direction-row-reverse>label{padding:0 0 0 .5rem}.x-checkbox.x-direction-column,.x-checkbox.x-direction-column-reverse{align-items:inherit}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.XConfigService }]; }, propDecorators: { checkbox: [{\r\n                type: ViewChild,\r\n                args: ['checkbox', { static: true }]\r\n            }] } });\n\nclass XCheckboxModule {\r\n}\r\n/** @nocollapse */ XCheckboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\n/** @nocollapse */ XCheckboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.2\", ngImport: i0, type: XCheckboxModule, declarations: [XCheckboxComponent, XCheckboxProperty], imports: [CommonModule, FormsModule, XButtonModule, XOutletModule, XBaseFormModule], exports: [XCheckboxComponent] });\r\n/** @nocollapse */ XCheckboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XCheckboxModule, imports: [CommonModule, FormsModule, XButtonModule, XOutletModule, XBaseFormModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XCheckboxModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [XCheckboxComponent, XCheckboxProperty],\r\n                    exports: [XCheckboxComponent],\r\n                    imports: [CommonModule, FormsModule, XButtonModule, XOutletModule, XBaseFormModule]\r\n                }]\r\n        }] });\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { XCheckboxComponent, XCheckboxModule, XCheckboxPrefix, XCheckboxProperty };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}