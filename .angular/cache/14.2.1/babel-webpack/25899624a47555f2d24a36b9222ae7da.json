{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport * as i1 from '@ng-nest/ui/core';\nimport { XWithConfig, XInputNumber, XIdentity, XIsEmpty, XIsChange } from '@ng-nest/ui/core';\nimport * as i4 from '@angular/forms';\nimport { UntypedFormGroup, UntypedFormControl, Validators, FormControlName, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { XFormProp, XBaseFormModule } from '@ng-nest/ui/base-form';\nimport * as i2$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4$1 from '@ng-nest/ui/layout';\nimport { XLayoutModule } from '@ng-nest/ui/layout';\nimport * as i5$1 from '@ng-nest/ui/icon';\nimport { XIconModule } from '@ng-nest/ui/icon';\nimport * as i6$1 from '@ng-nest/ui/outlet';\nimport { XOutletModule } from '@ng-nest/ui/outlet';\nimport { Subject } from 'rxjs';\nimport { takeUntil, map } from 'rxjs/operators';\nimport * as i2 from '@ng-nest/ui/i18n';\nimport { XI18nModule } from '@ng-nest/ui/i18n';\nimport * as i5 from '@ng-nest/ui/input';\nimport { XInputModule } from '@ng-nest/ui/input';\nimport * as i6 from '@ng-nest/ui/select';\nimport { XSelectModule } from '@ng-nest/ui/select';\nimport * as i7 from '@ng-nest/ui/cascade';\nimport { XCascadeModule } from '@ng-nest/ui/cascade';\nimport * as i8 from '@ng-nest/ui/checkbox';\nimport { XCheckboxModule } from '@ng-nest/ui/checkbox';\nimport * as i9 from '@ng-nest/ui/color-picker';\nimport { XColorPickerModule } from '@ng-nest/ui/color-picker';\nimport * as i10 from '@ng-nest/ui/date-picker';\nimport { XDatePickerModule } from '@ng-nest/ui/date-picker';\nimport * as i11 from '@ng-nest/ui/input-number';\nimport { XInputNumberModule } from '@ng-nest/ui/input-number';\nimport * as i12 from '@ng-nest/ui/radio';\nimport { XRadioModule } from '@ng-nest/ui/radio';\nimport * as i13 from '@ng-nest/ui/rate';\nimport { XRateModule } from '@ng-nest/ui/rate';\nimport * as i14 from '@ng-nest/ui/slider-select';\nimport { XSliderSelectModule } from '@ng-nest/ui/slider-select';\nimport * as i15 from '@ng-nest/ui/switch';\nimport { XSwitchModule } from '@ng-nest/ui/switch';\nimport * as i16 from '@ng-nest/ui/time-picker';\nimport { XTimePickerModule } from '@ng-nest/ui/time-picker';\nimport * as i17 from '@ng-nest/ui/textarea';\nimport { XTextareaModule } from '@ng-nest/ui/textarea';\nimport * as i18 from '@ng-nest/ui/find';\nimport { XFindModule } from '@ng-nest/ui/find';\nimport * as i19 from '@ng-nest/ui/auto-complete';\nimport { XAutoCompleteModule } from '@ng-nest/ui/auto-complete';\n/**\r\n * Form\r\n * @selector x-form\r\n * @decorator component\r\n */\n\nfunction XControlComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"x-input\", 3);\n    i0.ɵɵlistener(\"clearEmit\", function XControlComponent_ng_container_2_Template_x_input_clearEmit_1_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.option.clearClick && ctx_r15.option.clearClick($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", ctx_r0.option.id);\n  }\n}\n\nfunction XControlComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"x-select\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", ctx_r1.option.id);\n  }\n}\n\nfunction XControlComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"x-cascade\", 5);\n    i0.ɵɵlistener(\"nodeEmit\", function XControlComponent_ng_container_4_Template_x_cascade_nodeEmit_1_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.option.nodeClick && ctx_r17.option.nodeClick($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", ctx_r2.option.id);\n  }\n}\n\nfunction XControlComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"x-checkbox\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", ctx_r3.option.id);\n  }\n}\n\nfunction XControlComponent_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"x-color-picker\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", ctx_r4.option.id);\n  }\n}\n\nfunction XControlComponent_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"x-date-picker\", 5);\n    i0.ɵɵlistener(\"nodeEmit\", function XControlComponent_ng_container_7_Template_x_date_picker_nodeEmit_1_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.option.nodeClick && ctx_r19.option.nodeClick($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", ctx_r5.option.id);\n  }\n}\n\nfunction XControlComponent_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"x-input-number\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", ctx_r6.option.id);\n  }\n}\n\nfunction XControlComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"x-radio\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", ctx_r7.option.id);\n  }\n}\n\nfunction XControlComponent_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"x-rate\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", ctx_r8.option.id);\n  }\n}\n\nfunction XControlComponent_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"x-slider-select\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", ctx_r9.option.id);\n  }\n}\n\nfunction XControlComponent_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"x-switch\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", ctx_r10.option.id);\n  }\n}\n\nfunction XControlComponent_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"x-time-picker\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", ctx_r11.option.id);\n  }\n}\n\nfunction XControlComponent_ng_container_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"x-textarea\", 3);\n    i0.ɵɵlistener(\"clearEmit\", function XControlComponent_ng_container_14_Template_x_textarea_clearEmit_1_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.option.clearClick && ctx_r21.option.clearClick($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", ctx_r12.option.id);\n  }\n}\n\nfunction XControlComponent_ng_container_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"x-auto-complete\", 5);\n    i0.ɵɵlistener(\"nodeEmit\", function XControlComponent_ng_container_15_Template_x_auto_complete_nodeEmit_1_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.option.nodeClick && ctx_r23.option.nodeClick($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", ctx_r13.option.id);\n  }\n}\n\nfunction XControlComponent_ng_container_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"x-find\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", ctx_r14.option.id);\n  }\n}\n\nfunction XFormComponent_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    controls: a0\n  };\n};\n\nfunction XFormComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, XFormComponent_ng_container_3_ng_container_1_Template, 1, 0, \"ng-container\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n\n    const _r6 = i0.ɵɵreference(11);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r6)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c0, ctx_r1.controls));\n  }\n}\n\nfunction XFormComponent_ng_container_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    rows: a0\n  };\n};\n\nfunction XFormComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, XFormComponent_ng_container_4_ng_container_1_Template, 1, 0, \"ng-container\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n\n    const _r4 = i0.ɵɵreference(9);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r4)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c1, ctx_r2.controls));\n  }\n}\n\nfunction XFormComponent_ng_template_8_ng_container_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction XFormComponent_ng_template_8_ng_container_0_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c2 = function (a0) {\n  return {\n    row: a0\n  };\n};\n\nfunction XFormComponent_ng_template_8_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"x-row\", 11);\n    i0.ɵɵtemplate(2, XFormComponent_ng_template_8_ng_container_0_ng_container_2_Template, 1, 0, \"ng-container\", 9);\n    i0.ɵɵtemplate(3, XFormComponent_ng_template_8_ng_container_0_ng_container_3_Template, 1, 0, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const row_r14 = ctx.$implicit;\n    i0.ɵɵnextContext(2);\n\n    const _r8 = i0.ɵɵreference(13);\n\n    const _r6 = i0.ɵɵreference(11);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", row_r14.hidden);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r8)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(5, _c2, row_r14));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r6)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(7, _c0, row_r14.controls));\n  }\n}\n\nfunction XFormComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, XFormComponent_ng_template_8_ng_container_0_Template, 4, 9, \"ng-container\", 10);\n  }\n\n  if (rf & 2) {\n    const rows_r12 = ctx.rows;\n    i0.ɵɵproperty(\"ngForOf\", rows_r12);\n  }\n}\n\nfunction XFormComponent_ng_template_10_x_col_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"x-control\", 16);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const control_r19 = i0.ɵɵnextContext().$implicit;\n    const ctx_r20 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"option\", control_r19)(\"form\", ctx_r20);\n  }\n}\n\nconst _c3 = function (a0) {\n  return {\n    $option: a0\n  };\n};\n\nfunction XFormComponent_ng_template_10_x_col_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"x-col\", 14);\n    i0.ɵɵtemplate(1, XFormComponent_ng_template_10_x_col_1_ng_container_1_Template, 2, 2, \"ng-container\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const control_r19 = ctx.$implicit;\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"padding-top\", ctx_r18.space, \"rem\");\n    i0.ɵɵproperty(\"span\", !control_r19.span ? ctx_r18.span : control_r19.span)(\"hidden\", control_r19.hidden);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xOutlet\", ctx_r18.controlTpl[control_r19.id])(\"xOutletContext\", i0.ɵɵpureFunction1(6, _c3, control_r19));\n  }\n}\n\nfunction XFormComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"x-row\", 12);\n    i0.ɵɵtemplate(1, XFormComponent_ng_template_10_x_col_1_Template, 2, 8, \"x-col\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const controls_r17 = ctx.controls;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"space\", ctx_r7.space);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", controls_r17)(\"ngForTrackBy\", ctx_r7.trackByControl);\n  }\n}\n\nfunction XFormComponent_ng_template_12_x_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"x-icon\", 19);\n  }\n\n  if (rf & 2) {\n    const row_r22 = i0.ɵɵnextContext().row;\n    i0.ɵɵproperty(\"type\", row_r22.icon);\n  }\n}\n\nfunction XFormComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 17);\n    i0.ɵɵtemplate(1, XFormComponent_ng_template_12_x_icon_1_Template, 1, 1, \"x-icon\", 18);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const row_r22 = ctx.row;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", row_r22.icon);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r22.title);\n  }\n}\n\nconst _c4 = [\"*\"];\nconst XFormPrefix = 'x-form';\nconst X_CONFIG_NAME = 'form';\n/**\r\n * Form Property\r\n */\n\nclass XFormProperty extends XFormProp {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * @zh_CN 表单 FormGroup\r\n     * @en_US Form FormGroup\r\n     */\n\n    this.formGroup = new UntypedFormGroup({});\n    /**\r\n     * @zh_CN 表单控件\r\n     * @en_US Form control\r\n     */\n\n    this.controls = [];\n    /**\r\n     * @zh_CN 表单宽度\r\n     * @en_US Form width\r\n     */\n\n    this.width = '100%';\n    /**\r\n     * @zh_CN 自定义模板\r\n     * @en_US Custom template\r\n     */\n\n    this.controlTpl = {};\n    /**\r\n     * @zh_CN Submit\r\n     * @en_US Submit\r\n     */\n\n    this.xSubmit = new EventEmitter();\n  }\n\n}\n/** @nocollapse */\n\n\nXFormProperty.ɵfac = /* @__PURE__ */function () {\n  let ɵXFormProperty_BaseFactory;\n  return function XFormProperty_Factory(t) {\n    return (ɵXFormProperty_BaseFactory || (ɵXFormProperty_BaseFactory = i0.ɵɵgetInheritedFactory(XFormProperty)))(t || XFormProperty);\n  };\n}();\n/** @nocollapse */\n\n\nXFormProperty.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XFormProperty,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    formGroup: \"formGroup\",\n    title: \"title\",\n    space: \"space\",\n    span: \"span\",\n    labelSuffix: \"labelSuffix\",\n    controls: \"controls\",\n    width: \"width\",\n    controlTpl: \"controlTpl\"\n  },\n  outputs: {\n    xSubmit: \"xSubmit\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function XFormProperty_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n__decorate([XWithConfig(X_CONFIG_NAME, 1), XInputNumber()], XFormProperty.prototype, \"space\", void 0);\n\n__decorate([XInputNumber()], XFormProperty.prototype, \"span\", void 0);\n\n__decorate([XWithConfig(X_CONFIG_NAME, '')], XFormProperty.prototype, \"labelSuffix\", void 0);\n\n__decorate([XWithConfig(X_CONFIG_NAME, '100%')], XFormProperty.prototype, \"width\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XFormProperty, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], null, {\n    formGroup: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    space: [{\n      type: Input\n    }],\n    span: [{\n      type: Input\n    }],\n    labelSuffix: [{\n      type: Input\n    }],\n    controls: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    controlTpl: [{\n      type: Input\n    }],\n    xSubmit: [{\n      type: Output\n    }]\n  });\n})();\n/**\r\n * @zh_CN 控件对象\r\n * @en_US Control object\r\n */\n\n\nclass XControl extends XIdentity {\n  constructor(option = {}) {\n    super();\n    if (XIsEmpty(this.value)) this.value = '';\n    Object.assign(this, option);\n  }\n\n}\n/**\r\n * Control\r\n * @selector x-control\r\n * @decorator component\r\n */\n\n\nconst XControlPrefix = 'x-control';\n/**\r\n * Control Property\r\n */\n\nclass XControlProperty {}\n/** @nocollapse */\n\n\nXControlProperty.ɵfac = function XControlProperty_Factory(t) {\n  return new (t || XControlProperty)();\n};\n/** @nocollapse */\n\n\nXControlProperty.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XControlProperty,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    option: \"option\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function XControlProperty_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XControlProperty, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], null, {\n    option: [{\n      type: Input\n    }]\n  });\n})();\n\nclass XFormControl extends UntypedFormControl {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * @zh_CN 提示信息\r\n     * @en_US Prompt information\r\n     */\n\n    this.messages = [];\n  }\n\n}\n\nclass XInputControl extends XControl {\n  constructor(option = {}) {\n    super(option);\n  }\n\n}\n\nclass XSelectControl extends XControl {\n  constructor(option = {}) {\n    super(option);\n  }\n\n}\n\nclass XCascadeControl extends XControl {\n  constructor(option = {}) {\n    super(option);\n  }\n\n}\n\nclass XCheckboxControl extends XControl {\n  constructor(option = {}) {\n    super(option);\n  }\n\n}\n\nclass XColorPickerControl extends XControl {\n  constructor(option = {}) {\n    super(option);\n  }\n\n}\n\nclass XDatePickerControl extends XControl {\n  constructor(option = {}) {\n    super(option);\n  }\n\n}\n\nclass XInputNumberControl extends XControl {\n  constructor(option = {}) {\n    super(option);\n  }\n\n}\n\nclass XRadioControl extends XControl {\n  constructor(option = {}) {\n    super(option);\n  }\n\n}\n\nclass XRateControl extends XControl {\n  constructor(option = {}) {\n    super(option);\n  }\n\n}\n\nclass XSliderSelectControl extends XControl {\n  constructor(option = {}) {\n    super(option);\n  }\n\n}\n\nclass XSwitchControl extends XControl {\n  constructor(option = {}) {\n    super(option);\n  }\n\n}\n\nclass XTimePickerControl extends XControl {\n  constructor(option = {}) {\n    super(option);\n  }\n\n}\n\nclass XTextareaControl extends XControl {\n  constructor(option = {}) {\n    super(option);\n  }\n\n}\n\nclass XFindControl extends XControl {\n  constructor(option = {}) {\n    super(option);\n  }\n\n}\n\nclass XAutoCompleteControl extends XControl {\n  constructor(option = {}) {\n    super(option);\n  }\n\n}\n\nclass XControlComponent extends XControlProperty {\n  constructor( // @Host() @Optional() public form: XFormComponent,\n  cdr, configService, i18n) {\n    super();\n    this.cdr = cdr;\n    this.configService = configService;\n    this.i18n = i18n;\n    this.locale = {};\n    this._sharedProps = ['span', 'direction', 'justify', 'align', 'labelWidth', 'labelAlign'];\n    this._changeProps = ['label', ...this._sharedProps];\n    this._validatorFns = [];\n    this._unSubject = new Subject();\n  }\n\n  ngOnInit() {\n    this.option = { ...this.option\n    };\n    this.setProps();\n    if (XIsEmpty(this.option.label)) this.option.label = '';\n    this.option.label = `${this.option.label}${this.form.labelSuffix}`;\n    this._control = this.createControl(this.option);\n    this._formControl = new UntypedFormControl(this._control.value);\n    this.setValidators();\n\n    this._formControl.statusChanges.pipe(takeUntil(this._unSubject)).subscribe(x => {\n      this.setMessages(x);\n    });\n\n    this._control.setValidators = () => this.setValidators();\n\n    this.form.formGroup.addControl(this._control.id, this._formControl);\n\n    this.option.change = () => {\n      this._changeProps.forEach(x => {\n        if (this.control.valueAccessor && this.option[x]) {\n          this.control.valueAccessor[x] = this.option[x];\n        }\n      });\n\n      this.form.controlComponents[this._control.id].formControlChanges();\n    };\n\n    this.i18n.localeChange.pipe(map(x => x.form), takeUntil(this._unSubject)).subscribe(x => {\n      this.locale = x;\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngAfterViewInit() {\n    Object.assign(this.control.valueAccessor, this._control);\n    this.form.controlTypes[this._control.id] = this._control;\n    this.form.controlComponents[this._control.id] = this.control.valueAccessor;\n\n    this.form.controlComponents[this._control.id].formControlChanges();\n  }\n\n  ngOnDestroy() {\n    this._unSubject.next();\n\n    this._unSubject.unsubscribe();\n  }\n\n  setValidators() {\n    this._validatorFns = [];\n\n    if (this._control.disabled || this.form.disabled) {\n      this._formControl.disable();\n    } else {\n      this._formControl.enable();\n    }\n\n    if (this._control.required && !this.form.disabled) {\n      this._validatorFns = [...this._validatorFns, Validators.required];\n    }\n\n    if (this._control.pattern) {\n      this.setPattern();\n    }\n\n    this._formControl.setValidators(this._validatorFns);\n\n    this._formControl.updateValueAndValidity();\n  }\n\n  setProps() {\n    for (let prop of this._sharedProps) {\n      if (XIsEmpty(this.option[prop])) this.option[prop] = this.form[prop];\n    }\n  }\n\n  setPattern() {\n    if (Array.isArray(this._control.pattern)) {\n      for (const pt of this._control.pattern) {\n        this._validatorFns = [...this._validatorFns, Validators.pattern(pt)];\n      }\n    } else {\n      this._validatorFns = [...this._validatorFns, Validators.pattern(this._control.pattern)];\n    }\n  }\n\n  getPatternMsg(pattern) {\n    if (Array.isArray(this._control.pattern)) {\n      return this._control.message[this._control.pattern.findIndex(x => String(x) === pattern)];\n    } else {\n      return this._control.message;\n    }\n  }\n\n  setMessages(state) {\n    let control = this._formControl;\n\n    if (state === 'INVALID' && this._formControl.errors !== null) {\n      for (const key in control.errors) {\n        const label = this._control.label || this._control.id;\n\n        if (key === 'required') {\n          control.messages = [`${label} ${this.locale?.required || 'required'}`];\n        } else if (key === 'pattern') {\n          control.messages = [`${label} ${this.getPatternMsg(control.errors[key].requiredPattern)}`];\n        }\n      }\n    } else if (state === 'VALID') {\n      control.messages = [];\n    }\n  }\n\n  createControl(option) {\n    switch (option.control) {\n      case 'input':\n        return new XInputControl(option);\n\n      case 'select':\n        return new XSelectControl(option);\n\n      case 'checkbox':\n        return new XCheckboxControl(option);\n\n      case 'radio':\n        return new XRadioControl(option);\n\n      case 'switch':\n        return new XSwitchControl(option);\n\n      case 'rate':\n        return new XRateControl(option);\n\n      case 'date-picker':\n        return new XDatePickerControl(option);\n\n      case 'time-picker':\n        return new XTimePickerControl(option);\n\n      case 'input-number':\n        return new XInputNumberControl(option);\n\n      case 'slider-select':\n        return new XSliderSelectControl(option);\n\n      case 'cascade':\n        return new XCascadeControl(option);\n\n      case 'color-picker':\n        return new XColorPickerControl(option);\n\n      case 'textarea':\n        return new XTextareaControl(option);\n\n      case 'find':\n        return new XFindControl(option);\n\n      case 'auto-complete':\n        return new XAutoCompleteControl(option);\n\n      default:\n        return new XInputControl(option);\n    }\n  }\n\n}\n/** @nocollapse */\n\n\nXControlComponent.ɵfac = function XControlComponent_Factory(t) {\n  return new (t || XControlComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.XConfigService), i0.ɵɵdirectiveInject(i2.XI18nService));\n};\n/** @nocollapse */\n\n\nXControlComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XControlComponent,\n  selectors: [[\"x-control\"]],\n  viewQuery: function XControlComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(FormControlName, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.control = _t.first);\n    }\n  },\n  inputs: {\n    option: \"option\",\n    form: \"form\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 17,\n  vars: 17,\n  consts: [[1, \"x-control\", 3, \"formGroup\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [3, \"formControlName\", \"clearEmit\"], [3, \"formControlName\"], [3, \"formControlName\", \"nodeEmit\"]],\n  template: function XControlComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementContainerStart(1, 1);\n      i0.ɵɵtemplate(2, XControlComponent_ng_container_2_Template, 2, 1, \"ng-container\", 2);\n      i0.ɵɵtemplate(3, XControlComponent_ng_container_3_Template, 2, 1, \"ng-container\", 2);\n      i0.ɵɵtemplate(4, XControlComponent_ng_container_4_Template, 2, 1, \"ng-container\", 2);\n      i0.ɵɵtemplate(5, XControlComponent_ng_container_5_Template, 2, 1, \"ng-container\", 2);\n      i0.ɵɵtemplate(6, XControlComponent_ng_container_6_Template, 2, 1, \"ng-container\", 2);\n      i0.ɵɵtemplate(7, XControlComponent_ng_container_7_Template, 2, 1, \"ng-container\", 2);\n      i0.ɵɵtemplate(8, XControlComponent_ng_container_8_Template, 2, 1, \"ng-container\", 2);\n      i0.ɵɵtemplate(9, XControlComponent_ng_container_9_Template, 2, 1, \"ng-container\", 2);\n      i0.ɵɵtemplate(10, XControlComponent_ng_container_10_Template, 2, 1, \"ng-container\", 2);\n      i0.ɵɵtemplate(11, XControlComponent_ng_container_11_Template, 2, 1, \"ng-container\", 2);\n      i0.ɵɵtemplate(12, XControlComponent_ng_container_12_Template, 2, 1, \"ng-container\", 2);\n      i0.ɵɵtemplate(13, XControlComponent_ng_container_13_Template, 2, 1, \"ng-container\", 2);\n      i0.ɵɵtemplate(14, XControlComponent_ng_container_14_Template, 2, 1, \"ng-container\", 2);\n      i0.ɵɵtemplate(15, XControlComponent_ng_container_15_Template, 2, 1, \"ng-container\", 2);\n      i0.ɵɵtemplate(16, XControlComponent_ng_container_16_Template, 2, 1, \"ng-container\", 2);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form.formGroup);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitch\", ctx.option.control);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"input\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"select\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"cascade\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"checkbox\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"color-picker\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"date-picker\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"input-number\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"radio\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"rate\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"slider-select\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"switch\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"time-picker\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"textarea\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"auto-complete\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"find\");\n    }\n  },\n  dependencies: [i2$1.NgSwitch, i2$1.NgSwitchCase, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i5.XInputComponent, i6.XSelectComponent, i7.XCascadeComponent, i8.XCheckboxComponent, i9.XColorPickerComponent, i10.XDatePickerComponent, i11.XInputNumberComponent, i12.XRadioComponent, i13.XRateComponent, i14.XSliderSelectComponent, i15.XSwitchComponent, i16.XTimePickerComponent, i17.XTextareaComponent, i18.XFindComponent, i19.XAutoCompleteComponent],\n  styles: [\".x-control{margin:0;padding:0}.x-control x-input,.x-control x-select,.x-control x-date-picker,.x-control x-time-picker,.x-control x-input-number,.x-control x-slider-select,.x-control x-cascade,.x-control x-color-picker,.x-control x-textarea,.x-control x-auto-complete{width:100%}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XControlComponent, [{\n    type: Component,\n    args: [{\n      selector: 'x-control',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div class=\\\"x-control\\\" [formGroup]=\\\"form.formGroup\\\">\\r\\n  <ng-container [ngSwitch]=\\\"option.control\\\">\\r\\n    <ng-container *ngSwitchCase=\\\"'input'\\\">\\r\\n      <x-input [formControlName]=\\\"option.id\\\" (clearEmit)=\\\"option.clearClick && option.clearClick($event)\\\"></x-input>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'select'\\\">\\r\\n      <x-select [formControlName]=\\\"option.id\\\"></x-select>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'cascade'\\\">\\r\\n      <x-cascade [formControlName]=\\\"option.id\\\" (nodeEmit)=\\\"option.nodeClick && option.nodeClick($event)\\\"></x-cascade>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'checkbox'\\\">\\r\\n      <x-checkbox [formControlName]=\\\"option.id\\\"></x-checkbox>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'color-picker'\\\">\\r\\n      <x-color-picker [formControlName]=\\\"option.id\\\"></x-color-picker>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'date-picker'\\\">\\r\\n      <x-date-picker [formControlName]=\\\"option.id\\\" (nodeEmit)=\\\"option.nodeClick && option.nodeClick($event)\\\"></x-date-picker>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'input-number'\\\">\\r\\n      <x-input-number [formControlName]=\\\"option.id\\\"></x-input-number>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'radio'\\\">\\r\\n      <x-radio [formControlName]=\\\"option.id\\\"></x-radio>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'rate'\\\">\\r\\n      <x-rate [formControlName]=\\\"option.id\\\"></x-rate>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'slider-select'\\\">\\r\\n      <x-slider-select [formControlName]=\\\"option.id\\\"></x-slider-select>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'switch'\\\">\\r\\n      <x-switch [formControlName]=\\\"option.id\\\"></x-switch>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'time-picker'\\\">\\r\\n      <x-time-picker [formControlName]=\\\"option.id\\\"></x-time-picker>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'textarea'\\\">\\r\\n      <x-textarea [formControlName]=\\\"option.id\\\" (clearEmit)=\\\"option.clearClick && option.clearClick($event)\\\"></x-textarea>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'auto-complete'\\\">\\r\\n      <x-auto-complete [formControlName]=\\\"option.id\\\" (nodeEmit)=\\\"option.nodeClick && option.nodeClick($event)\\\"></x-auto-complete>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'find'\\\">\\r\\n      <x-find [formControlName]=\\\"option.id\\\"></x-find>\\r\\n    </ng-container>\\r\\n  </ng-container>\\r\\n</div>\\r\\n\",\n      styles: [\".x-control{margin:0;padding:0}.x-control x-input,.x-control x-select,.x-control x-date-picker,.x-control x-time-picker,.x-control x-input-number,.x-control x-slider-select,.x-control x-cascade,.x-control x-color-picker,.x-control x-textarea,.x-control x-auto-complete{width:100%}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.XConfigService\n    }, {\n      type: i2.XI18nService\n    }];\n  }, {\n    option: [{\n      type: Input\n    }],\n    form: [{\n      type: Input\n    }],\n    control: [{\n      type: ViewChild,\n      args: [FormControlName, {\n        static: false\n      }]\n    }]\n  });\n})();\n\nclass XFormComponent extends XFormProperty {\n  constructor(cdr, configService) {\n    super();\n    this.cdr = cdr;\n    this.configService = configService;\n    this.controlComponents = {};\n    this.controlTypes = {};\n    this.formId = Number(Math.random().toString().substring(2, 6) + Date.now()).toString(36);\n  }\n\n  ngOnChanges(changes) {\n    const {\n      disabled\n    } = changes;\n    XIsChange(disabled) && this.setDisabled();\n  }\n\n  ngOnInit() {\n    this.setControls();\n    this.setClassMap();\n  }\n\n  ngAfterViewInit() {\n    this.setDisabled();\n  }\n\n  setControls() {\n    if (this.controls && this.controls.length > 0) {\n      this.controlsType = this.controls[0].controls ? 'rows' : 'controls';\n    }\n  }\n\n  setClassMap() {\n    this.classMap[`${XFormPrefix}-${this.controlsType}`] = true;\n  }\n\n  setDisabled() {\n    if (Object.keys(this.controlComponents).length === 0) return;\n\n    if (this.disabled) {\n      for (let key in this.controlComponents) {\n        let [control, type] = [this.controlComponents[key], this.controlTypes[key]];\n        control.disabled = true;\n        control.required = false;\n        delete control.pattern;\n        type.setValidators && type.setValidators();\n        control.formControlChanges();\n      }\n    } else {\n      for (let key in this.controlComponents) {\n        let [control, type] = [this.controlComponents[key], this.controlTypes[key]];\n        control.disabled = type.disabled;\n        control.required = type.required;\n        control.pattern = type.pattern;\n        type.setValidators && type.setValidators();\n        control.formControlChanges();\n      }\n    }\n\n    this.formGroup.updateValueAndValidity();\n  }\n\n  setValidator() {\n    for (let key in this.controlComponents) {\n      let [control, type] = [this.controlComponents[key], this.controlTypes[key]];\n      control.formControlValidator();\n      type.setValidators && type.setValidators();\n      control.cdr.detectChanges();\n    }\n  }\n\n  getValidatorMessages() {\n    let result = [];\n    if (this.formGroup.valid) return result;else {\n      const eachControls = array => {\n        for (const ctr of array) {\n          const formCtr = this.formGroup.controls[ctr.id];\n\n          if (formCtr && formCtr.invalid) {\n            result = [...result, ...formCtr.messages];\n          }\n        }\n      };\n\n      if (this.controlsType === 'rows') {\n        for (const row of this.controls) {\n          eachControls(row.controls);\n        }\n      } else {\n        eachControls(this.controls);\n      }\n    }\n    return result;\n  }\n\n  onSubmit(event) {\n    this.setValidator();\n    this.xSubmit.emit(event);\n  }\n\n  trackByControl(_index, item) {\n    return item.id;\n  }\n\n}\n/** @nocollapse */\n\n\nXFormComponent.ɵfac = function XFormComponent_Factory(t) {\n  return new (t || XFormComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.XConfigService));\n};\n/** @nocollapse */\n\n\nXFormComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XFormComponent,\n  selectors: [[\"x-form\"]],\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c4,\n  decls: 14,\n  vars: 11,\n  consts: [[1, \"x-form\", 3, \"formGroup\", \"ngClass\", \"ngSubmit\"], [\"form\", \"\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [1, \"x-form-content\"], [\"content\", \"\"], [\"rowsTemp\", \"\"], [\"controlsTemp\", \"\"], [\"titleTemp\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [4, \"ngFor\", \"ngForOf\"], [3, \"hidden\"], [3, \"space\"], [3, \"padding-top\", \"span\", \"hidden\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"span\", \"hidden\"], [4, \"xOutlet\", \"xOutletContext\"], [3, \"option\", \"form\"], [1, \"x-form-title\"], [3, \"type\", 4, \"ngIf\"], [3, \"type\"]],\n  template: function XFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function XFormComponent_Template_form_ngSubmit_0_listener($event) {\n        return ctx.onSubmit($event);\n      });\n      i0.ɵɵelementContainerStart(2, 2);\n      i0.ɵɵtemplate(3, XFormComponent_ng_container_3_Template, 2, 4, \"ng-container\", 3);\n      i0.ɵɵtemplate(4, XFormComponent_ng_container_4_Template, 2, 4, \"ng-container\", 3);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementStart(5, \"div\", 4, 5);\n      i0.ɵɵprojection(7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(8, XFormComponent_ng_template_8_Template, 1, 1, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(10, XFormComponent_ng_template_10_Template, 2, 3, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(12, XFormComponent_ng_template_12_Template, 4, 2, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r3 = i0.ɵɵreference(6);\n\n      i0.ɵɵstyleProp(\"width\", ctx.width)(\"padding-bottom\", ctx.controlsType === \"controls\" ? ctx.space : 0, \"rem\");\n      i0.ɵɵclassProp(\"x-form-has-content\", _r3.innerHTML.trim());\n      i0.ɵɵproperty(\"formGroup\", ctx.formGroup)(\"ngClass\", ctx.classMap);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngSwitch\", ctx.controlsType);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"controls\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"rows\");\n    }\n  },\n  dependencies: [i2$1.NgClass, i2$1.NgForOf, i2$1.NgIf, i2$1.NgTemplateOutlet, i2$1.NgSwitch, i2$1.NgSwitchCase, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i4$1.XRowComponent, i4$1.XColComponent, i5$1.XIconComponent, i6$1.XOutletDirective, XControlComponent],\n  styles: [\".x-form{margin:0;padding:0;display:inline-block}.x-form-title{display:flex;align-items:center;font-size:var(--x-font-size-medium)}.x-form-title>x-icon{margin-right:.25rem}.x-form-rows>x-row[hidden]{display:none}.x-form-rows>x-row:not(:first-child){margin-top:1.5rem}.x-form x-col[hidden]{display:none}.x-form-has-content .x-form-content{margin-top:1.5rem}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XFormComponent, [{\n    type: Component,\n    args: [{\n      selector: `${XFormPrefix}`,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<form\\r\\n  #form\\r\\n  class=\\\"x-form\\\"\\r\\n  [class.x-form-has-content]=\\\"content.innerHTML.trim()\\\"\\r\\n  [formGroup]=\\\"formGroup\\\"\\r\\n  [style.width]=\\\"width\\\"\\r\\n  [style.padding-bottom.rem]=\\\"controlsType === 'controls' ? this.space : 0\\\"\\r\\n  [ngClass]=\\\"classMap\\\"\\r\\n  (ngSubmit)=\\\"onSubmit($event)\\\"\\r\\n>\\r\\n  <ng-container [ngSwitch]=\\\"controlsType\\\">\\r\\n    <ng-container *ngSwitchCase=\\\"'controls'\\\">\\r\\n      <ng-container *ngTemplateOutlet=\\\"controlsTemp; context: { controls: controls }\\\"> </ng-container>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'rows'\\\">\\r\\n      <ng-container *ngTemplateOutlet=\\\"rowsTemp; context: { rows: controls }\\\"></ng-container>\\r\\n    </ng-container>\\r\\n  </ng-container>\\r\\n  <div class=\\\"x-form-content\\\" #content><ng-content></ng-content></div>\\r\\n</form>\\r\\n\\r\\n<ng-template #rowsTemp let-rows=\\\"rows\\\">\\r\\n  <ng-container *ngFor=\\\"let row of rows\\\">\\r\\n    <x-row [hidden]=\\\"row.hidden\\\">\\r\\n      <ng-container *ngTemplateOutlet=\\\"titleTemp; context: { row: row }\\\"></ng-container>\\r\\n      <ng-container *ngTemplateOutlet=\\\"controlsTemp; context: { controls: row.controls }\\\"></ng-container>\\r\\n    </x-row>\\r\\n  </ng-container>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #controlsTemp let-controls=\\\"controls\\\">\\r\\n  <x-row [space]=\\\"space\\\">\\r\\n    <x-col\\r\\n      [style.padding-top.rem]=\\\"space\\\"\\r\\n      [span]=\\\"!control.span ? span : control.span\\\"\\r\\n      *ngFor=\\\"let control of controls; trackBy: trackByControl\\\"\\r\\n      [hidden]=\\\"control.hidden\\\"\\r\\n    >\\r\\n      <ng-container *xOutlet=\\\"controlTpl[control.id]; context: { $option: control }\\\">\\r\\n        <x-control [option]=\\\"control\\\" [form]=\\\"this\\\"></x-control>\\r\\n      </ng-container>\\r\\n    </x-col>\\r\\n  </x-row>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #titleTemp let-row=\\\"row\\\">\\r\\n  <label class=\\\"x-form-title\\\">\\r\\n    <x-icon *ngIf=\\\"row.icon\\\" [type]=\\\"row.icon\\\"></x-icon>\\r\\n    <span>{{ row.title }}</span>\\r\\n  </label>\\r\\n</ng-template>\\r\\n\",\n      styles: [\".x-form{margin:0;padding:0;display:inline-block}.x-form-title{display:flex;align-items:center;font-size:var(--x-font-size-medium)}.x-form-title>x-icon{margin-right:.25rem}.x-form-rows>x-row[hidden]{display:none}.x-form-rows>x-row:not(:first-child){margin-top:1.5rem}.x-form x-col[hidden]{display:none}.x-form-has-content .x-form-content{margin-top:1.5rem}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.XConfigService\n    }];\n  }, null);\n})();\n\nconst modules = [XLayoutModule, XIconModule, XInputModule, XSelectModule, XCascadeModule, XCheckboxModule, XColorPickerModule, XDatePickerModule, XInputNumberModule, XRadioModule, XRateModule, XSliderSelectModule, XSwitchModule, XTimePickerModule, XTextareaModule, XFindModule, XAutoCompleteModule, XOutletModule, XBaseFormModule, XI18nModule];\n\nclass XFormModule {}\n/** @nocollapse */\n\n\nXFormModule.ɵfac = function XFormModule_Factory(t) {\n  return new (t || XFormModule)();\n};\n/** @nocollapse */\n\n\nXFormModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: XFormModule\n});\n/** @nocollapse */\n\nXFormModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, modules]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XFormModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [XFormComponent, XControlComponent, XFormProperty, XControlProperty],\n      exports: [XFormComponent, XControlComponent],\n      imports: [CommonModule, FormsModule, ReactiveFormsModule, ...modules]\n    }]\n  }], null, null);\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { XAutoCompleteControl, XCascadeControl, XCheckboxControl, XColorPickerControl, XControl, XControlComponent, XControlPrefix, XControlProperty, XDatePickerControl, XFindControl, XFormComponent, XFormControl, XFormModule, XFormPrefix, XFormProperty, XInputControl, XInputNumberControl, XRadioControl, XRateControl, XSelectControl, XSliderSelectControl, XSwitchControl, XTextareaControl, XTimePickerControl };","map":{"version":3,"names":["i0","EventEmitter","Component","Input","Output","ViewEncapsulation","ChangeDetectionStrategy","ViewChild","NgModule","__decorate","i1","XWithConfig","XInputNumber","XIdentity","XIsEmpty","XIsChange","i4","UntypedFormGroup","UntypedFormControl","Validators","FormControlName","FormsModule","ReactiveFormsModule","XFormProp","XBaseFormModule","i2$1","CommonModule","i4$1","XLayoutModule","i5$1","XIconModule","i6$1","XOutletModule","Subject","takeUntil","map","i2","XI18nModule","i5","XInputModule","i6","XSelectModule","i7","XCascadeModule","i8","XCheckboxModule","i9","XColorPickerModule","i10","XDatePickerModule","i11","XInputNumberModule","i12","XRadioModule","i13","XRateModule","i14","XSliderSelectModule","i15","XSwitchModule","i16","XTimePickerModule","i17","XTextareaModule","i18","XFindModule","i19","XAutoCompleteModule","XFormPrefix","X_CONFIG_NAME","XFormProperty","constructor","arguments","formGroup","controls","width","controlTpl","xSubmit","ɵfac","ɵcmp","prototype","type","args","template","title","space","span","labelSuffix","XControl","option","value","Object","assign","XControlPrefix","XControlProperty","XFormControl","messages","XInputControl","XSelectControl","XCascadeControl","XCheckboxControl","XColorPickerControl","XDatePickerControl","XInputNumberControl","XRadioControl","XRateControl","XSliderSelectControl","XSwitchControl","XTimePickerControl","XTextareaControl","XFindControl","XAutoCompleteControl","XControlComponent","cdr","configService","i18n","locale","_sharedProps","_changeProps","_validatorFns","_unSubject","ngOnInit","setProps","label","form","_control","createControl","_formControl","setValidators","statusChanges","pipe","subscribe","x","setMessages","addControl","id","change","forEach","control","valueAccessor","controlComponents","formControlChanges","localeChange","markForCheck","ngAfterViewInit","controlTypes","ngOnDestroy","next","unsubscribe","disabled","disable","enable","required","pattern","setPattern","updateValueAndValidity","prop","Array","isArray","pt","getPatternMsg","message","findIndex","String","state","errors","key","requiredPattern","ChangeDetectorRef","XConfigService","XI18nService","NgSwitch","NgSwitchCase","NgControlStatus","NgControlStatusGroup","FormGroupDirective","XInputComponent","XSelectComponent","XCascadeComponent","XCheckboxComponent","XColorPickerComponent","XDatePickerComponent","XInputNumberComponent","XRadioComponent","XRateComponent","XSliderSelectComponent","XSwitchComponent","XTimePickerComponent","XTextareaComponent","XFindComponent","XAutoCompleteComponent","selector","encapsulation","None","changeDetection","OnPush","styles","static","XFormComponent","formId","Number","Math","random","toString","substring","Date","now","ngOnChanges","changes","setDisabled","setControls","setClassMap","length","controlsType","classMap","keys","setValidator","formControlValidator","detectChanges","getValidatorMessages","result","valid","eachControls","array","ctr","formCtr","invalid","row","onSubmit","event","emit","trackByControl","_index","item","NgClass","NgForOf","NgIf","NgTemplateOutlet","ɵNgNoValidate","XRowComponent","XColComponent","XIconComponent","XOutletDirective","modules","XFormModule","ɵmod","ɵinj","declarations","exports","imports"],"sources":["/Users/lzl/my-angular-app/node_modules/@ng-nest/ui/fesm2020/ng-nest-ui-form.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport * as i1 from '@ng-nest/ui/core';\nimport { XWithConfig, XInputNumber, XIdentity, XIsEmpty, XIsChange } from '@ng-nest/ui/core';\nimport * as i4 from '@angular/forms';\nimport { UntypedFormGroup, UntypedFormControl, Validators, FormControlName, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { XFormProp, XBaseFormModule } from '@ng-nest/ui/base-form';\nimport * as i2$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4$1 from '@ng-nest/ui/layout';\nimport { XLayoutModule } from '@ng-nest/ui/layout';\nimport * as i5$1 from '@ng-nest/ui/icon';\nimport { XIconModule } from '@ng-nest/ui/icon';\nimport * as i6$1 from '@ng-nest/ui/outlet';\nimport { XOutletModule } from '@ng-nest/ui/outlet';\nimport { Subject } from 'rxjs';\nimport { takeUntil, map } from 'rxjs/operators';\nimport * as i2 from '@ng-nest/ui/i18n';\nimport { XI18nModule } from '@ng-nest/ui/i18n';\nimport * as i5 from '@ng-nest/ui/input';\nimport { XInputModule } from '@ng-nest/ui/input';\nimport * as i6 from '@ng-nest/ui/select';\nimport { XSelectModule } from '@ng-nest/ui/select';\nimport * as i7 from '@ng-nest/ui/cascade';\nimport { XCascadeModule } from '@ng-nest/ui/cascade';\nimport * as i8 from '@ng-nest/ui/checkbox';\nimport { XCheckboxModule } from '@ng-nest/ui/checkbox';\nimport * as i9 from '@ng-nest/ui/color-picker';\nimport { XColorPickerModule } from '@ng-nest/ui/color-picker';\nimport * as i10 from '@ng-nest/ui/date-picker';\nimport { XDatePickerModule } from '@ng-nest/ui/date-picker';\nimport * as i11 from '@ng-nest/ui/input-number';\nimport { XInputNumberModule } from '@ng-nest/ui/input-number';\nimport * as i12 from '@ng-nest/ui/radio';\nimport { XRadioModule } from '@ng-nest/ui/radio';\nimport * as i13 from '@ng-nest/ui/rate';\nimport { XRateModule } from '@ng-nest/ui/rate';\nimport * as i14 from '@ng-nest/ui/slider-select';\nimport { XSliderSelectModule } from '@ng-nest/ui/slider-select';\nimport * as i15 from '@ng-nest/ui/switch';\nimport { XSwitchModule } from '@ng-nest/ui/switch';\nimport * as i16 from '@ng-nest/ui/time-picker';\nimport { XTimePickerModule } from '@ng-nest/ui/time-picker';\nimport * as i17 from '@ng-nest/ui/textarea';\nimport { XTextareaModule } from '@ng-nest/ui/textarea';\nimport * as i18 from '@ng-nest/ui/find';\nimport { XFindModule } from '@ng-nest/ui/find';\nimport * as i19 from '@ng-nest/ui/auto-complete';\nimport { XAutoCompleteModule } from '@ng-nest/ui/auto-complete';\n\n/**\r\n * Form\r\n * @selector x-form\r\n * @decorator component\r\n */\r\nconst XFormPrefix = 'x-form';\r\nconst X_CONFIG_NAME = 'form';\r\n/**\r\n * Form Property\r\n */\r\nclass XFormProperty extends XFormProp {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * @zh_CN 表单 FormGroup\r\n         * @en_US Form FormGroup\r\n         */\r\n        this.formGroup = new UntypedFormGroup({});\r\n        /**\r\n         * @zh_CN 表单控件\r\n         * @en_US Form control\r\n         */\r\n        this.controls = [];\r\n        /**\r\n         * @zh_CN 表单宽度\r\n         * @en_US Form width\r\n         */\r\n        this.width = '100%';\r\n        /**\r\n         * @zh_CN 自定义模板\r\n         * @en_US Custom template\r\n         */\r\n        this.controlTpl = {};\r\n        /**\r\n         * @zh_CN Submit\r\n         * @en_US Submit\r\n         */\r\n        this.xSubmit = new EventEmitter();\r\n    }\r\n}\r\n/** @nocollapse */ XFormProperty.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XFormProperty, deps: null, target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XFormProperty.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XFormProperty, selector: \"ng-component\", inputs: { formGroup: \"formGroup\", title: \"title\", space: \"space\", span: \"span\", labelSuffix: \"labelSuffix\", controls: \"controls\", width: \"width\", controlTpl: \"controlTpl\" }, outputs: { xSubmit: \"xSubmit\" }, usesInheritance: true, ngImport: i0, template: '', isInline: true });\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, 1),\r\n    XInputNumber()\r\n], XFormProperty.prototype, \"space\", void 0);\r\n__decorate([\r\n    XInputNumber()\r\n], XFormProperty.prototype, \"span\", void 0);\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, '')\r\n], XFormProperty.prototype, \"labelSuffix\", void 0);\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, '100%')\r\n], XFormProperty.prototype, \"width\", void 0);\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XFormProperty, decorators: [{\r\n            type: Component,\r\n            args: [{ template: '' }]\r\n        }], propDecorators: { formGroup: [{\r\n                type: Input\r\n            }], title: [{\r\n                type: Input\r\n            }], space: [{\r\n                type: Input\r\n            }], span: [{\r\n                type: Input\r\n            }], labelSuffix: [{\r\n                type: Input\r\n            }], controls: [{\r\n                type: Input\r\n            }], width: [{\r\n                type: Input\r\n            }], controlTpl: [{\r\n                type: Input\r\n            }], xSubmit: [{\r\n                type: Output\r\n            }] } });\r\n/**\r\n * @zh_CN 控件对象\r\n * @en_US Control object\r\n */\r\nclass XControl extends XIdentity {\r\n    constructor(option = {}) {\r\n        super();\r\n        if (XIsEmpty(this.value))\r\n            this.value = '';\r\n        Object.assign(this, option);\r\n    }\r\n}\r\n/**\r\n * Control\r\n * @selector x-control\r\n * @decorator component\r\n */\r\nconst XControlPrefix = 'x-control';\r\n/**\r\n * Control Property\r\n */\r\nclass XControlProperty {\r\n}\r\n/** @nocollapse */ XControlProperty.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XControlProperty, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XControlProperty.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XControlProperty, selector: \"ng-component\", inputs: { option: \"option\" }, ngImport: i0, template: '', isInline: true });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XControlProperty, decorators: [{\r\n            type: Component,\r\n            args: [{ template: '' }]\r\n        }], propDecorators: { option: [{\r\n                type: Input\r\n            }] } });\r\nclass XFormControl extends UntypedFormControl {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * @zh_CN 提示信息\r\n         * @en_US Prompt information\r\n         */\r\n        this.messages = [];\r\n    }\r\n}\r\nclass XInputControl extends XControl {\r\n    constructor(option = {}) {\r\n        super(option);\r\n    }\r\n}\r\nclass XSelectControl extends XControl {\r\n    constructor(option = {}) {\r\n        super(option);\r\n    }\r\n}\r\nclass XCascadeControl extends XControl {\r\n    constructor(option = {}) {\r\n        super(option);\r\n    }\r\n}\r\nclass XCheckboxControl extends XControl {\r\n    constructor(option = {}) {\r\n        super(option);\r\n    }\r\n}\r\nclass XColorPickerControl extends XControl {\r\n    constructor(option = {}) {\r\n        super(option);\r\n    }\r\n}\r\nclass XDatePickerControl extends XControl {\r\n    constructor(option = {}) {\r\n        super(option);\r\n    }\r\n}\r\nclass XInputNumberControl extends XControl {\r\n    constructor(option = {}) {\r\n        super(option);\r\n    }\r\n}\r\nclass XRadioControl extends XControl {\r\n    constructor(option = {}) {\r\n        super(option);\r\n    }\r\n}\r\nclass XRateControl extends XControl {\r\n    constructor(option = {}) {\r\n        super(option);\r\n    }\r\n}\r\nclass XSliderSelectControl extends XControl {\r\n    constructor(option = {}) {\r\n        super(option);\r\n    }\r\n}\r\nclass XSwitchControl extends XControl {\r\n    constructor(option = {}) {\r\n        super(option);\r\n    }\r\n}\r\nclass XTimePickerControl extends XControl {\r\n    constructor(option = {}) {\r\n        super(option);\r\n    }\r\n}\r\nclass XTextareaControl extends XControl {\r\n    constructor(option = {}) {\r\n        super(option);\r\n    }\r\n}\r\nclass XFindControl extends XControl {\r\n    constructor(option = {}) {\r\n        super(option);\r\n    }\r\n}\r\nclass XAutoCompleteControl extends XControl {\r\n    constructor(option = {}) {\r\n        super(option);\r\n    }\r\n}\n\nclass XControlComponent extends XControlProperty {\r\n    constructor(\r\n    // @Host() @Optional() public form: XFormComponent,\r\n    cdr, configService, i18n) {\r\n        super();\r\n        this.cdr = cdr;\r\n        this.configService = configService;\r\n        this.i18n = i18n;\r\n        this.locale = {};\r\n        this._sharedProps = ['span', 'direction', 'justify', 'align', 'labelWidth', 'labelAlign'];\r\n        this._changeProps = ['label', ...this._sharedProps];\r\n        this._validatorFns = [];\r\n        this._unSubject = new Subject();\r\n    }\r\n    ngOnInit() {\r\n        this.option = { ...this.option };\r\n        this.setProps();\r\n        if (XIsEmpty(this.option.label))\r\n            this.option.label = '';\r\n        this.option.label = `${this.option.label}${this.form.labelSuffix}`;\r\n        this._control = this.createControl(this.option);\r\n        this._formControl = new UntypedFormControl(this._control.value);\r\n        this.setValidators();\r\n        this._formControl.statusChanges.pipe(takeUntil(this._unSubject)).subscribe((x) => {\r\n            this.setMessages(x);\r\n        });\r\n        this._control.setValidators = () => this.setValidators();\r\n        this.form.formGroup.addControl(this._control.id, this._formControl);\r\n        this.option.change = () => {\r\n            this._changeProps.forEach((x) => {\r\n                if (this.control.valueAccessor && this.option[x]) {\r\n                    this.control.valueAccessor[x] = this.option[x];\r\n                }\r\n            });\r\n            this.form.controlComponents[this._control.id].formControlChanges();\r\n        };\r\n        this.i18n.localeChange\r\n            .pipe(map((x) => x.form), takeUntil(this._unSubject))\r\n            .subscribe((x) => {\r\n            this.locale = x;\r\n            this.cdr.markForCheck();\r\n        });\r\n    }\r\n    ngAfterViewInit() {\r\n        Object.assign(this.control.valueAccessor, this._control);\r\n        this.form.controlTypes[this._control.id] = this._control;\r\n        this.form.controlComponents[this._control.id] = this.control.valueAccessor;\r\n        this.form.controlComponents[this._control.id].formControlChanges();\r\n    }\r\n    ngOnDestroy() {\r\n        this._unSubject.next();\r\n        this._unSubject.unsubscribe();\r\n    }\r\n    setValidators() {\r\n        this._validatorFns = [];\r\n        if (this._control.disabled || this.form.disabled) {\r\n            this._formControl.disable();\r\n        }\r\n        else {\r\n            this._formControl.enable();\r\n        }\r\n        if (this._control.required && !this.form.disabled) {\r\n            this._validatorFns = [...this._validatorFns, Validators.required];\r\n        }\r\n        if (this._control.pattern) {\r\n            this.setPattern();\r\n        }\r\n        this._formControl.setValidators(this._validatorFns);\r\n        this._formControl.updateValueAndValidity();\r\n    }\r\n    setProps() {\r\n        for (let prop of this._sharedProps) {\r\n            if (XIsEmpty(this.option[prop]))\r\n                this.option[prop] = this.form[prop];\r\n        }\r\n    }\r\n    setPattern() {\r\n        if (Array.isArray(this._control.pattern)) {\r\n            for (const pt of this._control.pattern) {\r\n                this._validatorFns = [...this._validatorFns, Validators.pattern(pt)];\r\n            }\r\n        }\r\n        else {\r\n            this._validatorFns = [...this._validatorFns, Validators.pattern(this._control.pattern)];\r\n        }\r\n    }\r\n    getPatternMsg(pattern) {\r\n        if (Array.isArray(this._control.pattern)) {\r\n            return this._control.message[this._control.pattern.findIndex((x) => String(x) === pattern)];\r\n        }\r\n        else {\r\n            return this._control.message;\r\n        }\r\n    }\r\n    setMessages(state) {\r\n        let control = this._formControl;\r\n        if (state === 'INVALID' && this._formControl.errors !== null) {\r\n            for (const key in control.errors) {\r\n                const label = this._control.label || this._control.id;\r\n                if (key === 'required') {\r\n                    control.messages = [`${label} ${this.locale?.required || 'required'}`];\r\n                }\r\n                else if (key === 'pattern') {\r\n                    control.messages = [`${label} ${this.getPatternMsg(control.errors[key].requiredPattern)}`];\r\n                }\r\n            }\r\n        }\r\n        else if (state === 'VALID') {\r\n            control.messages = [];\r\n        }\r\n    }\r\n    createControl(option) {\r\n        switch (option.control) {\r\n            case 'input':\r\n                return new XInputControl(option);\r\n            case 'select':\r\n                return new XSelectControl(option);\r\n            case 'checkbox':\r\n                return new XCheckboxControl(option);\r\n            case 'radio':\r\n                return new XRadioControl(option);\r\n            case 'switch':\r\n                return new XSwitchControl(option);\r\n            case 'rate':\r\n                return new XRateControl(option);\r\n            case 'date-picker':\r\n                return new XDatePickerControl(option);\r\n            case 'time-picker':\r\n                return new XTimePickerControl(option);\r\n            case 'input-number':\r\n                return new XInputNumberControl(option);\r\n            case 'slider-select':\r\n                return new XSliderSelectControl(option);\r\n            case 'cascade':\r\n                return new XCascadeControl(option);\r\n            case 'color-picker':\r\n                return new XColorPickerControl(option);\r\n            case 'textarea':\r\n                return new XTextareaControl(option);\r\n            case 'find':\r\n                return new XFindControl(option);\r\n            case 'auto-complete':\r\n                return new XAutoCompleteControl(option);\r\n            default:\r\n                return new XInputControl(option);\r\n        }\r\n    }\r\n}\r\n/** @nocollapse */ XControlComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XControlComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.XConfigService }, { token: i2.XI18nService }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XControlComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XControlComponent, selector: \"x-control\", inputs: { option: \"option\", form: \"form\" }, viewQueries: [{ propertyName: \"control\", first: true, predicate: FormControlName, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"x-control\\\" [formGroup]=\\\"form.formGroup\\\">\\r\\n  <ng-container [ngSwitch]=\\\"option.control\\\">\\r\\n    <ng-container *ngSwitchCase=\\\"'input'\\\">\\r\\n      <x-input [formControlName]=\\\"option.id\\\" (clearEmit)=\\\"option.clearClick && option.clearClick($event)\\\"></x-input>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'select'\\\">\\r\\n      <x-select [formControlName]=\\\"option.id\\\"></x-select>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'cascade'\\\">\\r\\n      <x-cascade [formControlName]=\\\"option.id\\\" (nodeEmit)=\\\"option.nodeClick && option.nodeClick($event)\\\"></x-cascade>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'checkbox'\\\">\\r\\n      <x-checkbox [formControlName]=\\\"option.id\\\"></x-checkbox>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'color-picker'\\\">\\r\\n      <x-color-picker [formControlName]=\\\"option.id\\\"></x-color-picker>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'date-picker'\\\">\\r\\n      <x-date-picker [formControlName]=\\\"option.id\\\" (nodeEmit)=\\\"option.nodeClick && option.nodeClick($event)\\\"></x-date-picker>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'input-number'\\\">\\r\\n      <x-input-number [formControlName]=\\\"option.id\\\"></x-input-number>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'radio'\\\">\\r\\n      <x-radio [formControlName]=\\\"option.id\\\"></x-radio>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'rate'\\\">\\r\\n      <x-rate [formControlName]=\\\"option.id\\\"></x-rate>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'slider-select'\\\">\\r\\n      <x-slider-select [formControlName]=\\\"option.id\\\"></x-slider-select>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'switch'\\\">\\r\\n      <x-switch [formControlName]=\\\"option.id\\\"></x-switch>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'time-picker'\\\">\\r\\n      <x-time-picker [formControlName]=\\\"option.id\\\"></x-time-picker>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'textarea'\\\">\\r\\n      <x-textarea [formControlName]=\\\"option.id\\\" (clearEmit)=\\\"option.clearClick && option.clearClick($event)\\\"></x-textarea>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'auto-complete'\\\">\\r\\n      <x-auto-complete [formControlName]=\\\"option.id\\\" (nodeEmit)=\\\"option.nodeClick && option.nodeClick($event)\\\"></x-auto-complete>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'find'\\\">\\r\\n      <x-find [formControlName]=\\\"option.id\\\"></x-find>\\r\\n    </ng-container>\\r\\n  </ng-container>\\r\\n</div>\\r\\n\", styles: [\".x-control{margin:0;padding:0}.x-control x-input,.x-control x-select,.x-control x-date-picker,.x-control x-time-picker,.x-control x-input-number,.x-control x-slider-select,.x-control x-cascade,.x-control x-color-picker,.x-control x-textarea,.x-control x-auto-complete{width:100%}\\n\"], dependencies: [{ kind: \"directive\", type: i2$1.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i2$1.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"directive\", type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i4.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i4.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i4.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"component\", type: i5.XInputComponent, selector: \"x-input\" }, { kind: \"component\", type: i6.XSelectComponent, selector: \"x-select\" }, { kind: \"component\", type: i7.XCascadeComponent, selector: \"x-cascade\" }, { kind: \"component\", type: i8.XCheckboxComponent, selector: \"x-checkbox\" }, { kind: \"component\", type: i9.XColorPickerComponent, selector: \"x-color-picker\" }, { kind: \"component\", type: i10.XDatePickerComponent, selector: \"x-date-picker\" }, { kind: \"component\", type: i11.XInputNumberComponent, selector: \"x-input-number\" }, { kind: \"component\", type: i12.XRadioComponent, selector: \"x-radio\" }, { kind: \"component\", type: i13.XRateComponent, selector: \"x-rate\" }, { kind: \"component\", type: i14.XSliderSelectComponent, selector: \"x-slider-select\" }, { kind: \"component\", type: i15.XSwitchComponent, selector: \"x-switch\" }, { kind: \"component\", type: i16.XTimePickerComponent, selector: \"x-time-picker\" }, { kind: \"component\", type: i17.XTextareaComponent, selector: \"x-textarea\" }, { kind: \"component\", type: i18.XFindComponent, selector: \"x-find\" }, { kind: \"component\", type: i19.XAutoCompleteComponent, selector: \"x-auto-complete\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XControlComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'x-control', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"x-control\\\" [formGroup]=\\\"form.formGroup\\\">\\r\\n  <ng-container [ngSwitch]=\\\"option.control\\\">\\r\\n    <ng-container *ngSwitchCase=\\\"'input'\\\">\\r\\n      <x-input [formControlName]=\\\"option.id\\\" (clearEmit)=\\\"option.clearClick && option.clearClick($event)\\\"></x-input>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'select'\\\">\\r\\n      <x-select [formControlName]=\\\"option.id\\\"></x-select>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'cascade'\\\">\\r\\n      <x-cascade [formControlName]=\\\"option.id\\\" (nodeEmit)=\\\"option.nodeClick && option.nodeClick($event)\\\"></x-cascade>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'checkbox'\\\">\\r\\n      <x-checkbox [formControlName]=\\\"option.id\\\"></x-checkbox>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'color-picker'\\\">\\r\\n      <x-color-picker [formControlName]=\\\"option.id\\\"></x-color-picker>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'date-picker'\\\">\\r\\n      <x-date-picker [formControlName]=\\\"option.id\\\" (nodeEmit)=\\\"option.nodeClick && option.nodeClick($event)\\\"></x-date-picker>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'input-number'\\\">\\r\\n      <x-input-number [formControlName]=\\\"option.id\\\"></x-input-number>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'radio'\\\">\\r\\n      <x-radio [formControlName]=\\\"option.id\\\"></x-radio>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'rate'\\\">\\r\\n      <x-rate [formControlName]=\\\"option.id\\\"></x-rate>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'slider-select'\\\">\\r\\n      <x-slider-select [formControlName]=\\\"option.id\\\"></x-slider-select>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'switch'\\\">\\r\\n      <x-switch [formControlName]=\\\"option.id\\\"></x-switch>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'time-picker'\\\">\\r\\n      <x-time-picker [formControlName]=\\\"option.id\\\"></x-time-picker>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'textarea'\\\">\\r\\n      <x-textarea [formControlName]=\\\"option.id\\\" (clearEmit)=\\\"option.clearClick && option.clearClick($event)\\\"></x-textarea>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'auto-complete'\\\">\\r\\n      <x-auto-complete [formControlName]=\\\"option.id\\\" (nodeEmit)=\\\"option.nodeClick && option.nodeClick($event)\\\"></x-auto-complete>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'find'\\\">\\r\\n      <x-find [formControlName]=\\\"option.id\\\"></x-find>\\r\\n    </ng-container>\\r\\n  </ng-container>\\r\\n</div>\\r\\n\", styles: [\".x-control{margin:0;padding:0}.x-control x-input,.x-control x-select,.x-control x-date-picker,.x-control x-time-picker,.x-control x-input-number,.x-control x-slider-select,.x-control x-cascade,.x-control x-color-picker,.x-control x-textarea,.x-control x-auto-complete{width:100%}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.XConfigService }, { type: i2.XI18nService }]; }, propDecorators: { option: [{\r\n                type: Input\r\n            }], form: [{\r\n                type: Input\r\n            }], control: [{\r\n                type: ViewChild,\r\n                args: [FormControlName, { static: false }]\r\n            }] } });\n\nclass XFormComponent extends XFormProperty {\r\n    constructor(cdr, configService) {\r\n        super();\r\n        this.cdr = cdr;\r\n        this.configService = configService;\r\n        this.controlComponents = {};\r\n        this.controlTypes = {};\r\n        this.formId = Number(Math.random().toString().substring(2, 6) + Date.now()).toString(36);\r\n    }\r\n    ngOnChanges(changes) {\r\n        const { disabled } = changes;\r\n        XIsChange(disabled) && this.setDisabled();\r\n    }\r\n    ngOnInit() {\r\n        this.setControls();\r\n        this.setClassMap();\r\n    }\r\n    ngAfterViewInit() {\r\n        this.setDisabled();\r\n    }\r\n    setControls() {\r\n        if (this.controls && this.controls.length > 0) {\r\n            this.controlsType = this.controls[0].controls ? 'rows' : 'controls';\r\n        }\r\n    }\r\n    setClassMap() {\r\n        this.classMap[`${XFormPrefix}-${this.controlsType}`] = true;\r\n    }\r\n    setDisabled() {\r\n        if (Object.keys(this.controlComponents).length === 0)\r\n            return;\r\n        if (this.disabled) {\r\n            for (let key in this.controlComponents) {\r\n                let [control, type] = [this.controlComponents[key], this.controlTypes[key]];\r\n                control.disabled = true;\r\n                control.required = false;\r\n                delete control.pattern;\r\n                type.setValidators && type.setValidators();\r\n                control.formControlChanges();\r\n            }\r\n        }\r\n        else {\r\n            for (let key in this.controlComponents) {\r\n                let [control, type] = [this.controlComponents[key], this.controlTypes[key]];\r\n                control.disabled = type.disabled;\r\n                control.required = type.required;\r\n                control.pattern = type.pattern;\r\n                type.setValidators && type.setValidators();\r\n                control.formControlChanges();\r\n            }\r\n        }\r\n        this.formGroup.updateValueAndValidity();\r\n    }\r\n    setValidator() {\r\n        for (let key in this.controlComponents) {\r\n            let [control, type] = [this.controlComponents[key], this.controlTypes[key]];\r\n            control.formControlValidator();\r\n            type.setValidators && type.setValidators();\r\n            control.cdr.detectChanges();\r\n        }\r\n    }\r\n    getValidatorMessages() {\r\n        let result = [];\r\n        if (this.formGroup.valid)\r\n            return result;\r\n        else {\r\n            const eachControls = (array) => {\r\n                for (const ctr of array) {\r\n                    const formCtr = this.formGroup.controls[ctr.id];\r\n                    if (formCtr && formCtr.invalid) {\r\n                        result = [...result, ...formCtr.messages];\r\n                    }\r\n                }\r\n            };\r\n            if (this.controlsType === 'rows') {\r\n                for (const row of this.controls) {\r\n                    eachControls(row.controls);\r\n                }\r\n            }\r\n            else {\r\n                eachControls(this.controls);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    onSubmit(event) {\r\n        this.setValidator();\r\n        this.xSubmit.emit(event);\r\n    }\r\n    trackByControl(_index, item) {\r\n        return item.id;\r\n    }\r\n}\r\n/** @nocollapse */ XFormComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XFormComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.XConfigService }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XFormComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XFormComponent, selector: \"x-form\", usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<form\\r\\n  #form\\r\\n  class=\\\"x-form\\\"\\r\\n  [class.x-form-has-content]=\\\"content.innerHTML.trim()\\\"\\r\\n  [formGroup]=\\\"formGroup\\\"\\r\\n  [style.width]=\\\"width\\\"\\r\\n  [style.padding-bottom.rem]=\\\"controlsType === 'controls' ? this.space : 0\\\"\\r\\n  [ngClass]=\\\"classMap\\\"\\r\\n  (ngSubmit)=\\\"onSubmit($event)\\\"\\r\\n>\\r\\n  <ng-container [ngSwitch]=\\\"controlsType\\\">\\r\\n    <ng-container *ngSwitchCase=\\\"'controls'\\\">\\r\\n      <ng-container *ngTemplateOutlet=\\\"controlsTemp; context: { controls: controls }\\\"> </ng-container>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'rows'\\\">\\r\\n      <ng-container *ngTemplateOutlet=\\\"rowsTemp; context: { rows: controls }\\\"></ng-container>\\r\\n    </ng-container>\\r\\n  </ng-container>\\r\\n  <div class=\\\"x-form-content\\\" #content><ng-content></ng-content></div>\\r\\n</form>\\r\\n\\r\\n<ng-template #rowsTemp let-rows=\\\"rows\\\">\\r\\n  <ng-container *ngFor=\\\"let row of rows\\\">\\r\\n    <x-row [hidden]=\\\"row.hidden\\\">\\r\\n      <ng-container *ngTemplateOutlet=\\\"titleTemp; context: { row: row }\\\"></ng-container>\\r\\n      <ng-container *ngTemplateOutlet=\\\"controlsTemp; context: { controls: row.controls }\\\"></ng-container>\\r\\n    </x-row>\\r\\n  </ng-container>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #controlsTemp let-controls=\\\"controls\\\">\\r\\n  <x-row [space]=\\\"space\\\">\\r\\n    <x-col\\r\\n      [style.padding-top.rem]=\\\"space\\\"\\r\\n      [span]=\\\"!control.span ? span : control.span\\\"\\r\\n      *ngFor=\\\"let control of controls; trackBy: trackByControl\\\"\\r\\n      [hidden]=\\\"control.hidden\\\"\\r\\n    >\\r\\n      <ng-container *xOutlet=\\\"controlTpl[control.id]; context: { $option: control }\\\">\\r\\n        <x-control [option]=\\\"control\\\" [form]=\\\"this\\\"></x-control>\\r\\n      </ng-container>\\r\\n    </x-col>\\r\\n  </x-row>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #titleTemp let-row=\\\"row\\\">\\r\\n  <label class=\\\"x-form-title\\\">\\r\\n    <x-icon *ngIf=\\\"row.icon\\\" [type]=\\\"row.icon\\\"></x-icon>\\r\\n    <span>{{ row.title }}</span>\\r\\n  </label>\\r\\n</ng-template>\\r\\n\", styles: [\".x-form{margin:0;padding:0;display:inline-block}.x-form-title{display:flex;align-items:center;font-size:var(--x-font-size-medium)}.x-form-title>x-icon{margin-right:.25rem}.x-form-rows>x-row[hidden]{display:none}.x-form-rows>x-row:not(:first-child){margin-top:1.5rem}.x-form x-col[hidden]{display:none}.x-form-has-content .x-form-content{margin-top:1.5rem}\\n\"], dependencies: [{ kind: \"directive\", type: i2$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i2$1.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i2$1.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"directive\", type: i4.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i4.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i4.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"component\", type: i4$1.XRowComponent, selector: \"x-row\" }, { kind: \"component\", type: i4$1.XColComponent, selector: \"x-col\" }, { kind: \"component\", type: i5$1.XIconComponent, selector: \"x-icon\" }, { kind: \"directive\", type: i6$1.XOutletDirective, selector: \"[xOutlet]\", inputs: [\"xOutletContext\", \"xOutlet\"] }, { kind: \"component\", type: XControlComponent, selector: \"x-control\", inputs: [\"option\", \"form\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XFormComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: `${XFormPrefix}`, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<form\\r\\n  #form\\r\\n  class=\\\"x-form\\\"\\r\\n  [class.x-form-has-content]=\\\"content.innerHTML.trim()\\\"\\r\\n  [formGroup]=\\\"formGroup\\\"\\r\\n  [style.width]=\\\"width\\\"\\r\\n  [style.padding-bottom.rem]=\\\"controlsType === 'controls' ? this.space : 0\\\"\\r\\n  [ngClass]=\\\"classMap\\\"\\r\\n  (ngSubmit)=\\\"onSubmit($event)\\\"\\r\\n>\\r\\n  <ng-container [ngSwitch]=\\\"controlsType\\\">\\r\\n    <ng-container *ngSwitchCase=\\\"'controls'\\\">\\r\\n      <ng-container *ngTemplateOutlet=\\\"controlsTemp; context: { controls: controls }\\\"> </ng-container>\\r\\n    </ng-container>\\r\\n    <ng-container *ngSwitchCase=\\\"'rows'\\\">\\r\\n      <ng-container *ngTemplateOutlet=\\\"rowsTemp; context: { rows: controls }\\\"></ng-container>\\r\\n    </ng-container>\\r\\n  </ng-container>\\r\\n  <div class=\\\"x-form-content\\\" #content><ng-content></ng-content></div>\\r\\n</form>\\r\\n\\r\\n<ng-template #rowsTemp let-rows=\\\"rows\\\">\\r\\n  <ng-container *ngFor=\\\"let row of rows\\\">\\r\\n    <x-row [hidden]=\\\"row.hidden\\\">\\r\\n      <ng-container *ngTemplateOutlet=\\\"titleTemp; context: { row: row }\\\"></ng-container>\\r\\n      <ng-container *ngTemplateOutlet=\\\"controlsTemp; context: { controls: row.controls }\\\"></ng-container>\\r\\n    </x-row>\\r\\n  </ng-container>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #controlsTemp let-controls=\\\"controls\\\">\\r\\n  <x-row [space]=\\\"space\\\">\\r\\n    <x-col\\r\\n      [style.padding-top.rem]=\\\"space\\\"\\r\\n      [span]=\\\"!control.span ? span : control.span\\\"\\r\\n      *ngFor=\\\"let control of controls; trackBy: trackByControl\\\"\\r\\n      [hidden]=\\\"control.hidden\\\"\\r\\n    >\\r\\n      <ng-container *xOutlet=\\\"controlTpl[control.id]; context: { $option: control }\\\">\\r\\n        <x-control [option]=\\\"control\\\" [form]=\\\"this\\\"></x-control>\\r\\n      </ng-container>\\r\\n    </x-col>\\r\\n  </x-row>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #titleTemp let-row=\\\"row\\\">\\r\\n  <label class=\\\"x-form-title\\\">\\r\\n    <x-icon *ngIf=\\\"row.icon\\\" [type]=\\\"row.icon\\\"></x-icon>\\r\\n    <span>{{ row.title }}</span>\\r\\n  </label>\\r\\n</ng-template>\\r\\n\", styles: [\".x-form{margin:0;padding:0;display:inline-block}.x-form-title{display:flex;align-items:center;font-size:var(--x-font-size-medium)}.x-form-title>x-icon{margin-right:.25rem}.x-form-rows>x-row[hidden]{display:none}.x-form-rows>x-row:not(:first-child){margin-top:1.5rem}.x-form x-col[hidden]{display:none}.x-form-has-content .x-form-content{margin-top:1.5rem}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.XConfigService }]; } });\n\nconst modules = [\r\n    XLayoutModule,\r\n    XIconModule,\r\n    XInputModule,\r\n    XSelectModule,\r\n    XCascadeModule,\r\n    XCheckboxModule,\r\n    XColorPickerModule,\r\n    XDatePickerModule,\r\n    XInputNumberModule,\r\n    XRadioModule,\r\n    XRateModule,\r\n    XSliderSelectModule,\r\n    XSwitchModule,\r\n    XTimePickerModule,\r\n    XTextareaModule,\r\n    XFindModule,\r\n    XAutoCompleteModule,\r\n    XOutletModule,\r\n    XBaseFormModule,\r\n    XI18nModule\r\n];\r\nclass XFormModule {\r\n}\r\n/** @nocollapse */ XFormModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XFormModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\n/** @nocollapse */ XFormModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.2\", ngImport: i0, type: XFormModule, declarations: [XFormComponent, XControlComponent, XFormProperty, XControlProperty], imports: [CommonModule, FormsModule, ReactiveFormsModule, XLayoutModule,\r\n        XIconModule,\r\n        XInputModule,\r\n        XSelectModule,\r\n        XCascadeModule,\r\n        XCheckboxModule,\r\n        XColorPickerModule,\r\n        XDatePickerModule,\r\n        XInputNumberModule,\r\n        XRadioModule,\r\n        XRateModule,\r\n        XSliderSelectModule,\r\n        XSwitchModule,\r\n        XTimePickerModule,\r\n        XTextareaModule,\r\n        XFindModule,\r\n        XAutoCompleteModule,\r\n        XOutletModule,\r\n        XBaseFormModule,\r\n        XI18nModule], exports: [XFormComponent, XControlComponent] });\r\n/** @nocollapse */ XFormModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XFormModule, imports: [CommonModule, FormsModule, ReactiveFormsModule, modules] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XFormModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [XFormComponent, XControlComponent, XFormProperty, XControlProperty],\r\n                    exports: [XFormComponent, XControlComponent],\r\n                    imports: [CommonModule, FormsModule, ReactiveFormsModule, ...modules]\r\n                }]\r\n        }] });\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { XAutoCompleteControl, XCascadeControl, XCheckboxControl, XColorPickerControl, XControl, XControlComponent, XControlPrefix, XControlProperty, XDatePickerControl, XFindControl, XFormComponent, XFormControl, XFormModule, XFormPrefix, XFormProperty, XInputControl, XInputNumberControl, XRadioControl, XRateControl, XSelectControl, XSliderSelectControl, XSwitchControl, XTextareaControl, XTimePickerControl };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}