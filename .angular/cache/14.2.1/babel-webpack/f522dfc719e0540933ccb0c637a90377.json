{"ast":null,"code":"import { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, Inject, HostBinding, HostListener, NgModule } from '@angular/core';\nimport { XProperty, XInputBoolean, XInputNumber, XIsChange, XIsString, XIsArray } from '@ng-nest/ui/core';\nimport { fromEvent, takeUntil } from 'rxjs';\nimport { __decorate } from 'tslib';\n/**\r\n * Resizable 指令名称\r\n * @selector x-resizable\r\n * @decorator Directive\r\n */\n\nconst XResizablePrefix = 'x-resizable'; // const X_CONFIG_NAME = 'resizable';\n\n/**\r\n * Resizable Property\r\n */\n\nclass XResizableProperty extends XProperty {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * @zh_CN 启用调整尺寸大小\r\n     * @en_US Enable adjustment size size\r\n     */\n\n    this.xResizable = true;\n    /**\r\n     * @zh_CN 调整方位\r\n     * @en_US Adjust the orientation\r\n     */\n\n    this.position = 'all';\n    /**\r\n     * @zh_CN 手动调整，通过回调的数值自行调整\r\n     * @en_US Manual adjustment, adjustment of the number of callbacks\r\n     */\n\n    this.ghost = false;\n    /**\r\n     * @zh_CN 偏移屏幕左边\r\n     * @en_US Distance on the left side\r\n     */\n\n    this.offsetLeft = 0;\n    /**\r\n     * @zh_CN 偏移屏幕顶部\r\n     * @en_US Distance to the top of the screen\r\n     */\n\n    this.offsetTop = 0;\n    /**\r\n     * @zh_CN 开始调整\r\n     * @en_US Adjust the orientation\r\n     */\n\n    this.resizeBegin = new EventEmitter();\n    /**\r\n     * @zh_CN 调整中\r\n     * @en_US Adjust the orientation\r\n     */\n\n    this.resizing = new EventEmitter();\n    /**\r\n     * @zh_CN 调整结束\r\n     * @en_US Adjust the orientation\r\n     */\n\n    this.resizeEnd = new EventEmitter();\n  }\n\n}\n/** @nocollapse */\n\n\nXResizableProperty.ɵfac = /* @__PURE__ */function () {\n  let ɵXResizableProperty_BaseFactory;\n  return function XResizableProperty_Factory(t) {\n    return (ɵXResizableProperty_BaseFactory || (ɵXResizableProperty_BaseFactory = i0.ɵɵgetInheritedFactory(XResizableProperty)))(t || XResizableProperty);\n  };\n}();\n/** @nocollapse */\n\n\nXResizableProperty.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: XResizableProperty,\n  selectors: [[\"\", \"xResizable\", \"\"]],\n  inputs: {\n    xResizable: \"xResizable\",\n    position: \"position\",\n    ghost: \"ghost\",\n    offsetLeft: \"offsetLeft\",\n    offsetTop: \"offsetTop\"\n  },\n  outputs: {\n    resizeBegin: \"resizeBegin\",\n    resizing: \"resizing\",\n    resizeEnd: \"resizeEnd\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n__decorate([XInputBoolean()], XResizableProperty.prototype, \"xResizable\", void 0);\n\n__decorate([XInputBoolean()], XResizableProperty.prototype, \"ghost\", void 0);\n\n__decorate([XInputNumber()], XResizableProperty.prototype, \"offsetLeft\", void 0);\n\n__decorate([XInputNumber()], XResizableProperty.prototype, \"offsetTop\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XResizableProperty, [{\n    type: Directive,\n    args: [{\n      selector: '[xResizable]'\n    }]\n  }], null, {\n    xResizable: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    ghost: [{\n      type: Input\n    }],\n    offsetLeft: [{\n      type: Input\n    }],\n    offsetTop: [{\n      type: Input\n    }],\n    resizeBegin: [{\n      type: Output\n    }],\n    resizing: [{\n      type: Output\n    }],\n    resizeEnd: [{\n      type: Output\n    }]\n  });\n})();\n\nclass XResizableDirective extends XResizableProperty {\n  constructor(renderer, elementRef, doc) {\n    super();\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.cornerPositions = ['top-start', 'top-end', 'bottom-start', 'bottom-end'];\n    this.allPositions = ['left', 'right', 'top', 'bottom', ...this.cornerPositions];\n    this.positions = [];\n    this.newBox = {\n      clientWidth: 0,\n      clientHeight: 0,\n      offsetLeft: 0,\n      offsetTop: 0\n    };\n    this.positionNodes = {};\n    this.activatingNodes = [];\n    this.firstLoaded = true;\n    this.document = doc;\n    this.ele = this.elementRef.nativeElement;\n  }\n\n  get getDisabled() {\n    return !this.xResizable;\n  }\n\n  ngOnInit() {\n    this.setMapClass();\n  }\n\n  ngAfterViewInit() {\n    this.setPosition();\n  }\n\n  ngOnDestroy() {\n    this.destroySubscription();\n  }\n\n  ngOnChanges(changes) {\n    const {\n      xResizable\n    } = changes;\n    XIsChange(xResizable) && this.setPosition();\n  }\n\n  mousedown(event) {\n    if (!this.xResizable) return;\n    const classList = event.target.classList;\n    let direction = null;\n\n    for (let pos of this.allPositions) {\n      if (classList.contains(`x-resizable-${pos}`)) {\n        direction = pos;\n        break;\n      }\n    }\n\n    if (!direction) return;\n    const evt = event.type.startsWith('touch') ? event.targetTouches[0] : event;\n    const {\n      clientWidth,\n      clientHeight,\n      offsetLeft,\n      offsetTop\n    } = this.ele;\n    const {\n      screenX,\n      screenY\n    } = evt;\n    const isTouchEvent = event.type.startsWith('touch');\n    const moveEvent = isTouchEvent ? 'touchmove' : 'mousemove';\n    const upEvent = isTouchEvent ? 'touchend' : 'mouseup';\n    this.setActivatingNodes(direction);\n    this.initResize(event, direction);\n    const mouseup = fromEvent(this.document, upEvent);\n    this.mouseUpSub = mouseup.subscribe(ev => {\n      this.mouseup(ev);\n    });\n    const mouseMoveSub = fromEvent(document, moveEvent).pipe(takeUntil(mouseup)).subscribe(ev => this.move(ev, clientWidth, clientHeight, offsetTop, offsetLeft, screenX, screenY));\n    this.mouseUpSub.add(mouseMoveSub);\n  }\n\n  setMapClass() {\n    this.renderer.addClass(this.ele, XResizablePrefix);\n  }\n\n  setPosition() {\n    if (!this.xResizable && !this.firstLoaded) return;\n    let positions = [];\n\n    if (XIsString(this.position)) {\n      positions.push(this.position);\n    } else if (XIsArray(this.position)) {\n      positions = this.position;\n    }\n\n    if (positions.includes('all')) {\n      this.positions = this.allPositions;\n    } else {\n      this.positions = positions;\n    }\n\n    this.createNode(...this.positions);\n    const computedStyle = window.getComputedStyle(this.ele);\n    setTimeout(() => {\n      this.minWidth = parseFloat(computedStyle.minWidth);\n      this.maxWidth = parseFloat(computedStyle.maxWidth);\n      this.minHeight = parseFloat(computedStyle.minHeight);\n      this.maxHeight = parseFloat(computedStyle.maxHeight);\n      this.firstLoaded = false;\n    });\n  }\n\n  setActivatingNodes(direction) {\n    if (!this.positions.includes(direction)) return;\n\n    const addActivatingNode = (...direction) => {\n      for (let item of direction) {\n        const nd = this.positionNodes[item];\n        const isNd = this.activatingNodes.includes(nd);\n        if (!nd || isNd) continue;\n        this.renderer.addClass(nd, 'x-resizable-activating');\n        this.activatingNodes.push(nd);\n      }\n    };\n\n    if (this.cornerPositions.includes(direction)) {\n      switch (direction) {\n        case 'bottom-end':\n          addActivatingNode('bottom', 'right');\n          break;\n\n        case 'top-end':\n          addActivatingNode('top', 'right');\n          break;\n\n        case 'bottom-start':\n          addActivatingNode('bottom', 'left');\n          break;\n\n        case 'top-start':\n          addActivatingNode('top', 'left');\n          break;\n      }\n    }\n\n    addActivatingNode(direction);\n  }\n\n  createNode(...classes) {\n    for (let cla of classes) {\n      const pos = this.renderer.createElement('div');\n      this.renderer.addClass(pos, `x-resizable-${cla}`);\n      this.renderer.appendChild(this.ele, pos);\n      this.positionNodes[cla] = pos;\n    }\n  }\n\n  initResize(event, direction) {\n    this.direction = direction;\n    this.renderer.addClass(this.ele, `x-resizable-resizing`);\n    let {\n      clientWidth,\n      clientHeight,\n      offsetLeft,\n      offsetTop\n    } = this.ele;\n    this.newBox = {\n      clientWidth,\n      clientHeight,\n      offsetLeft,\n      offsetTop\n    };\n    event.stopPropagation();\n    this.resizeBegin.emit();\n  }\n\n  mouseup(event) {\n    this.endResize(event);\n    this.destroySubscription();\n  }\n\n  endResize(event) {\n    const evt = event.type.startsWith('touch') ? event.targetTouches[0] : event;\n    this.direction = null;\n    this.renderer.removeClass(this.ele, `x-resizable-resizing`);\n\n    for (const node of this.activatingNodes) {\n      this.renderer.removeClass(node, 'x-resizable-activating');\n    }\n\n    this.activatingNodes = [];\n    this.resizeEnd.emit({\n      event: evt,\n      ...this.newBox\n    });\n  }\n\n  move(event, width, height, top, left, screenX, screenY) {\n    const evt = event.type.startsWith('touch') ? event.targetTouches[0] : event;\n    const movementX = evt.screenX - screenX;\n    const movementY = evt.screenY - screenY;\n    this.newBox = {\n      clientWidth: width - (['bottom-start', 'left', 'top-start'].includes(this.direction) ? movementX : -movementX),\n      clientHeight: height - (['top-start', 'top', 'top-end'].includes(this.direction) ? movementY : -movementY),\n      offsetLeft: left + movementX,\n      offsetTop: top + movementY\n    };\n    const box = { ...this.newBox,\n      offsetLeft: this.newBox.offsetLeft - Number(this.offsetLeft),\n      offsetTop: this.newBox.offsetTop - Number(this.offsetTop)\n    };\n    this.resizeBox(box);\n    this.resizing.emit({ ...this.newBox,\n      event: evt,\n      direction: this.direction\n    });\n  }\n\n  resizeBox(box) {\n    if (this.ghost) return;\n    const overMinWidth = !this.minWidth || box.clientWidth >= this.minWidth;\n    const underMaxWidth = !this.maxWidth || box.clientWidth <= this.maxWidth;\n    const overMinHeight = !this.minHeight || box.clientHeight >= this.minHeight;\n    const underMaxHeight = !this.maxHeight || box.clientHeight <= this.maxHeight;\n\n    switch (this.direction) {\n      case 'right':\n        if (overMinWidth && underMaxWidth) {\n          this.renderer.setStyle(this.ele, 'width', `${box.clientWidth}px`);\n        }\n\n        break;\n\n      case 'top-end':\n        if (overMinWidth && underMaxWidth) {\n          this.renderer.setStyle(this.ele, 'width', `${box.clientWidth}px`);\n        }\n\n        if (overMinHeight && underMaxHeight) {\n          this.renderer.setStyle(this.ele, 'top', `${box.offsetTop}px`);\n          this.renderer.setStyle(this.ele, 'height', `${box.clientHeight}px`);\n        }\n\n        break;\n\n      case 'bottom-end':\n        if (overMinWidth && underMaxWidth) {\n          this.renderer.setStyle(this.ele, 'width', `${box.clientWidth}px`);\n        }\n\n        if (overMinHeight && underMaxHeight) {\n          this.renderer.setStyle(this.ele, 'height', `${box.clientHeight}px`);\n        }\n\n        break;\n\n      case 'bottom-start':\n        if (overMinWidth && underMaxWidth) {\n          this.renderer.setStyle(this.ele, 'left', `${box.offsetLeft}px`);\n          this.renderer.setStyle(this.ele, 'width', `${box.clientWidth}px`);\n        }\n\n        if (overMinHeight && underMaxHeight) {\n          this.renderer.setStyle(this.ele, 'height', `${box.clientHeight}px`);\n        }\n\n        break;\n\n      case 'left':\n        console.log(this.minWidth);\n\n        if (overMinWidth && underMaxWidth) {\n          this.renderer.setStyle(this.ele, 'left', `${box.offsetLeft}px`);\n          this.renderer.setStyle(this.ele, 'width', `${box.clientWidth}px`);\n        }\n\n        break;\n\n      case 'top-start':\n        if (overMinWidth && underMaxWidth) {\n          this.renderer.setStyle(this.ele, 'left', `${box.offsetLeft}px`);\n          this.renderer.setStyle(this.ele, 'width', `${box.clientWidth}px`);\n        }\n\n        if (overMinHeight && underMaxHeight) {\n          this.renderer.setStyle(this.ele, 'top', `${box.offsetTop}px`);\n          this.renderer.setStyle(this.ele, 'height', `${box.clientHeight}px`);\n        }\n\n        break;\n\n      case 'top':\n        if (overMinHeight && underMaxHeight) {\n          this.renderer.setStyle(this.ele, 'top', `${box.offsetTop}px`);\n          this.renderer.setStyle(this.ele, 'height', `${box.clientHeight}px`);\n        }\n\n        break;\n\n      case 'bottom':\n        if (overMinHeight && underMaxHeight) {\n          this.renderer.setStyle(this.ele, 'height', `${box.clientHeight}px`);\n        }\n\n        break;\n    }\n  }\n\n  destroySubscription() {\n    if (this.mouseUpSub) {\n      this.mouseUpSub.unsubscribe();\n      this.mouseUpSub = undefined;\n    }\n  }\n\n}\n/** @nocollapse */\n\n\nXResizableDirective.ɵfac = function XResizableDirective_Factory(t) {\n  return new (t || XResizableDirective)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT));\n};\n/** @nocollapse */\n\n\nXResizableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: XResizableDirective,\n  selectors: [[\"\", \"xResizable\", \"\"]],\n  hostVars: 2,\n  hostBindings: function XResizableDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousedown\", function XResizableDirective_mousedown_HostBindingHandler($event) {\n        return ctx.mousedown($event);\n      })(\"touchstart\", function XResizableDirective_touchstart_HostBindingHandler($event) {\n        return ctx.mousedown($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"x-resizable-disabled\", ctx.getDisabled);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XResizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[xResizable]'\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    getDisabled: [{\n      type: HostBinding,\n      args: ['class.x-resizable-disabled']\n    }],\n    mousedown: [{\n      type: HostListener,\n      args: ['mousedown', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['touchstart', ['$event']]\n    }]\n  });\n})();\n\nclass XResizableModule {}\n/** @nocollapse */\n\n\nXResizableModule.ɵfac = function XResizableModule_Factory(t) {\n  return new (t || XResizableModule)();\n};\n/** @nocollapse */\n\n\nXResizableModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: XResizableModule\n});\n/** @nocollapse */\n\nXResizableModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XResizableModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [XResizableDirective],\n      exports: [XResizableDirective],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { XResizableDirective, XResizableModule, XResizablePrefix, XResizableProperty };","map":{"version":3,"names":["DOCUMENT","CommonModule","i0","EventEmitter","Directive","Input","Output","Inject","HostBinding","HostListener","NgModule","XProperty","XInputBoolean","XInputNumber","XIsChange","XIsString","XIsArray","fromEvent","takeUntil","__decorate","XResizablePrefix","XResizableProperty","constructor","arguments","xResizable","position","ghost","offsetLeft","offsetTop","resizeBegin","resizing","resizeEnd","ɵfac","ɵdir","prototype","type","args","selector","XResizableDirective","renderer","elementRef","doc","cornerPositions","allPositions","positions","newBox","clientWidth","clientHeight","positionNodes","activatingNodes","firstLoaded","document","ele","nativeElement","getDisabled","ngOnInit","setMapClass","ngAfterViewInit","setPosition","ngOnDestroy","destroySubscription","ngOnChanges","changes","mousedown","event","classList","target","direction","pos","contains","evt","startsWith","targetTouches","screenX","screenY","isTouchEvent","moveEvent","upEvent","setActivatingNodes","initResize","mouseup","mouseUpSub","subscribe","ev","mouseMoveSub","pipe","move","add","addClass","push","includes","createNode","computedStyle","window","getComputedStyle","setTimeout","minWidth","parseFloat","maxWidth","minHeight","maxHeight","addActivatingNode","item","nd","isNd","classes","cla","createElement","appendChild","stopPropagation","emit","endResize","removeClass","node","width","height","top","left","movementX","movementY","box","Number","resizeBox","overMinWidth","underMaxWidth","overMinHeight","underMaxHeight","setStyle","console","log","unsubscribe","undefined","Renderer2","ElementRef","decorators","XResizableModule","ɵmod","ɵinj","declarations","exports","imports"],"sources":["/Users/lzl/my-angular-app/node_modules/@ng-nest/ui/fesm2020/ng-nest-ui-resizable.mjs"],"sourcesContent":["import { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, Inject, HostBinding, HostListener, NgModule } from '@angular/core';\nimport { XProperty, XInputBoolean, XInputNumber, XIsChange, XIsString, XIsArray } from '@ng-nest/ui/core';\nimport { fromEvent, takeUntil } from 'rxjs';\nimport { __decorate } from 'tslib';\n\n/**\r\n * Resizable 指令名称\r\n * @selector x-resizable\r\n * @decorator Directive\r\n */\r\nconst XResizablePrefix = 'x-resizable';\r\n// const X_CONFIG_NAME = 'resizable';\r\n/**\r\n * Resizable Property\r\n */\r\nclass XResizableProperty extends XProperty {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * @zh_CN 启用调整尺寸大小\r\n         * @en_US Enable adjustment size size\r\n         */\r\n        this.xResizable = true;\r\n        /**\r\n         * @zh_CN 调整方位\r\n         * @en_US Adjust the orientation\r\n         */\r\n        this.position = 'all';\r\n        /**\r\n         * @zh_CN 手动调整，通过回调的数值自行调整\r\n         * @en_US Manual adjustment, adjustment of the number of callbacks\r\n         */\r\n        this.ghost = false;\r\n        /**\r\n         * @zh_CN 偏移屏幕左边\r\n         * @en_US Distance on the left side\r\n         */\r\n        this.offsetLeft = 0;\r\n        /**\r\n         * @zh_CN 偏移屏幕顶部\r\n         * @en_US Distance to the top of the screen\r\n         */\r\n        this.offsetTop = 0;\r\n        /**\r\n         * @zh_CN 开始调整\r\n         * @en_US Adjust the orientation\r\n         */\r\n        this.resizeBegin = new EventEmitter();\r\n        /**\r\n         * @zh_CN 调整中\r\n         * @en_US Adjust the orientation\r\n         */\r\n        this.resizing = new EventEmitter();\r\n        /**\r\n         * @zh_CN 调整结束\r\n         * @en_US Adjust the orientation\r\n         */\r\n        this.resizeEnd = new EventEmitter();\r\n    }\r\n}\r\n/** @nocollapse */ XResizableProperty.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XResizableProperty, deps: null, target: i0.ɵɵFactoryTarget.Directive });\r\n/** @nocollapse */ XResizableProperty.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XResizableProperty, selector: \"[xResizable]\", inputs: { xResizable: \"xResizable\", position: \"position\", ghost: \"ghost\", offsetLeft: \"offsetLeft\", offsetTop: \"offsetTop\" }, outputs: { resizeBegin: \"resizeBegin\", resizing: \"resizing\", resizeEnd: \"resizeEnd\" }, usesInheritance: true, ngImport: i0 });\r\n__decorate([\r\n    XInputBoolean()\r\n], XResizableProperty.prototype, \"xResizable\", void 0);\r\n__decorate([\r\n    XInputBoolean()\r\n], XResizableProperty.prototype, \"ghost\", void 0);\r\n__decorate([\r\n    XInputNumber()\r\n], XResizableProperty.prototype, \"offsetLeft\", void 0);\r\n__decorate([\r\n    XInputNumber()\r\n], XResizableProperty.prototype, \"offsetTop\", void 0);\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XResizableProperty, decorators: [{\r\n            type: Directive,\r\n            args: [{ selector: '[xResizable]' }]\r\n        }], propDecorators: { xResizable: [{\r\n                type: Input\r\n            }], position: [{\r\n                type: Input\r\n            }], ghost: [{\r\n                type: Input\r\n            }], offsetLeft: [{\r\n                type: Input\r\n            }], offsetTop: [{\r\n                type: Input\r\n            }], resizeBegin: [{\r\n                type: Output\r\n            }], resizing: [{\r\n                type: Output\r\n            }], resizeEnd: [{\r\n                type: Output\r\n            }] } });\n\nclass XResizableDirective extends XResizableProperty {\r\n    constructor(renderer, elementRef, doc) {\r\n        super();\r\n        this.renderer = renderer;\r\n        this.elementRef = elementRef;\r\n        this.cornerPositions = ['top-start', 'top-end', 'bottom-start', 'bottom-end'];\r\n        this.allPositions = ['left', 'right', 'top', 'bottom', ...this.cornerPositions];\r\n        this.positions = [];\r\n        this.newBox = { clientWidth: 0, clientHeight: 0, offsetLeft: 0, offsetTop: 0 };\r\n        this.positionNodes = {};\r\n        this.activatingNodes = [];\r\n        this.firstLoaded = true;\r\n        this.document = doc;\r\n        this.ele = this.elementRef.nativeElement;\r\n    }\r\n    get getDisabled() {\r\n        return !this.xResizable;\r\n    }\r\n    ngOnInit() {\r\n        this.setMapClass();\r\n    }\r\n    ngAfterViewInit() {\r\n        this.setPosition();\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroySubscription();\r\n    }\r\n    ngOnChanges(changes) {\r\n        const { xResizable } = changes;\r\n        XIsChange(xResizable) && this.setPosition();\r\n    }\r\n    mousedown(event) {\r\n        if (!this.xResizable)\r\n            return;\r\n        const classList = event.target.classList;\r\n        let direction = null;\r\n        for (let pos of this.allPositions) {\r\n            if (classList.contains(`x-resizable-${pos}`)) {\r\n                direction = pos;\r\n                break;\r\n            }\r\n        }\r\n        if (!direction)\r\n            return;\r\n        const evt = event.type.startsWith('touch') ? event.targetTouches[0] : event;\r\n        const { clientWidth, clientHeight, offsetLeft, offsetTop } = this.ele;\r\n        const { screenX, screenY } = evt;\r\n        const isTouchEvent = event.type.startsWith('touch');\r\n        const moveEvent = isTouchEvent ? 'touchmove' : 'mousemove';\r\n        const upEvent = isTouchEvent ? 'touchend' : 'mouseup';\r\n        this.setActivatingNodes(direction);\r\n        this.initResize(event, direction);\r\n        const mouseup = fromEvent(this.document, upEvent);\r\n        this.mouseUpSub = mouseup.subscribe((ev) => {\r\n            this.mouseup(ev);\r\n        });\r\n        const mouseMoveSub = fromEvent(document, moveEvent)\r\n            .pipe(takeUntil(mouseup))\r\n            .subscribe((ev) => this.move(ev, clientWidth, clientHeight, offsetTop, offsetLeft, screenX, screenY));\r\n        this.mouseUpSub.add(mouseMoveSub);\r\n    }\r\n    setMapClass() {\r\n        this.renderer.addClass(this.ele, XResizablePrefix);\r\n    }\r\n    setPosition() {\r\n        if (!this.xResizable && !this.firstLoaded)\r\n            return;\r\n        let positions = [];\r\n        if (XIsString(this.position)) {\r\n            positions.push(this.position);\r\n        }\r\n        else if (XIsArray(this.position)) {\r\n            positions = this.position;\r\n        }\r\n        if (positions.includes('all')) {\r\n            this.positions = this.allPositions;\r\n        }\r\n        else {\r\n            this.positions = positions;\r\n        }\r\n        this.createNode(...this.positions);\r\n        const computedStyle = window.getComputedStyle(this.ele);\r\n        setTimeout(() => {\r\n            this.minWidth = parseFloat(computedStyle.minWidth);\r\n            this.maxWidth = parseFloat(computedStyle.maxWidth);\r\n            this.minHeight = parseFloat(computedStyle.minHeight);\r\n            this.maxHeight = parseFloat(computedStyle.maxHeight);\r\n            this.firstLoaded = false;\r\n        });\r\n    }\r\n    setActivatingNodes(direction) {\r\n        if (!this.positions.includes(direction))\r\n            return;\r\n        const addActivatingNode = (...direction) => {\r\n            for (let item of direction) {\r\n                const nd = this.positionNodes[item];\r\n                const isNd = this.activatingNodes.includes(nd);\r\n                if (!nd || isNd)\r\n                    continue;\r\n                this.renderer.addClass(nd, 'x-resizable-activating');\r\n                this.activatingNodes.push(nd);\r\n            }\r\n        };\r\n        if (this.cornerPositions.includes(direction)) {\r\n            switch (direction) {\r\n                case 'bottom-end':\r\n                    addActivatingNode('bottom', 'right');\r\n                    break;\r\n                case 'top-end':\r\n                    addActivatingNode('top', 'right');\r\n                    break;\r\n                case 'bottom-start':\r\n                    addActivatingNode('bottom', 'left');\r\n                    break;\r\n                case 'top-start':\r\n                    addActivatingNode('top', 'left');\r\n                    break;\r\n            }\r\n        }\r\n        addActivatingNode(direction);\r\n    }\r\n    createNode(...classes) {\r\n        for (let cla of classes) {\r\n            const pos = this.renderer.createElement('div');\r\n            this.renderer.addClass(pos, `x-resizable-${cla}`);\r\n            this.renderer.appendChild(this.ele, pos);\r\n            this.positionNodes[cla] = pos;\r\n        }\r\n    }\r\n    initResize(event, direction) {\r\n        this.direction = direction;\r\n        this.renderer.addClass(this.ele, `x-resizable-resizing`);\r\n        let { clientWidth, clientHeight, offsetLeft, offsetTop } = this.ele;\r\n        this.newBox = { clientWidth, clientHeight, offsetLeft, offsetTop };\r\n        event.stopPropagation();\r\n        this.resizeBegin.emit();\r\n    }\r\n    mouseup(event) {\r\n        this.endResize(event);\r\n        this.destroySubscription();\r\n    }\r\n    endResize(event) {\r\n        const evt = event.type.startsWith('touch') ? event.targetTouches[0] : event;\r\n        this.direction = null;\r\n        this.renderer.removeClass(this.ele, `x-resizable-resizing`);\r\n        for (const node of this.activatingNodes) {\r\n            this.renderer.removeClass(node, 'x-resizable-activating');\r\n        }\r\n        this.activatingNodes = [];\r\n        this.resizeEnd.emit({ event: evt, ...this.newBox });\r\n    }\r\n    move(event, width, height, top, left, screenX, screenY) {\r\n        const evt = event.type.startsWith('touch') ? event.targetTouches[0] : event;\r\n        const movementX = evt.screenX - screenX;\r\n        const movementY = evt.screenY - screenY;\r\n        this.newBox = {\r\n            clientWidth: width - (['bottom-start', 'left', 'top-start'].includes(this.direction) ? movementX : -movementX),\r\n            clientHeight: height - (['top-start', 'top', 'top-end'].includes(this.direction) ? movementY : -movementY),\r\n            offsetLeft: left + movementX,\r\n            offsetTop: top + movementY\r\n        };\r\n        const box = {\r\n            ...this.newBox,\r\n            offsetLeft: this.newBox.offsetLeft - Number(this.offsetLeft),\r\n            offsetTop: this.newBox.offsetTop - Number(this.offsetTop)\r\n        };\r\n        this.resizeBox(box);\r\n        this.resizing.emit({ ...this.newBox, event: evt, direction: this.direction });\r\n    }\r\n    resizeBox(box) {\r\n        if (this.ghost)\r\n            return;\r\n        const overMinWidth = !this.minWidth || box.clientWidth >= this.minWidth;\r\n        const underMaxWidth = !this.maxWidth || box.clientWidth <= this.maxWidth;\r\n        const overMinHeight = !this.minHeight || box.clientHeight >= this.minHeight;\r\n        const underMaxHeight = !this.maxHeight || box.clientHeight <= this.maxHeight;\r\n        switch (this.direction) {\r\n            case 'right':\r\n                if (overMinWidth && underMaxWidth) {\r\n                    this.renderer.setStyle(this.ele, 'width', `${box.clientWidth}px`);\r\n                }\r\n                break;\r\n            case 'top-end':\r\n                if (overMinWidth && underMaxWidth) {\r\n                    this.renderer.setStyle(this.ele, 'width', `${box.clientWidth}px`);\r\n                }\r\n                if (overMinHeight && underMaxHeight) {\r\n                    this.renderer.setStyle(this.ele, 'top', `${box.offsetTop}px`);\r\n                    this.renderer.setStyle(this.ele, 'height', `${box.clientHeight}px`);\r\n                }\r\n                break;\r\n            case 'bottom-end':\r\n                if (overMinWidth && underMaxWidth) {\r\n                    this.renderer.setStyle(this.ele, 'width', `${box.clientWidth}px`);\r\n                }\r\n                if (overMinHeight && underMaxHeight) {\r\n                    this.renderer.setStyle(this.ele, 'height', `${box.clientHeight}px`);\r\n                }\r\n                break;\r\n            case 'bottom-start':\r\n                if (overMinWidth && underMaxWidth) {\r\n                    this.renderer.setStyle(this.ele, 'left', `${box.offsetLeft}px`);\r\n                    this.renderer.setStyle(this.ele, 'width', `${box.clientWidth}px`);\r\n                }\r\n                if (overMinHeight && underMaxHeight) {\r\n                    this.renderer.setStyle(this.ele, 'height', `${box.clientHeight}px`);\r\n                }\r\n                break;\r\n            case 'left':\r\n                console.log(this.minWidth);\r\n                if (overMinWidth && underMaxWidth) {\r\n                    this.renderer.setStyle(this.ele, 'left', `${box.offsetLeft}px`);\r\n                    this.renderer.setStyle(this.ele, 'width', `${box.clientWidth}px`);\r\n                }\r\n                break;\r\n            case 'top-start':\r\n                if (overMinWidth && underMaxWidth) {\r\n                    this.renderer.setStyle(this.ele, 'left', `${box.offsetLeft}px`);\r\n                    this.renderer.setStyle(this.ele, 'width', `${box.clientWidth}px`);\r\n                }\r\n                if (overMinHeight && underMaxHeight) {\r\n                    this.renderer.setStyle(this.ele, 'top', `${box.offsetTop}px`);\r\n                    this.renderer.setStyle(this.ele, 'height', `${box.clientHeight}px`);\r\n                }\r\n                break;\r\n            case 'top':\r\n                if (overMinHeight && underMaxHeight) {\r\n                    this.renderer.setStyle(this.ele, 'top', `${box.offsetTop}px`);\r\n                    this.renderer.setStyle(this.ele, 'height', `${box.clientHeight}px`);\r\n                }\r\n                break;\r\n            case 'bottom':\r\n                if (overMinHeight && underMaxHeight) {\r\n                    this.renderer.setStyle(this.ele, 'height', `${box.clientHeight}px`);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    destroySubscription() {\r\n        if (this.mouseUpSub) {\r\n            this.mouseUpSub.unsubscribe();\r\n            this.mouseUpSub = undefined;\r\n        }\r\n    }\r\n}\r\n/** @nocollapse */ XResizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XResizableDirective, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\r\n/** @nocollapse */ XResizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XResizableDirective, selector: \"[xResizable]\", host: { listeners: { \"mousedown\": \"mousedown($event)\", \"touchstart\": \"mousedown($event)\" }, properties: { \"class.x-resizable-disabled\": \"this.getDisabled\" } }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XResizableDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{ selector: '[xResizable]' }]\r\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [DOCUMENT]\r\n                }] }]; }, propDecorators: { getDisabled: [{\r\n                type: HostBinding,\r\n                args: ['class.x-resizable-disabled']\r\n            }], mousedown: [{\r\n                type: HostListener,\r\n                args: ['mousedown', ['$event']]\r\n            }, {\r\n                type: HostListener,\r\n                args: ['touchstart', ['$event']]\r\n            }] } });\n\nclass XResizableModule {\r\n}\r\n/** @nocollapse */ XResizableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XResizableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\n/** @nocollapse */ XResizableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.2\", ngImport: i0, type: XResizableModule, declarations: [XResizableDirective], imports: [CommonModule], exports: [XResizableDirective] });\r\n/** @nocollapse */ XResizableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XResizableModule, imports: [CommonModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XResizableModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [XResizableDirective],\r\n                    exports: [XResizableDirective],\r\n                    imports: [CommonModule]\r\n                }]\r\n        }] });\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { XResizableDirective, XResizableModule, XResizablePrefix, XResizableProperty };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}