{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, ViewEncapsulation, ChangeDetectionStrategy, HostBinding, HostListener, ViewChild, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport * as i3 from '@ng-nest/ui/core';\nimport { XDataConvert, XWithConfig, XInputBoolean, XConnectBaseAnimation, XIsChange, XClearClass, XIsObservable, XIsFunction, XSetData, XIsEmpty } from '@ng-nest/ui/core';\nimport { XControlValueAccessor, XValueAccessor, XBaseFormModule } from '@ng-nest/ui/base-form';\nimport * as i1$1 from '@ng-nest/ui/portal';\nimport { XPortalConnectedPosition, XPortalModule } from '@ng-nest/ui/portal';\nimport { takeUntil, debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport * as i1 from '@ng-nest/ui/list';\nimport { XListModule } from '@ng-nest/ui/list';\nimport { DOWN_ARROW, UP_ARROW, ENTER, MAC_ENTER, ESCAPE } from '@angular/cdk/keycodes';\nimport * as i2 from '@angular/cdk/overlay';\nimport * as i4 from '@angular/forms';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport * as i5 from '@ng-nest/ui/input';\nimport { XInputModule } from '@ng-nest/ui/input';\nimport { CommonModule } from '@angular/common';\n/**\r\n * AutoComplete\r\n * @selector x-auto-complete\r\n * @decorator component\r\n */\n\nconst _c0 = [\"list\"];\nconst _c1 = [\"inputCom\"];\nconst _c2 = [\"autoComplete\"];\nconst XAutoCompletePrefix = 'x-auto-complete';\nconst X_CONFIG_NAME = 'autoComplete';\n/**\r\n * AutoComplete Property\r\n */\n\nclass XAutoCompleteProperty extends XControlValueAccessor {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * @zh_CN 节点数据\r\n     * @en_US Node data\r\n     */\n\n    this.data = [];\n    /**\r\n     * @zh_CN 选择节点事件\r\n     * @en_US Node click event\r\n     */\n\n    this.nodeEmit = new EventEmitter();\n  }\n\n}\n/** @nocollapse */\n\n\nXAutoCompleteProperty.ɵfac = /* @__PURE__ */function () {\n  let ɵXAutoCompleteProperty_BaseFactory;\n  return function XAutoCompleteProperty_Factory(t) {\n    return (ɵXAutoCompleteProperty_BaseFactory || (ɵXAutoCompleteProperty_BaseFactory = i0.ɵɵgetInheritedFactory(XAutoCompleteProperty)))(t || XAutoCompleteProperty);\n  };\n}();\n/** @nocollapse */\n\n\nXAutoCompleteProperty.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XAutoCompleteProperty,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    data: \"data\",\n    debounceTime: \"debounceTime\",\n    placement: \"placement\",\n    nodeTpl: \"nodeTpl\",\n    size: \"size\",\n    bordered: \"bordered\",\n    caseSensitive: \"caseSensitive\",\n    onlySelect: \"onlySelect\"\n  },\n  outputs: {\n    nodeEmit: \"nodeEmit\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function XAutoCompleteProperty_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n__decorate([XDataConvert()], XAutoCompleteProperty.prototype, \"data\", void 0);\n\n__decorate([XWithConfig(X_CONFIG_NAME, 200)], XAutoCompleteProperty.prototype, \"debounceTime\", void 0);\n\n__decorate([XWithConfig(X_CONFIG_NAME, 'bottom')], XAutoCompleteProperty.prototype, \"placement\", void 0);\n\n__decorate([XWithConfig(X_CONFIG_NAME, 'medium')], XAutoCompleteProperty.prototype, \"size\", void 0);\n\n__decorate([XInputBoolean(), XWithConfig(X_CONFIG_NAME, true)], XAutoCompleteProperty.prototype, \"bordered\", void 0);\n\n__decorate([XInputBoolean(), XWithConfig(X_CONFIG_NAME, true)], XAutoCompleteProperty.prototype, \"caseSensitive\", void 0);\n\n__decorate([XInputBoolean(), XWithConfig(X_CONFIG_NAME, false)], XAutoCompleteProperty.prototype, \"onlySelect\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XAutoCompleteProperty, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    debounceTime: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    nodeTpl: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    bordered: [{\n      type: Input\n    }],\n    caseSensitive: [{\n      type: Input\n    }],\n    onlySelect: [{\n      type: Input\n    }],\n    nodeEmit: [{\n      type: Output\n    }]\n  });\n})();\n/**\r\n * AutoComplete Portal\r\n * @selector x-auto-complete-portal\r\n * @decorator component\r\n */\n\n\nconst XAutoCompletePortalPrefix = 'x-auto-complete-portal';\n\nclass XAutoCompletePortalComponent {\n  constructor(renderer, cdr) {\n    this.renderer = renderer;\n    this.cdr = cdr;\n    this.multiple = 1;\n    this.show = false;\n    this.active = -1;\n    this._unSubject = new Subject();\n  }\n\n  done(event) {\n    this.animating(false);\n    event.toState === 'void' && this.destroyPortal();\n  }\n\n  start() {\n    this.animating(true);\n  }\n\n  ngOnInit() {\n    this.valueChange.pipe(takeUntil(this._unSubject)).subscribe(x => {\n      this.value = x;\n      this.cdr.detectChanges();\n    });\n    this.positionChange.pipe(takeUntil(this._unSubject)).subscribe(x => {\n      this.placement = x;\n      this.cdr.detectChanges();\n    });\n    this.dataChange.pipe(takeUntil(this._unSubject)).subscribe(x => {\n      this.data = x;\n      this.cdr.detectChanges();\n    });\n    this.closeSubject.pipe(takeUntil(this._unSubject)).subscribe(() => {\n      this.list.setUnActive(this.active);\n    });\n    this.keydownSubject.pipe(takeUntil(this._unSubject)).subscribe(x => {\n      this.list.keydown(x);\n    });\n  }\n\n  ngOnDestroy() {\n    this._unSubject.next();\n\n    this._unSubject.unsubscribe();\n  }\n\n  stopPropagation(event) {\n    event.stopPropagation();\n  }\n\n  nodeClick(node) {\n    this.nodeEmit(node);\n  }\n\n  onActive(num) {\n    this.active = num;\n  }\n\n  onTabOut() {\n    this.closeSubject.next();\n  }\n\n}\n/** @nocollapse */\n\n\nXAutoCompletePortalComponent.ɵfac = function XAutoCompletePortalComponent_Factory(t) {\n  return new (t || XAutoCompletePortalComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n/** @nocollapse */\n\n\nXAutoCompletePortalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XAutoCompletePortalComponent,\n  selectors: [[\"x-auto-complete-portal\"]],\n  viewQuery: function XAutoCompletePortalComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.list = _t.first);\n    }\n  },\n  hostVars: 1,\n  hostBindings: function XAutoCompletePortalComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵsyntheticHostListener(\"@x-connect-base-animation.done\", function XAutoCompletePortalComponent_animation_x_connect_base_animation_done_HostBindingHandler($event) {\n        return ctx.done($event);\n      })(\"@x-connect-base-animation.start\", function XAutoCompletePortalComponent_animation_x_connect_base_animation_start_HostBindingHandler($event) {\n        return ctx.start($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵsyntheticHostProperty(\"@x-connect-base-animation\", ctx.placement);\n    }\n  },\n  decls: 4,\n  vars: 3,\n  consts: [[\"tabindex\", \"-1\", 1, \"x-auto-complete-portal\", 3, \"click\"], [\"autoCompletePortal\", \"\"], [3, \"data\", \"nodeTpl\", \"scrollElement\", \"nodeClick\", \"keyManagerChange\", \"keyManagerTabOut\"], [\"list\", \"\"]],\n  template: function XAutoCompletePortalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵlistener(\"click\", function XAutoCompletePortalComponent_Template_div_click_0_listener($event) {\n        ctx.inputCom.inputFocus();\n        return ctx.stopPropagation($event);\n      });\n      i0.ɵɵelementStart(2, \"x-list\", 2, 3);\n      i0.ɵɵlistener(\"nodeClick\", function XAutoCompletePortalComponent_Template_x_list_nodeClick_2_listener($event) {\n        return ctx.nodeClick($event);\n      })(\"keyManagerChange\", function XAutoCompletePortalComponent_Template_x_list_keyManagerChange_2_listener($event) {\n        return ctx.onActive($event);\n      })(\"keyManagerTabOut\", function XAutoCompletePortalComponent_Template_x_list_keyManagerTabOut_2_listener() {\n        return ctx.onTabOut();\n      });\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(1);\n\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"data\", ctx.data)(\"nodeTpl\", ctx.nodeTpl)(\"scrollElement\", _r0);\n    }\n  },\n  dependencies: [i1.XListComponent],\n  styles: [\"@charset \\\"UTF-8\\\";x-auto-complete-portal{width:100%}.x-auto-complete-portal{margin:.0625rem 0;font-size:var(--x-font-size);color:var(--x-text);border:var(--x-border-width) var(--x-border-style) var(--x-border);width:100%;border-radius:var(--x-border-radius);box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color);position:relative;display:flex;background-color:var(--x-background);overflow-y:auto;max-height:calc((calc(var(--x-font-size) + .875rem) * 6) + (var(--x-border-width) * 7))}.x-auto-complete-portal:focus{outline:none}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [XConnectBaseAnimation]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XAutoCompletePortalComponent, [{\n    type: Component,\n    args: [{\n      selector: `${XAutoCompletePortalPrefix}`,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [XConnectBaseAnimation],\n      template: \"<div #autoCompletePortal class=\\\"x-auto-complete-portal\\\" tabindex=\\\"-1\\\" (click)=\\\"inputCom.inputFocus(); stopPropagation($event)\\\">\\r\\n  <x-list\\r\\n    #list\\r\\n    [data]=\\\"data\\\"\\r\\n    (nodeClick)=\\\"nodeClick($event)\\\"\\r\\n    (keyManagerChange)=\\\"onActive($event)\\\"\\r\\n    (keyManagerTabOut)=\\\"onTabOut()\\\"\\r\\n    [nodeTpl]=\\\"nodeTpl\\\"\\r\\n    [scrollElement]=\\\"autoCompletePortal\\\"\\r\\n  ></x-list>\\r\\n</div>\\r\\n\",\n      styles: [\"@charset \\\"UTF-8\\\";x-auto-complete-portal{width:100%}.x-auto-complete-portal{margin:.0625rem 0;font-size:var(--x-font-size);color:var(--x-text);border:var(--x-border-width) var(--x-border-style) var(--x-border);width:100%;border-radius:var(--x-border-radius);box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color);position:relative;display:flex;background-color:var(--x-background);overflow-y:auto;max-height:calc((calc(var(--x-font-size) + .875rem) * 6) + (var(--x-border-width) * 7))}.x-auto-complete-portal:focus{outline:none}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    placement: [{\n      type: HostBinding,\n      args: ['@x-connect-base-animation']\n    }],\n    done: [{\n      type: HostListener,\n      args: ['@x-connect-base-animation.done', ['$event']]\n    }],\n    start: [{\n      type: HostListener,\n      args: ['@x-connect-base-animation.start', ['$event']]\n    }],\n    list: [{\n      type: ViewChild,\n      args: ['list']\n    }]\n  });\n})();\n\nclass XAutoCompleteComponent extends XAutoCompleteProperty {\n  constructor(renderer, cdr, portalService, viewContainerRef, overlay, configService) {\n    super();\n    this.renderer = renderer;\n    this.cdr = cdr;\n    this.portalService = portalService;\n    this.viewContainerRef = viewContainerRef;\n    this.overlay = overlay;\n    this.configService = configService;\n    this.clearable = false;\n    this.enter = false;\n    this.displayValue = '';\n    this.nodes = [];\n    this.searchNodes = [];\n    this.icon = '';\n    this.iconSpin = false;\n    this.maxNodes = 6;\n    this.protalTobottom = true;\n    this.asyncLoading = false;\n    this.animating = false;\n    this.valueTplContext = {\n      $node: null,\n      $isValue: true\n    };\n    this.valueChange = new Subject();\n    this.positionChange = new Subject();\n    this.dataChange = new Subject();\n    this.inputChange = new Subject();\n    this.closeSubject = new Subject();\n    this.keydownSubject = new Subject();\n    this._unSubject = new Subject();\n  }\n\n  writeValue(value) {\n    this.value = value;\n    this.valueChange.next(this.value);\n    this.cdr.detectChanges();\n  }\n\n  ngOnInit() {\n    this.setFlex(this.autoComplete.nativeElement, this.renderer, this.justify, this.align, this.direction);\n    this.setClassMap();\n    this.setSubject();\n  }\n\n  ngOnChanges(changes) {\n    const {\n      data\n    } = changes;\n    XIsChange(data) && this.setData();\n  }\n\n  ngAfterViewInit() {\n    this.setPortal();\n  }\n\n  ngOnDestroy() {\n    this._unSubject.next();\n\n    this._unSubject.unsubscribe();\n  }\n\n  setClassMap() {\n    XClearClass(this.labelMap);\n    this.labelMap[`x-text-align-${this.labelAlign}`] = this.labelAlign ? true : false;\n  }\n\n  setData() {\n    if (XIsObservable(this.data) || XIsFunction(this.data)) return;\n    XSetData(this.data, this._unSubject).subscribe(x => {\n      this.nodes = x;\n      this.setPortal();\n      this.cdr.detectChanges();\n    });\n  }\n\n  setSubject() {\n    this.closeSubject.pipe(takeUntil(this._unSubject)).subscribe(() => {\n      this.closePortal();\n    });\n    this.inputChange.pipe(debounceTime(this.debounceTime), distinctUntilChanged(), takeUntil(this._unSubject)).subscribe(x => {\n      this.modelChange(x);\n    });\n    this.keydownSubject.pipe(takeUntil(this._unSubject)).subscribe(x => {\n      const keyCode = x.keyCode;\n\n      if (!this.portalAttached() && [DOWN_ARROW, UP_ARROW, ENTER, MAC_ENTER].includes(keyCode)) {\n        this.inputChange.next(this.value);\n      }\n\n      if (this.portalAttached() && [ESCAPE].includes(keyCode)) {\n        this.closeSubject.next();\n      }\n    });\n  }\n\n  portalAttached() {\n    return this.portal?.overlayRef?.hasAttached();\n  }\n\n  closePortal() {\n    if (this.portalAttached()) {\n      this.portal?.overlayRef?.detach();\n      this.active = false;\n\n      if (this.onlySelect) {\n        if (!this.nodes.map(x => x.label).includes(this.value)) {\n          this.value = '';\n          if (this.onChange) this.onChange(this.value);\n          this.inputChange.next(this.value);\n        }\n      }\n\n      this.cdr.detectChanges();\n      return true;\n    }\n\n    return false;\n  }\n\n  destroyPortal() {\n    this.portal?.overlayRef?.dispose();\n  }\n\n  showPortal() {\n    if (XIsEmpty(this.value) || this.disabled || this.iconSpin || this.animating) return;\n    this.active = true;\n\n    if (XIsObservable(this.data) && this.nodes.length === 0 || XIsFunction(this.data)) {\n      this.icon = 'fto-loader';\n      this.iconSpin = true;\n      this.cdr.detectChanges();\n      XSetData(this.data, this._unSubject, true, this.value).subscribe(x => {\n        this.nodes = x;\n        this.createPortal();\n        this.icon = '';\n        this.iconSpin = false;\n        this.cdr.detectChanges();\n      });\n    } else {\n      this.createPortal();\n    }\n  }\n\n  createPortal() {\n    this.nodes.filter(x => x.selected).map(x => x.selected = false);\n\n    if (XIsFunction(this.data)) {\n      this.searchNodes = this.nodes;\n    } else if (!XIsEmpty(this.value)) {\n      this.setSearchNodes(this.value);\n    }\n\n    this.box = this.inputCom.inputRef.nativeElement.getBoundingClientRect();\n    const config = {\n      backdropClass: '',\n      width: this.box.width,\n      positionStrategy: this.setPlacement(),\n      scrollStrategy: this.overlay.scrollStrategies.reposition()\n    };\n    this.setPosition(config);\n    this.portal = this.portalService.attach({\n      content: XAutoCompletePortalComponent,\n      viewContainerRef: this.viewContainerRef,\n      overlayConfig: config\n    });\n    this.portal.overlayRef?.outsidePointerEvents().pipe(takeUntil(this._unSubject)).subscribe(() => {\n      this.closeSubject.next();\n    });\n    this.setInstance();\n  }\n\n  setPosition(config) {\n    let position = config.positionStrategy;\n    position.positionChanges.pipe(takeUntil(this._unSubject)).subscribe(pos => {\n      const place = XPortalConnectedPosition.get(pos.connectionPair);\n      place !== this.placement && this.positionChange.next(place);\n    });\n  }\n\n  setInstance() {\n    let componentRef = this.portal.componentRef;\n    if (!componentRef) return;\n    Object.assign(componentRef.instance, {\n      data: this.searchNodes,\n      value: this.value,\n      placement: this.placement,\n      nodeTpl: this.nodeTpl,\n      valueChange: this.valueChange,\n      dataChange: this.dataChange,\n      positionChange: this.positionChange,\n      closeSubject: this.closeSubject,\n      keydownSubject: this.keydownSubject,\n      inputCom: this.inputCom,\n      destroyPortal: () => this.destroyPortal(),\n      nodeEmit: node => this.onNodeClick(node),\n      animating: ing => this.animating = ing\n    });\n    componentRef.changeDetectorRef.detectChanges();\n  }\n\n  onNodeClick(node) {\n    node = node;\n\n    if (this.value === node.label) {\n      this.nodeEmit.emit(node);\n      this.closeSubject.next();\n      return;\n    }\n\n    this.value = node.label;\n    this.valueTplContext.$node = node;\n    this.inputCom.inputFocus();\n    if (this.onChange) this.onChange(this.value);\n    this.nodeEmit.emit(node);\n    this.closeSubject.next();\n    this.cdr.detectChanges();\n  }\n\n  setPlacement() {\n    return this.portalService.setPlacement({\n      elementRef: this.inputCom.inputRef,\n      placement: [this.placement, 'bottom-start', 'bottom-end', 'top-start', 'top-end'],\n      transformOriginOn: 'x-auto-complete-portal'\n    });\n  }\n\n  setPortal() {\n    this.portalAttached() && this.portal?.overlayRef?.updatePositionStrategy(this.setPlacement());\n  }\n\n  setSearchNodes(value) {\n    if (this.caseSensitive) {\n      this.searchNodes = this.nodes.filter(x => x.label.indexOf(value) >= 0);\n    } else {\n      this.searchNodes = this.nodes.filter(x => x.label.toLowerCase().indexOf(value.toLowerCase()) >= 0);\n    }\n  }\n\n  modelChange(value) {\n    if (this.onChange) this.onChange(value);\n\n    if (XIsFunction(this.data)) {\n      if (!this.portalAttached()) {\n        this.showPortal();\n      } else {\n        if (XIsEmpty(value)) {\n          this.closeSubject.next();\n        } else {\n          this.icon = 'fto-loader';\n          this.iconSpin = true;\n          this.cdr.detectChanges();\n          XSetData(this.data, this._unSubject, true, value).subscribe(x => {\n            this.nodes = x;\n            this.icon = '';\n            this.iconSpin = false;\n            this.dataChange.next(this.nodes);\n            this.cdr.detectChanges();\n          });\n        }\n      }\n\n      return;\n    }\n\n    if (this.nodes) {\n      if (!this.portalAttached()) {\n        this.showPortal();\n      } else {\n        if (XIsEmpty(value)) {\n          this.closeSubject.next();\n        } else {\n          this.setSearchNodes(value);\n          this.dataChange.next(this.searchNodes);\n        }\n      }\n    }\n  }\n\n  clearEmit() {\n    this.value = '';\n    this.displayValue = '';\n    this.valueTplContext.$node = null;\n    this.valueChange.next(this.value);\n    this.modelChange(this.value);\n  }\n\n  formControlChanges() {\n    this.setData();\n    this.ngOnInit();\n    this.cdr.detectChanges();\n  }\n\n  onKeydown($event) {\n    this.keydownSubject.next($event);\n  }\n\n  onInput(_event) {\n    setTimeout(() => {\n      this.inputChange.next(this.value);\n    });\n  }\n\n  onFocus(_event) {}\n\n  onBlur(_event) {}\n\n}\n/** @nocollapse */\n\n\nXAutoCompleteComponent.ɵfac = function XAutoCompleteComponent_Factory(t) {\n  return new (t || XAutoCompleteComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.XPortalService), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i2.Overlay), i0.ɵɵdirectiveInject(i3.XConfigService));\n};\n/** @nocollapse */\n\n\nXAutoCompleteComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XAutoCompleteComponent,\n  selectors: [[\"x-auto-complete\"]],\n  viewQuery: function XAutoCompleteComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c1, 7);\n      i0.ɵɵviewQuery(_c2, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputCom = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.autoComplete = _t.first);\n    }\n  },\n  features: [i0.ɵɵProvidersFeature([XValueAccessor(XAutoCompleteComponent)]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 5,\n  vars: 24,\n  consts: [[1, \"x-auto-complete\"], [\"autoComplete\", \"\"], [1, \"x-auto-complete-row\"], [\"type\", \"text\", 3, \"label\", \"labelWidth\", \"labelAlign\", \"justify\", \"align\", \"direction\", \"disabled\", \"required\", \"icon\", \"iconSpin\", \"placeholder\", \"readonly\", \"clearable\", \"ngModel\", \"valueTpl\", \"valueTplContext\", \"size\", \"bordered\", \"before\", \"after\", \"pattern\", \"message\", \"pointer\", \"active\", \"ngModelChange\", \"activeChange\", \"clearEmit\", \"xInput\", \"xKeydown\", \"xFocus\", \"xBlur\", \"xClick\"], [\"inputCom\", \"\"]],\n  template: function XAutoCompleteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1)(2, \"div\", 2)(3, \"x-input\", 3, 4);\n      i0.ɵɵlistener(\"ngModelChange\", function XAutoCompleteComponent_Template_x_input_ngModelChange_3_listener($event) {\n        return ctx.value = $event;\n      })(\"activeChange\", function XAutoCompleteComponent_Template_x_input_activeChange_3_listener($event) {\n        return ctx.active = $event;\n      })(\"clearEmit\", function XAutoCompleteComponent_Template_x_input_clearEmit_3_listener() {\n        return ctx.clearEmit();\n      })(\"xInput\", function XAutoCompleteComponent_Template_x_input_xInput_3_listener($event) {\n        return ctx.onInput($event);\n      })(\"xKeydown\", function XAutoCompleteComponent_Template_x_input_xKeydown_3_listener($event) {\n        return ctx.onKeydown($event);\n      })(\"xFocus\", function XAutoCompleteComponent_Template_x_input_xFocus_3_listener($event) {\n        return ctx.onFocus($event);\n      })(\"xBlur\", function XAutoCompleteComponent_Template_x_input_xBlur_3_listener($event) {\n        return ctx.onBlur($event);\n      })(\"xClick\", function XAutoCompleteComponent_Template_x_input_xClick_3_listener() {\n        return ctx.showPortal();\n      });\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"label\", ctx.label)(\"labelWidth\", ctx.labelWidth)(\"labelAlign\", ctx.labelAlign)(\"justify\", ctx.justify)(\"align\", ctx.align)(\"direction\", ctx.direction)(\"disabled\", ctx.disabled)(\"required\", ctx.required)(\"icon\", ctx.icon)(\"iconSpin\", ctx.iconSpin)(\"placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly)(\"clearable\", ctx.clearable)(\"ngModel\", ctx.value)(\"valueTpl\", ctx.valueTpl)(\"valueTplContext\", ctx.valueTplContext)(\"size\", ctx.size)(\"bordered\", ctx.bordered)(\"before\", ctx.before)(\"after\", ctx.after)(\"pattern\", ctx.pattern)(\"message\", ctx.message)(\"pointer\", ctx.pointer)(\"active\", ctx.active);\n    }\n  },\n  dependencies: [i4.NgControlStatus, i4.RequiredValidator, i4.PatternValidator, i4.NgModel, i5.XInputComponent],\n  styles: [\"@charset \\\"UTF-8\\\";x-auto-complete{display:inline-block;width:12rem}.x-auto-complete{margin:0;padding:0;width:100%}.x-auto-complete x-input{width:100%}.x-auto-complete-portal{margin:.0625rem 0;font-size:var(--x-font-size);color:var(--x-text);border:var(--x-border-width) var(--x-border-style) var(--x-border);width:100%;border-radius:var(--x-border-radius);box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color);position:relative;display:flex;background-color:var(--x-background);overflow-y:auto;max-height:calc((calc(var(--x-font-size) + .875rem) * 6) + (var(--x-border-width) * 7))}.x-auto-complete-portal:focus{outline:none}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XAutoCompleteComponent, [{\n    type: Component,\n    args: [{\n      selector: `${XAutoCompletePrefix}`,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [XValueAccessor(XAutoCompleteComponent)],\n      template: \"<div #autoComplete class=\\\"x-auto-complete\\\">\\r\\n  <div class=\\\"x-auto-complete-row\\\">\\r\\n    <x-input\\r\\n      #inputCom\\r\\n      type=\\\"text\\\"\\r\\n      [label]=\\\"label\\\"\\r\\n      [labelWidth]=\\\"labelWidth\\\"\\r\\n      [labelAlign]=\\\"labelAlign\\\"\\r\\n      [justify]=\\\"justify\\\"\\r\\n      [align]=\\\"align\\\"\\r\\n      [direction]=\\\"direction\\\"\\r\\n      [disabled]=\\\"disabled\\\"\\r\\n      [required]=\\\"required\\\"\\r\\n      [icon]=\\\"icon\\\"\\r\\n      [iconSpin]=\\\"iconSpin\\\"\\r\\n      [placeholder]=\\\"placeholder\\\"\\r\\n      [readonly]=\\\"readonly\\\"\\r\\n      [clearable]=\\\"clearable\\\"\\r\\n      [(ngModel)]=\\\"value\\\"\\r\\n      [valueTpl]=\\\"valueTpl\\\"\\r\\n      [valueTplContext]=\\\"valueTplContext\\\"\\r\\n      [size]=\\\"size\\\"\\r\\n      [bordered]=\\\"bordered\\\"\\r\\n      [before]=\\\"before\\\"\\r\\n      [after]=\\\"after\\\"\\r\\n      [pattern]=\\\"pattern\\\"\\r\\n      [message]=\\\"message\\\"\\r\\n      [pointer]=\\\"pointer\\\"\\r\\n      [(active)]=\\\"active\\\"\\r\\n      (clearEmit)=\\\"clearEmit()\\\"\\r\\n      (xInput)=\\\"onInput($event)\\\"\\r\\n      (xKeydown)=\\\"onKeydown($event)\\\"\\r\\n      (xFocus)=\\\"onFocus($event)\\\"\\r\\n      (xBlur)=\\\"onBlur($event)\\\"\\r\\n      (xClick)=\\\"showPortal()\\\"\\r\\n    ></x-input>\\r\\n  </div>\\r\\n</div>\\r\\n\",\n      styles: [\"@charset \\\"UTF-8\\\";x-auto-complete{display:inline-block;width:12rem}.x-auto-complete{margin:0;padding:0;width:100%}.x-auto-complete x-input{width:100%}.x-auto-complete-portal{margin:.0625rem 0;font-size:var(--x-font-size);color:var(--x-text);border:var(--x-border-width) var(--x-border-style) var(--x-border);width:100%;border-radius:var(--x-border-radius);box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color);position:relative;display:flex;background-color:var(--x-background);overflow-y:auto;max-height:calc((calc(var(--x-font-size) + .875rem) * 6) + (var(--x-border-width) * 7))}.x-auto-complete-portal:focus{outline:none}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.XPortalService\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i2.Overlay\n    }, {\n      type: i3.XConfigService\n    }];\n  }, {\n    inputCom: [{\n      type: ViewChild,\n      args: ['inputCom', {\n        static: true\n      }]\n    }],\n    autoComplete: [{\n      type: ViewChild,\n      args: ['autoComplete', {\n        static: true\n      }]\n    }]\n  });\n})();\n\nclass XAutoCompleteModule {}\n/** @nocollapse */\n\n\nXAutoCompleteModule.ɵfac = function XAutoCompleteModule_Factory(t) {\n  return new (t || XAutoCompleteModule)();\n};\n/** @nocollapse */\n\n\nXAutoCompleteModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: XAutoCompleteModule\n});\n/** @nocollapse */\n\nXAutoCompleteModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, XPortalModule, XInputModule, XListModule, XBaseFormModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XAutoCompleteModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [XAutoCompleteComponent, XAutoCompletePortalComponent, XAutoCompleteProperty],\n      exports: [XAutoCompleteComponent, XAutoCompletePortalComponent],\n      imports: [CommonModule, FormsModule, ReactiveFormsModule, XPortalModule, XInputModule, XListModule, XBaseFormModule]\n    }]\n  }], null, null);\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { XAutoCompleteComponent, XAutoCompleteModule, XAutoCompletePortalComponent, XAutoCompletePortalPrefix, XAutoCompletePrefix, XAutoCompleteProperty };","map":{"version":3,"names":["Subject","i0","EventEmitter","Component","Input","Output","ViewEncapsulation","ChangeDetectionStrategy","HostBinding","HostListener","ViewChild","NgModule","__decorate","i3","XDataConvert","XWithConfig","XInputBoolean","XConnectBaseAnimation","XIsChange","XClearClass","XIsObservable","XIsFunction","XSetData","XIsEmpty","XControlValueAccessor","XValueAccessor","XBaseFormModule","i1$1","XPortalConnectedPosition","XPortalModule","takeUntil","debounceTime","distinctUntilChanged","i1","XListModule","DOWN_ARROW","UP_ARROW","ENTER","MAC_ENTER","ESCAPE","i2","i4","FormsModule","ReactiveFormsModule","i5","XInputModule","CommonModule","XAutoCompletePrefix","X_CONFIG_NAME","XAutoCompleteProperty","constructor","arguments","data","nodeEmit","ɵfac","ɵcmp","prototype","type","args","template","placement","nodeTpl","size","bordered","caseSensitive","onlySelect","XAutoCompletePortalPrefix","XAutoCompletePortalComponent","renderer","cdr","multiple","show","active","_unSubject","done","event","animating","toState","destroyPortal","start","ngOnInit","valueChange","pipe","subscribe","x","value","detectChanges","positionChange","dataChange","closeSubject","list","setUnActive","keydownSubject","keydown","ngOnDestroy","next","unsubscribe","stopPropagation","nodeClick","node","onActive","num","onTabOut","Renderer2","ChangeDetectorRef","XListComponent","selector","encapsulation","None","changeDetection","OnPush","animations","styles","XAutoCompleteComponent","portalService","viewContainerRef","overlay","configService","clearable","enter","displayValue","nodes","searchNodes","icon","iconSpin","maxNodes","protalTobottom","asyncLoading","valueTplContext","$node","$isValue","inputChange","writeValue","setFlex","autoComplete","nativeElement","justify","align","direction","setClassMap","setSubject","ngOnChanges","changes","setData","ngAfterViewInit","setPortal","labelMap","labelAlign","closePortal","modelChange","keyCode","portalAttached","includes","portal","overlayRef","hasAttached","detach","map","label","onChange","dispose","showPortal","disabled","length","createPortal","filter","selected","setSearchNodes","box","inputCom","inputRef","getBoundingClientRect","config","backdropClass","width","positionStrategy","setPlacement","scrollStrategy","scrollStrategies","reposition","setPosition","attach","content","overlayConfig","outsidePointerEvents","setInstance","position","positionChanges","pos","place","get","connectionPair","componentRef","Object","assign","instance","onNodeClick","ing","changeDetectorRef","emit","inputFocus","elementRef","transformOriginOn","updatePositionStrategy","indexOf","toLowerCase","clearEmit","formControlChanges","onKeydown","$event","onInput","_event","setTimeout","onFocus","onBlur","XPortalService","ViewContainerRef","Overlay","XConfigService","NgControlStatus","RequiredValidator","PatternValidator","NgModel","XInputComponent","providers","static","XAutoCompleteModule","ɵmod","ɵinj","declarations","exports","imports"],"sources":["/Users/lzl/my-angular-app/node_modules/@ng-nest/ui/fesm2020/ng-nest-ui-auto-complete.mjs"],"sourcesContent":["import { Subject } from 'rxjs';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, ViewEncapsulation, ChangeDetectionStrategy, HostBinding, HostListener, ViewChild, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport * as i3 from '@ng-nest/ui/core';\nimport { XDataConvert, XWithConfig, XInputBoolean, XConnectBaseAnimation, XIsChange, XClearClass, XIsObservable, XIsFunction, XSetData, XIsEmpty } from '@ng-nest/ui/core';\nimport { XControlValueAccessor, XValueAccessor, XBaseFormModule } from '@ng-nest/ui/base-form';\nimport * as i1$1 from '@ng-nest/ui/portal';\nimport { XPortalConnectedPosition, XPortalModule } from '@ng-nest/ui/portal';\nimport { takeUntil, debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport * as i1 from '@ng-nest/ui/list';\nimport { XListModule } from '@ng-nest/ui/list';\nimport { DOWN_ARROW, UP_ARROW, ENTER, MAC_ENTER, ESCAPE } from '@angular/cdk/keycodes';\nimport * as i2 from '@angular/cdk/overlay';\nimport * as i4 from '@angular/forms';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport * as i5 from '@ng-nest/ui/input';\nimport { XInputModule } from '@ng-nest/ui/input';\nimport { CommonModule } from '@angular/common';\n\n/**\r\n * AutoComplete\r\n * @selector x-auto-complete\r\n * @decorator component\r\n */\r\nconst XAutoCompletePrefix = 'x-auto-complete';\r\nconst X_CONFIG_NAME = 'autoComplete';\r\n/**\r\n * AutoComplete Property\r\n */\r\nclass XAutoCompleteProperty extends XControlValueAccessor {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * @zh_CN 节点数据\r\n         * @en_US Node data\r\n         */\r\n        this.data = [];\r\n        /**\r\n         * @zh_CN 选择节点事件\r\n         * @en_US Node click event\r\n         */\r\n        this.nodeEmit = new EventEmitter();\r\n    }\r\n}\r\n/** @nocollapse */ XAutoCompleteProperty.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XAutoCompleteProperty, deps: null, target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XAutoCompleteProperty.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XAutoCompleteProperty, selector: \"ng-component\", inputs: { data: \"data\", debounceTime: \"debounceTime\", placement: \"placement\", nodeTpl: \"nodeTpl\", size: \"size\", bordered: \"bordered\", caseSensitive: \"caseSensitive\", onlySelect: \"onlySelect\" }, outputs: { nodeEmit: \"nodeEmit\" }, usesInheritance: true, ngImport: i0, template: '', isInline: true });\r\n__decorate([\r\n    XDataConvert()\r\n], XAutoCompleteProperty.prototype, \"data\", void 0);\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, 200)\r\n], XAutoCompleteProperty.prototype, \"debounceTime\", void 0);\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, 'bottom')\r\n], XAutoCompleteProperty.prototype, \"placement\", void 0);\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, 'medium')\r\n], XAutoCompleteProperty.prototype, \"size\", void 0);\r\n__decorate([\r\n    XInputBoolean(),\r\n    XWithConfig(X_CONFIG_NAME, true)\r\n], XAutoCompleteProperty.prototype, \"bordered\", void 0);\r\n__decorate([\r\n    XInputBoolean(),\r\n    XWithConfig(X_CONFIG_NAME, true)\r\n], XAutoCompleteProperty.prototype, \"caseSensitive\", void 0);\r\n__decorate([\r\n    XInputBoolean(),\r\n    XWithConfig(X_CONFIG_NAME, false)\r\n], XAutoCompleteProperty.prototype, \"onlySelect\", void 0);\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XAutoCompleteProperty, decorators: [{\r\n            type: Component,\r\n            args: [{ template: '' }]\r\n        }], propDecorators: { data: [{\r\n                type: Input\r\n            }], debounceTime: [{\r\n                type: Input\r\n            }], placement: [{\r\n                type: Input\r\n            }], nodeTpl: [{\r\n                type: Input\r\n            }], size: [{\r\n                type: Input\r\n            }], bordered: [{\r\n                type: Input\r\n            }], caseSensitive: [{\r\n                type: Input\r\n            }], onlySelect: [{\r\n                type: Input\r\n            }], nodeEmit: [{\r\n                type: Output\r\n            }] } });\r\n/**\r\n * AutoComplete Portal\r\n * @selector x-auto-complete-portal\r\n * @decorator component\r\n */\r\nconst XAutoCompletePortalPrefix = 'x-auto-complete-portal';\n\nclass XAutoCompletePortalComponent {\r\n    constructor(renderer, cdr) {\r\n        this.renderer = renderer;\r\n        this.cdr = cdr;\r\n        this.multiple = 1;\r\n        this.show = false;\r\n        this.active = -1;\r\n        this._unSubject = new Subject();\r\n    }\r\n    done(event) {\r\n        this.animating(false);\r\n        event.toState === 'void' && this.destroyPortal();\r\n    }\r\n    start() {\r\n        this.animating(true);\r\n    }\r\n    ngOnInit() {\r\n        this.valueChange.pipe(takeUntil(this._unSubject)).subscribe((x) => {\r\n            this.value = x;\r\n            this.cdr.detectChanges();\r\n        });\r\n        this.positionChange.pipe(takeUntil(this._unSubject)).subscribe((x) => {\r\n            this.placement = x;\r\n            this.cdr.detectChanges();\r\n        });\r\n        this.dataChange.pipe(takeUntil(this._unSubject)).subscribe((x) => {\r\n            this.data = x;\r\n            this.cdr.detectChanges();\r\n        });\r\n        this.closeSubject.pipe(takeUntil(this._unSubject)).subscribe(() => {\r\n            this.list.setUnActive(this.active);\r\n        });\r\n        this.keydownSubject.pipe(takeUntil(this._unSubject)).subscribe((x) => {\r\n            this.list.keydown(x);\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this._unSubject.next();\r\n        this._unSubject.unsubscribe();\r\n    }\r\n    stopPropagation(event) {\r\n        event.stopPropagation();\r\n    }\r\n    nodeClick(node) {\r\n        this.nodeEmit(node);\r\n    }\r\n    onActive(num) {\r\n        this.active = num;\r\n    }\r\n    onTabOut() {\r\n        this.closeSubject.next();\r\n    }\r\n}\r\n/** @nocollapse */ XAutoCompletePortalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XAutoCompletePortalComponent, deps: [{ token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XAutoCompletePortalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XAutoCompletePortalComponent, selector: \"x-auto-complete-portal\", host: { listeners: { \"@x-connect-base-animation.done\": \"done($event)\", \"@x-connect-base-animation.start\": \"start($event)\" }, properties: { \"@x-connect-base-animation\": \"this.placement\" } }, viewQueries: [{ propertyName: \"list\", first: true, predicate: [\"list\"], descendants: true }], ngImport: i0, template: \"<div #autoCompletePortal class=\\\"x-auto-complete-portal\\\" tabindex=\\\"-1\\\" (click)=\\\"inputCom.inputFocus(); stopPropagation($event)\\\">\\r\\n  <x-list\\r\\n    #list\\r\\n    [data]=\\\"data\\\"\\r\\n    (nodeClick)=\\\"nodeClick($event)\\\"\\r\\n    (keyManagerChange)=\\\"onActive($event)\\\"\\r\\n    (keyManagerTabOut)=\\\"onTabOut()\\\"\\r\\n    [nodeTpl]=\\\"nodeTpl\\\"\\r\\n    [scrollElement]=\\\"autoCompletePortal\\\"\\r\\n  ></x-list>\\r\\n</div>\\r\\n\", styles: [\"@charset \\\"UTF-8\\\";x-auto-complete-portal{width:100%}.x-auto-complete-portal{margin:.0625rem 0;font-size:var(--x-font-size);color:var(--x-text);border:var(--x-border-width) var(--x-border-style) var(--x-border);width:100%;border-radius:var(--x-border-radius);box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color);position:relative;display:flex;background-color:var(--x-background);overflow-y:auto;max-height:calc((calc(var(--x-font-size) + .875rem) * 6) + (var(--x-border-width) * 7))}.x-auto-complete-portal:focus{outline:none}\\n\"], dependencies: [{ kind: \"component\", type: i1.XListComponent, selector: \"x-list\" }], animations: [XConnectBaseAnimation], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XAutoCompletePortalComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: `${XAutoCompletePortalPrefix}`, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [XConnectBaseAnimation], template: \"<div #autoCompletePortal class=\\\"x-auto-complete-portal\\\" tabindex=\\\"-1\\\" (click)=\\\"inputCom.inputFocus(); stopPropagation($event)\\\">\\r\\n  <x-list\\r\\n    #list\\r\\n    [data]=\\\"data\\\"\\r\\n    (nodeClick)=\\\"nodeClick($event)\\\"\\r\\n    (keyManagerChange)=\\\"onActive($event)\\\"\\r\\n    (keyManagerTabOut)=\\\"onTabOut()\\\"\\r\\n    [nodeTpl]=\\\"nodeTpl\\\"\\r\\n    [scrollElement]=\\\"autoCompletePortal\\\"\\r\\n  ></x-list>\\r\\n</div>\\r\\n\", styles: [\"@charset \\\"UTF-8\\\";x-auto-complete-portal{width:100%}.x-auto-complete-portal{margin:.0625rem 0;font-size:var(--x-font-size);color:var(--x-text);border:var(--x-border-width) var(--x-border-style) var(--x-border);width:100%;border-radius:var(--x-border-radius);box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color);position:relative;display:flex;background-color:var(--x-background);overflow-y:auto;max-height:calc((calc(var(--x-font-size) + .875rem) * 6) + (var(--x-border-width) * 7))}.x-auto-complete-portal:focus{outline:none}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { placement: [{\r\n                type: HostBinding,\r\n                args: ['@x-connect-base-animation']\r\n            }], done: [{\r\n                type: HostListener,\r\n                args: ['@x-connect-base-animation.done', ['$event']]\r\n            }], start: [{\r\n                type: HostListener,\r\n                args: ['@x-connect-base-animation.start', ['$event']]\r\n            }], list: [{\r\n                type: ViewChild,\r\n                args: ['list']\r\n            }] } });\n\nclass XAutoCompleteComponent extends XAutoCompleteProperty {\r\n    constructor(renderer, cdr, portalService, viewContainerRef, overlay, configService) {\r\n        super();\r\n        this.renderer = renderer;\r\n        this.cdr = cdr;\r\n        this.portalService = portalService;\r\n        this.viewContainerRef = viewContainerRef;\r\n        this.overlay = overlay;\r\n        this.configService = configService;\r\n        this.clearable = false;\r\n        this.enter = false;\r\n        this.displayValue = '';\r\n        this.nodes = [];\r\n        this.searchNodes = [];\r\n        this.icon = '';\r\n        this.iconSpin = false;\r\n        this.maxNodes = 6;\r\n        this.protalTobottom = true;\r\n        this.asyncLoading = false;\r\n        this.animating = false;\r\n        this.valueTplContext = { $node: null, $isValue: true };\r\n        this.valueChange = new Subject();\r\n        this.positionChange = new Subject();\r\n        this.dataChange = new Subject();\r\n        this.inputChange = new Subject();\r\n        this.closeSubject = new Subject();\r\n        this.keydownSubject = new Subject();\r\n        this._unSubject = new Subject();\r\n    }\r\n    writeValue(value) {\r\n        this.value = value;\r\n        this.valueChange.next(this.value);\r\n        this.cdr.detectChanges();\r\n    }\r\n    ngOnInit() {\r\n        this.setFlex(this.autoComplete.nativeElement, this.renderer, this.justify, this.align, this.direction);\r\n        this.setClassMap();\r\n        this.setSubject();\r\n    }\r\n    ngOnChanges(changes) {\r\n        const { data } = changes;\r\n        XIsChange(data) && this.setData();\r\n    }\r\n    ngAfterViewInit() {\r\n        this.setPortal();\r\n    }\r\n    ngOnDestroy() {\r\n        this._unSubject.next();\r\n        this._unSubject.unsubscribe();\r\n    }\r\n    setClassMap() {\r\n        XClearClass(this.labelMap);\r\n        this.labelMap[`x-text-align-${this.labelAlign}`] = this.labelAlign ? true : false;\r\n    }\r\n    setData() {\r\n        if (XIsObservable(this.data) || XIsFunction(this.data))\r\n            return;\r\n        XSetData(this.data, this._unSubject).subscribe((x) => {\r\n            this.nodes = x;\r\n            this.setPortal();\r\n            this.cdr.detectChanges();\r\n        });\r\n    }\r\n    setSubject() {\r\n        this.closeSubject.pipe(takeUntil(this._unSubject)).subscribe(() => {\r\n            this.closePortal();\r\n        });\r\n        this.inputChange.pipe(debounceTime(this.debounceTime), distinctUntilChanged(), takeUntil(this._unSubject)).subscribe((x) => {\r\n            this.modelChange(x);\r\n        });\r\n        this.keydownSubject.pipe(takeUntil(this._unSubject)).subscribe((x) => {\r\n            const keyCode = x.keyCode;\r\n            if (!this.portalAttached() && [DOWN_ARROW, UP_ARROW, ENTER, MAC_ENTER].includes(keyCode)) {\r\n                this.inputChange.next(this.value);\r\n            }\r\n            if (this.portalAttached() && [ESCAPE].includes(keyCode)) {\r\n                this.closeSubject.next();\r\n            }\r\n        });\r\n    }\r\n    portalAttached() {\r\n        return this.portal?.overlayRef?.hasAttached();\r\n    }\r\n    closePortal() {\r\n        if (this.portalAttached()) {\r\n            this.portal?.overlayRef?.detach();\r\n            this.active = false;\r\n            if (this.onlySelect) {\r\n                if (!this.nodes.map((x) => x.label).includes(this.value)) {\r\n                    this.value = '';\r\n                    if (this.onChange)\r\n                        this.onChange(this.value);\r\n                    this.inputChange.next(this.value);\r\n                }\r\n            }\r\n            this.cdr.detectChanges();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    destroyPortal() {\r\n        this.portal?.overlayRef?.dispose();\r\n    }\r\n    showPortal() {\r\n        if (XIsEmpty(this.value) || this.disabled || this.iconSpin || this.animating)\r\n            return;\r\n        this.active = true;\r\n        if ((XIsObservable(this.data) && this.nodes.length === 0) || XIsFunction(this.data)) {\r\n            this.icon = 'fto-loader';\r\n            this.iconSpin = true;\r\n            this.cdr.detectChanges();\r\n            XSetData(this.data, this._unSubject, true, this.value).subscribe((x) => {\r\n                this.nodes = x;\r\n                this.createPortal();\r\n                this.icon = '';\r\n                this.iconSpin = false;\r\n                this.cdr.detectChanges();\r\n            });\r\n        }\r\n        else {\r\n            this.createPortal();\r\n        }\r\n    }\r\n    createPortal() {\r\n        this.nodes.filter((x) => x.selected).map((x) => (x.selected = false));\r\n        if (XIsFunction(this.data)) {\r\n            this.searchNodes = this.nodes;\r\n        }\r\n        else if (!XIsEmpty(this.value)) {\r\n            this.setSearchNodes(this.value);\r\n        }\r\n        this.box = this.inputCom.inputRef.nativeElement.getBoundingClientRect();\r\n        const config = {\r\n            backdropClass: '',\r\n            width: this.box.width,\r\n            positionStrategy: this.setPlacement(),\r\n            scrollStrategy: this.overlay.scrollStrategies.reposition()\r\n        };\r\n        this.setPosition(config);\r\n        this.portal = this.portalService.attach({\r\n            content: XAutoCompletePortalComponent,\r\n            viewContainerRef: this.viewContainerRef,\r\n            overlayConfig: config\r\n        });\r\n        this.portal.overlayRef\r\n            ?.outsidePointerEvents()\r\n            .pipe(takeUntil(this._unSubject))\r\n            .subscribe(() => {\r\n            this.closeSubject.next();\r\n        });\r\n        this.setInstance();\r\n    }\r\n    setPosition(config) {\r\n        let position = config.positionStrategy;\r\n        position.positionChanges.pipe(takeUntil(this._unSubject)).subscribe((pos) => {\r\n            const place = XPortalConnectedPosition.get(pos.connectionPair);\r\n            place !== this.placement && this.positionChange.next(place);\r\n        });\r\n    }\r\n    setInstance() {\r\n        let componentRef = this.portal.componentRef;\r\n        if (!componentRef)\r\n            return;\r\n        Object.assign(componentRef.instance, {\r\n            data: this.searchNodes,\r\n            value: this.value,\r\n            placement: this.placement,\r\n            nodeTpl: this.nodeTpl,\r\n            valueChange: this.valueChange,\r\n            dataChange: this.dataChange,\r\n            positionChange: this.positionChange,\r\n            closeSubject: this.closeSubject,\r\n            keydownSubject: this.keydownSubject,\r\n            inputCom: this.inputCom,\r\n            destroyPortal: () => this.destroyPortal(),\r\n            nodeEmit: (node) => this.onNodeClick(node),\r\n            animating: (ing) => (this.animating = ing)\r\n        });\r\n        componentRef.changeDetectorRef.detectChanges();\r\n    }\r\n    onNodeClick(node) {\r\n        node = node;\r\n        if (this.value === node.label) {\r\n            this.nodeEmit.emit(node);\r\n            this.closeSubject.next();\r\n            return;\r\n        }\r\n        this.value = node.label;\r\n        this.valueTplContext.$node = node;\r\n        this.inputCom.inputFocus();\r\n        if (this.onChange)\r\n            this.onChange(this.value);\r\n        this.nodeEmit.emit(node);\r\n        this.closeSubject.next();\r\n        this.cdr.detectChanges();\r\n    }\r\n    setPlacement() {\r\n        return this.portalService.setPlacement({\r\n            elementRef: this.inputCom.inputRef,\r\n            placement: [this.placement, 'bottom-start', 'bottom-end', 'top-start', 'top-end'],\r\n            transformOriginOn: 'x-auto-complete-portal'\r\n        });\r\n    }\r\n    setPortal() {\r\n        this.portalAttached() && this.portal?.overlayRef?.updatePositionStrategy(this.setPlacement());\r\n    }\r\n    setSearchNodes(value) {\r\n        if (this.caseSensitive) {\r\n            this.searchNodes = this.nodes.filter((x) => x.label.indexOf(value) >= 0);\r\n        }\r\n        else {\r\n            this.searchNodes = this.nodes.filter((x) => x.label.toLowerCase().indexOf(value.toLowerCase()) >= 0);\r\n        }\r\n    }\r\n    modelChange(value) {\r\n        if (this.onChange)\r\n            this.onChange(value);\r\n        if (XIsFunction(this.data)) {\r\n            if (!this.portalAttached()) {\r\n                this.showPortal();\r\n            }\r\n            else {\r\n                if (XIsEmpty(value)) {\r\n                    this.closeSubject.next();\r\n                }\r\n                else {\r\n                    this.icon = 'fto-loader';\r\n                    this.iconSpin = true;\r\n                    this.cdr.detectChanges();\r\n                    XSetData(this.data, this._unSubject, true, value).subscribe((x) => {\r\n                        this.nodes = x;\r\n                        this.icon = '';\r\n                        this.iconSpin = false;\r\n                        this.dataChange.next(this.nodes);\r\n                        this.cdr.detectChanges();\r\n                    });\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (this.nodes) {\r\n            if (!this.portalAttached()) {\r\n                this.showPortal();\r\n            }\r\n            else {\r\n                if (XIsEmpty(value)) {\r\n                    this.closeSubject.next();\r\n                }\r\n                else {\r\n                    this.setSearchNodes(value);\r\n                    this.dataChange.next(this.searchNodes);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    clearEmit() {\r\n        this.value = '';\r\n        this.displayValue = '';\r\n        this.valueTplContext.$node = null;\r\n        this.valueChange.next(this.value);\r\n        this.modelChange(this.value);\r\n    }\r\n    formControlChanges() {\r\n        this.setData();\r\n        this.ngOnInit();\r\n        this.cdr.detectChanges();\r\n    }\r\n    onKeydown($event) {\r\n        this.keydownSubject.next($event);\r\n    }\r\n    onInput(_event) {\r\n        setTimeout(() => {\r\n            this.inputChange.next(this.value);\r\n        });\r\n    }\r\n    onFocus(_event) { }\r\n    onBlur(_event) { }\r\n}\r\n/** @nocollapse */ XAutoCompleteComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XAutoCompleteComponent, deps: [{ token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i1$1.XPortalService }, { token: i0.ViewContainerRef }, { token: i2.Overlay }, { token: i3.XConfigService }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XAutoCompleteComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XAutoCompleteComponent, selector: \"x-auto-complete\", providers: [XValueAccessor(XAutoCompleteComponent)], viewQueries: [{ propertyName: \"inputCom\", first: true, predicate: [\"inputCom\"], descendants: true, static: true }, { propertyName: \"autoComplete\", first: true, predicate: [\"autoComplete\"], descendants: true, static: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<div #autoComplete class=\\\"x-auto-complete\\\">\\r\\n  <div class=\\\"x-auto-complete-row\\\">\\r\\n    <x-input\\r\\n      #inputCom\\r\\n      type=\\\"text\\\"\\r\\n      [label]=\\\"label\\\"\\r\\n      [labelWidth]=\\\"labelWidth\\\"\\r\\n      [labelAlign]=\\\"labelAlign\\\"\\r\\n      [justify]=\\\"justify\\\"\\r\\n      [align]=\\\"align\\\"\\r\\n      [direction]=\\\"direction\\\"\\r\\n      [disabled]=\\\"disabled\\\"\\r\\n      [required]=\\\"required\\\"\\r\\n      [icon]=\\\"icon\\\"\\r\\n      [iconSpin]=\\\"iconSpin\\\"\\r\\n      [placeholder]=\\\"placeholder\\\"\\r\\n      [readonly]=\\\"readonly\\\"\\r\\n      [clearable]=\\\"clearable\\\"\\r\\n      [(ngModel)]=\\\"value\\\"\\r\\n      [valueTpl]=\\\"valueTpl\\\"\\r\\n      [valueTplContext]=\\\"valueTplContext\\\"\\r\\n      [size]=\\\"size\\\"\\r\\n      [bordered]=\\\"bordered\\\"\\r\\n      [before]=\\\"before\\\"\\r\\n      [after]=\\\"after\\\"\\r\\n      [pattern]=\\\"pattern\\\"\\r\\n      [message]=\\\"message\\\"\\r\\n      [pointer]=\\\"pointer\\\"\\r\\n      [(active)]=\\\"active\\\"\\r\\n      (clearEmit)=\\\"clearEmit()\\\"\\r\\n      (xInput)=\\\"onInput($event)\\\"\\r\\n      (xKeydown)=\\\"onKeydown($event)\\\"\\r\\n      (xFocus)=\\\"onFocus($event)\\\"\\r\\n      (xBlur)=\\\"onBlur($event)\\\"\\r\\n      (xClick)=\\\"showPortal()\\\"\\r\\n    ></x-input>\\r\\n  </div>\\r\\n</div>\\r\\n\", styles: [\"@charset \\\"UTF-8\\\";x-auto-complete{display:inline-block;width:12rem}.x-auto-complete{margin:0;padding:0;width:100%}.x-auto-complete x-input{width:100%}.x-auto-complete-portal{margin:.0625rem 0;font-size:var(--x-font-size);color:var(--x-text);border:var(--x-border-width) var(--x-border-style) var(--x-border);width:100%;border-radius:var(--x-border-radius);box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color);position:relative;display:flex;background-color:var(--x-background);overflow-y:auto;max-height:calc((calc(var(--x-font-size) + .875rem) * 6) + (var(--x-border-width) * 7))}.x-auto-complete-portal:focus{outline:none}\\n\"], dependencies: [{ kind: \"directive\", type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i4.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { kind: \"directive\", type: i4.PatternValidator, selector: \"[pattern][formControlName],[pattern][formControl],[pattern][ngModel]\", inputs: [\"pattern\"] }, { kind: \"directive\", type: i4.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: i5.XInputComponent, selector: \"x-input\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XAutoCompleteComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: `${XAutoCompletePrefix}`, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [XValueAccessor(XAutoCompleteComponent)], template: \"<div #autoComplete class=\\\"x-auto-complete\\\">\\r\\n  <div class=\\\"x-auto-complete-row\\\">\\r\\n    <x-input\\r\\n      #inputCom\\r\\n      type=\\\"text\\\"\\r\\n      [label]=\\\"label\\\"\\r\\n      [labelWidth]=\\\"labelWidth\\\"\\r\\n      [labelAlign]=\\\"labelAlign\\\"\\r\\n      [justify]=\\\"justify\\\"\\r\\n      [align]=\\\"align\\\"\\r\\n      [direction]=\\\"direction\\\"\\r\\n      [disabled]=\\\"disabled\\\"\\r\\n      [required]=\\\"required\\\"\\r\\n      [icon]=\\\"icon\\\"\\r\\n      [iconSpin]=\\\"iconSpin\\\"\\r\\n      [placeholder]=\\\"placeholder\\\"\\r\\n      [readonly]=\\\"readonly\\\"\\r\\n      [clearable]=\\\"clearable\\\"\\r\\n      [(ngModel)]=\\\"value\\\"\\r\\n      [valueTpl]=\\\"valueTpl\\\"\\r\\n      [valueTplContext]=\\\"valueTplContext\\\"\\r\\n      [size]=\\\"size\\\"\\r\\n      [bordered]=\\\"bordered\\\"\\r\\n      [before]=\\\"before\\\"\\r\\n      [after]=\\\"after\\\"\\r\\n      [pattern]=\\\"pattern\\\"\\r\\n      [message]=\\\"message\\\"\\r\\n      [pointer]=\\\"pointer\\\"\\r\\n      [(active)]=\\\"active\\\"\\r\\n      (clearEmit)=\\\"clearEmit()\\\"\\r\\n      (xInput)=\\\"onInput($event)\\\"\\r\\n      (xKeydown)=\\\"onKeydown($event)\\\"\\r\\n      (xFocus)=\\\"onFocus($event)\\\"\\r\\n      (xBlur)=\\\"onBlur($event)\\\"\\r\\n      (xClick)=\\\"showPortal()\\\"\\r\\n    ></x-input>\\r\\n  </div>\\r\\n</div>\\r\\n\", styles: [\"@charset \\\"UTF-8\\\";x-auto-complete{display:inline-block;width:12rem}.x-auto-complete{margin:0;padding:0;width:100%}.x-auto-complete x-input{width:100%}.x-auto-complete-portal{margin:.0625rem 0;font-size:var(--x-font-size);color:var(--x-text);border:var(--x-border-width) var(--x-border-style) var(--x-border);width:100%;border-radius:var(--x-border-radius);box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color);position:relative;display:flex;background-color:var(--x-background);overflow-y:auto;max-height:calc((calc(var(--x-font-size) + .875rem) * 6) + (var(--x-border-width) * 7))}.x-auto-complete-portal:focus{outline:none}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i1$1.XPortalService }, { type: i0.ViewContainerRef }, { type: i2.Overlay }, { type: i3.XConfigService }]; }, propDecorators: { inputCom: [{\r\n                type: ViewChild,\r\n                args: ['inputCom', { static: true }]\r\n            }], autoComplete: [{\r\n                type: ViewChild,\r\n                args: ['autoComplete', { static: true }]\r\n            }] } });\n\nclass XAutoCompleteModule {\r\n}\r\n/** @nocollapse */ XAutoCompleteModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XAutoCompleteModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\n/** @nocollapse */ XAutoCompleteModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.2\", ngImport: i0, type: XAutoCompleteModule, declarations: [XAutoCompleteComponent, XAutoCompletePortalComponent, XAutoCompleteProperty], imports: [CommonModule, FormsModule, ReactiveFormsModule, XPortalModule, XInputModule, XListModule, XBaseFormModule], exports: [XAutoCompleteComponent, XAutoCompletePortalComponent] });\r\n/** @nocollapse */ XAutoCompleteModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XAutoCompleteModule, imports: [CommonModule, FormsModule, ReactiveFormsModule, XPortalModule, XInputModule, XListModule, XBaseFormModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XAutoCompleteModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [XAutoCompleteComponent, XAutoCompletePortalComponent, XAutoCompleteProperty],\r\n                    exports: [XAutoCompleteComponent, XAutoCompletePortalComponent],\r\n                    imports: [CommonModule, FormsModule, ReactiveFormsModule, XPortalModule, XInputModule, XListModule, XBaseFormModule]\r\n                }]\r\n        }] });\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { XAutoCompleteComponent, XAutoCompleteModule, XAutoCompletePortalComponent, XAutoCompletePortalPrefix, XAutoCompletePrefix, XAutoCompleteProperty };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}