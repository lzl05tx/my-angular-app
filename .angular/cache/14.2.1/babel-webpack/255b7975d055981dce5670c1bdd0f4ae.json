{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, HostBinding, HostListener, EventEmitter, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { XIsEmpty, XConnectBaseAnimation, XDataConvert, XWithConfig, XInputBoolean, XIsChange, XClearClass, XSetData, XGetChildren } from '@ng-nest/ui/core';\nimport { Subject, of } from 'rxjs';\nimport { takeUntil, delay } from 'rxjs/operators';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@angular/forms';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport * as i3$1 from '@ng-nest/ui/list';\nimport { XListModule } from '@ng-nest/ui/list';\nimport { __decorate } from 'tslib';\nimport { XControlValueAccessor, XValueAccessor, XBaseFormModule } from '@ng-nest/ui/base-form';\nimport * as i1$1 from '@ng-nest/ui/portal';\nimport { XPortalConnectedPosition, XPortalModule } from '@ng-nest/ui/portal';\nimport * as i2 from '@angular/cdk/overlay';\nimport * as i4 from '@ng-nest/ui/input';\nimport { XInputModule } from '@ng-nest/ui/input';\n\nfunction XCascadePortalComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"x-list\", 2);\n    i0.ɵɵlistener(\"ngModelChange\", function XCascadePortalComponent_ng_container_1_Template_x_list_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.values = $event);\n    })(\"nodeClick\", function XCascadePortalComponent_ng_container_1_Template_x_list_nodeClick_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.nodeClick($event));\n    })(\"nodeMouseenter\", function XCascadePortalComponent_ng_container_1_Template_x_list_nodeMouseenter_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.nodeTrigger === \"hover\" && ctx_r5.nodeMouseenter($event));\n    })(\"nodeMouseleave\", function XCascadePortalComponent_ng_container_1_Template_x_list_nodeMouseleave_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.nodeTrigger === \"hover\" && ctx_r6.nodeMouseleave());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const list_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"data\", list_r1)(\"nodeTpl\", ctx_r0.nodeTpl)(\"ngModel\", ctx_r0.values);\n  }\n}\n\nconst _c0 = [\"cascade\"];\nconst _c1 = [\"inputCom\"];\n\nclass XCascadePortalComponent {\n  constructor(ngZone, cdr) {\n    this.ngZone = ngZone;\n    this.cdr = cdr;\n    this.nodes = [];\n    this.datas = [];\n    this.selecteds = [];\n    this.values = [];\n    this.hoverDelayUnSub = new Subject();\n    this._unSubject = new Subject();\n  }\n\n  done(event) {\n    this.animating(false);\n    event.toState === 'void' && this.destroyPortal();\n  }\n\n  start() {\n    this.animating(true);\n  }\n\n  ngOnInit() {\n    this.init();\n    this.valueChange.pipe(takeUntil(this._unSubject)).subscribe(x => {\n      this.value = x;\n      this.init();\n      this.cdr.detectChanges();\n    });\n    this.positionChange.pipe(takeUntil(this._unSubject)).subscribe(x => {\n      this.placement = x;\n      this.cdr.detectChanges();\n    });\n  }\n\n  ngOnDestroy() {\n    this._unSubject.next();\n\n    this._unSubject.unsubscribe();\n  }\n\n  init() {\n    if (!XIsEmpty(this.value)) {\n      this.setDefault();\n    } else {\n      this.values = [];\n    }\n  }\n\n  stopPropagation(event) {\n    event.stopPropagation();\n  }\n\n  setDefault() {\n    let node = this.datas.find(x => x.id === this.value);\n    this.selecteds = [node];\n    this.nodes = [this.datas.filter(x => x.pid === node.pid)];\n\n    while (!XIsEmpty(node.pid)) {\n      node = this.datas.find(x => x.id === node.pid);\n      this.selecteds = [node, ...this.selecteds];\n      this.nodes = [this.datas.filter(x => x.pid === node.pid), ...this.nodes];\n    }\n\n    this.values = this.selecteds.map(x => x.id);\n  }\n\n  nodeMouseenter(node) {\n    of(true).pipe(delay(this.nodeHoverDelay), takeUntil(this.hoverDelayUnSub)).subscribe(() => this.nodeExpansion(node, false));\n  }\n\n  nodeMouseleave() {\n    this.hoverDelayUnSub.next();\n  }\n\n  nodeClick(node) {\n    this.nodeExpansion(node);\n  }\n\n  nodeExpansion(node, click = true) {\n    const level = Number(node.level);\n    this.ngZone.run(() => {\n      if (node.leaf) {\n        if (this.nodes.length === level) {\n          this.nodes = [...this.nodes, node.children];\n          this.selecteds = [...this.selecteds, node];\n        } else {\n          if (this.nodes.length > Number(level) + 1) {\n            this.nodes = this.nodes.splice(0, level + 1);\n            this.selecteds = this.selecteds.splice(0, level + 1);\n          }\n\n          this.nodes[level + 1] = node.children;\n          this.selecteds[level] = node;\n        }\n\n        this.values = this.selecteds.map(x => x.id);\n        this.cdr.detectChanges();\n      } else if (click) {\n        if (this.selecteds.length >= level + 1) {\n          this.selecteds = this.selecteds.splice(0, level);\n        }\n\n        this.selecteds = [...this.selecteds, node];\n        this.nodeEmit({\n          node: node,\n          nodes: this.selecteds,\n          label: this.selecteds.map(x => x.label).join(` / `)\n        });\n      }\n    });\n  }\n\n}\n/** @nocollapse */\n\n\nXCascadePortalComponent.ɵfac = function XCascadePortalComponent_Factory(t) {\n  return new (t || XCascadePortalComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n/** @nocollapse */\n\n\nXCascadePortalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XCascadePortalComponent,\n  selectors: [[\"x-cascade-portal\"]],\n  hostVars: 1,\n  hostBindings: function XCascadePortalComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵsyntheticHostListener(\"@x-connect-base-animation.done\", function XCascadePortalComponent_animation_x_connect_base_animation_done_HostBindingHandler($event) {\n        return ctx.done($event);\n      })(\"@x-connect-base-animation.start\", function XCascadePortalComponent_animation_x_connect_base_animation_start_HostBindingHandler($event) {\n        return ctx.start($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵsyntheticHostProperty(\"@x-connect-base-animation\", ctx.placement);\n    }\n  },\n  decls: 2,\n  vars: 1,\n  consts: [[\"tabindex\", \"-1\", 1, \"x-cascade-portal\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [\"checked\", \"\", 3, \"data\", \"nodeTpl\", \"ngModel\", \"ngModelChange\", \"nodeClick\", \"nodeMouseenter\", \"nodeMouseleave\"]],\n  template: function XCascadePortalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"click\", function XCascadePortalComponent_Template_div_click_0_listener($event) {\n        ctx.inputCom.inputFocus();\n        return ctx.stopPropagation($event);\n      });\n      i0.ɵɵtemplate(1, XCascadePortalComponent_ng_container_1_Template, 2, 3, \"ng-container\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.nodes);\n    }\n  },\n  dependencies: [i1.NgForOf, i3.NgControlStatus, i3.NgModel, i3$1.XListComponent],\n  styles: [\"@charset \\\"UTF-8\\\";.x-cascade-portal{margin:.0625rem 0;font-size:var(--x-font-size);color:var(--x-text);border:var(--x-border-width) var(--x-border-style) var(--x-border);border-radius:var(--x-border-radius);box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color);background-color:var(--x-background);display:flex}.x-cascade-portal:focus{outline:none}.x-cascade-portal>x-list .x-list-option{min-width:8rem}.x-cascade-portal>x-list:not(:first-child){border-left:var(--x-border-width) solid var(--x-border)}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [XConnectBaseAnimation]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XCascadePortalComponent, [{\n    type: Component,\n    args: [{\n      selector: 'x-cascade-portal',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [XConnectBaseAnimation],\n      template: \"<div class=\\\"x-cascade-portal\\\" tabindex=\\\"-1\\\" (click)=\\\"inputCom.inputFocus(); stopPropagation($event)\\\">\\r\\n  <ng-container *ngFor=\\\"let list of nodes\\\">\\r\\n    <x-list\\r\\n      [data]=\\\"list\\\"\\r\\n      [nodeTpl]=\\\"nodeTpl\\\"\\r\\n      [(ngModel)]=\\\"values\\\"\\r\\n      (nodeClick)=\\\"nodeClick($event)\\\"\\r\\n      (nodeMouseenter)=\\\"nodeTrigger === 'hover' && nodeMouseenter($event)\\\"\\r\\n      (nodeMouseleave)=\\\"nodeTrigger === 'hover' && nodeMouseleave()\\\"\\r\\n      checked\\r\\n    ></x-list>\\r\\n  </ng-container>\\r\\n</div>\\r\\n\",\n      styles: [\"@charset \\\"UTF-8\\\";.x-cascade-portal{margin:.0625rem 0;font-size:var(--x-font-size);color:var(--x-text);border:var(--x-border-width) var(--x-border-style) var(--x-border);border-radius:var(--x-border-radius);box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color);background-color:var(--x-background);display:flex}.x-cascade-portal:focus{outline:none}.x-cascade-portal>x-list .x-list-option{min-width:8rem}.x-cascade-portal>x-list:not(:first-child){border-left:var(--x-border-width) solid var(--x-border)}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    placement: [{\n      type: HostBinding,\n      args: ['@x-connect-base-animation']\n    }],\n    done: [{\n      type: HostListener,\n      args: ['@x-connect-base-animation.done', ['$event']]\n    }],\n    start: [{\n      type: HostListener,\n      args: ['@x-connect-base-animation.start', ['$event']]\n    }]\n  });\n})();\n/**\r\n * Cascade\r\n * @selector x-cascade\r\n * @decorator component\r\n */\n\n\nconst XCascadePrefix = 'x-cascade';\nconst X_CONFIG_NAME = 'cascade';\n/**\r\n * Cascade Property\r\n */\n\nclass XCascadeProperty extends XControlValueAccessor {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * @zh_CN 节点数据\r\n     * @en_US Node data\r\n     */\n\n    this.data = [];\n    /**\r\n     * @zh_CN 节点点击的事件\r\n     * @en_US Node click event\r\n     */\n\n    this.nodeEmit = new EventEmitter();\n  }\n\n}\n/** @nocollapse */\n\n\nXCascadeProperty.ɵfac = /* @__PURE__ */function () {\n  let ɵXCascadeProperty_BaseFactory;\n  return function XCascadeProperty_Factory(t) {\n    return (ɵXCascadeProperty_BaseFactory || (ɵXCascadeProperty_BaseFactory = i0.ɵɵgetInheritedFactory(XCascadeProperty)))(t || XCascadeProperty);\n  };\n}();\n/** @nocollapse */\n\n\nXCascadeProperty.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XCascadeProperty,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    data: \"data\",\n    placement: \"placement\",\n    size: \"size\",\n    bordered: \"bordered\",\n    nodeTrigger: \"nodeTrigger\",\n    nodeHoverDelay: \"nodeHoverDelay\",\n    nodeTpl: \"nodeTpl\"\n  },\n  outputs: {\n    nodeEmit: \"nodeEmit\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function XCascadeProperty_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n__decorate([XDataConvert()], XCascadeProperty.prototype, \"data\", void 0);\n\n__decorate([XWithConfig(X_CONFIG_NAME, 'bottom-start')], XCascadeProperty.prototype, \"placement\", void 0);\n\n__decorate([XWithConfig(X_CONFIG_NAME, 'medium')], XCascadeProperty.prototype, \"size\", void 0);\n\n__decorate([XInputBoolean(), XWithConfig(X_CONFIG_NAME, true)], XCascadeProperty.prototype, \"bordered\", void 0);\n\n__decorate([XWithConfig(X_CONFIG_NAME, 'click')], XCascadeProperty.prototype, \"nodeTrigger\", void 0);\n\n__decorate([XWithConfig(X_CONFIG_NAME, 200)], XCascadeProperty.prototype, \"nodeHoverDelay\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XCascadeProperty, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    bordered: [{\n      type: Input\n    }],\n    nodeTrigger: [{\n      type: Input\n    }],\n    nodeHoverDelay: [{\n      type: Input\n    }],\n    nodeTpl: [{\n      type: Input\n    }],\n    nodeEmit: [{\n      type: Output\n    }]\n  });\n})();\n/**\r\n * Cascade-Portal\r\n * @selector x-cascade-portal\r\n * @decorator component\r\n */\n\n\nconst XCascadePortalPrefix = 'x-cascade-portal';\n\nclass XCascadeComponent extends XCascadeProperty {\n  constructor(renderer, cdr, portalService, viewContainerRef, overlay) {\n    super();\n    this.renderer = renderer;\n    this.cdr = cdr;\n    this.portalService = portalService;\n    this.viewContainerRef = viewContainerRef;\n    this.overlay = overlay;\n    this.readonly = true;\n    this.clearable = false;\n    this.enter = false;\n    this.animating = false;\n    this.displayValue = '';\n    this.datas = [];\n    this.nodes = [];\n    this.icon = 'fto-chevron-down';\n    this.maxNodes = 6;\n    this.protalTobottom = true;\n    this.valueTplContext = {\n      $node: null,\n      $nodes: null,\n      $isValue: true\n    };\n    this.valueChange = new Subject();\n    this.dataChange = new Subject();\n    this.positionChange = new Subject();\n    this.closeSubject = new Subject();\n    this._unSubject = new Subject();\n  }\n\n  writeValue(value) {\n    this.value = value;\n    this.setDisplayValue();\n    this.valueChange.next(this.value);\n    this.cdr.detectChanges();\n  }\n\n  ngOnInit() {\n    this.setFlex(this.cascade.nativeElement, this.renderer, this.justify, this.align, this.direction);\n    this.setClassMap();\n    this.setSubject();\n  }\n\n  ngAfterViewInit() {\n    this.setPortal();\n  }\n\n  ngOnChanges(changes) {\n    const {\n      data\n    } = changes;\n    XIsChange(data) && this.setData();\n  }\n\n  ngOnDestroy() {\n    this._unSubject.next();\n\n    this._unSubject.unsubscribe();\n  }\n\n  setClassMap() {\n    XClearClass(this.labelMap);\n    this.labelMap[`x-text-align-${this.labelAlign}`] = this.labelAlign ? true : false;\n  }\n\n  setData() {\n    XSetData(this.data, this._unSubject).subscribe(x => {\n      this.datas = x;\n      this.nodes = x.filter(y => XIsEmpty(y.pid)).map(y => XGetChildren(x, y, 0));\n      this.setPortal();\n      this.cdr.detectChanges();\n    });\n  }\n\n  setSubject() {\n    this.closeSubject.pipe(takeUntil(this._unSubject)).subscribe(() => {\n      this.closePortal();\n    });\n  }\n\n  menter() {\n    if (this.disabled) return;\n    this.enter = true;\n\n    if (!XIsEmpty(this.value)) {\n      this.icon = '';\n      this.clearable = true;\n      this.cdr.detectChanges();\n    }\n  }\n\n  mleave() {\n    if (this.disabled) return;\n    this.enter = false;\n\n    if (this.clearable) {\n      this.icon = 'fto-chevron-down';\n      this.clearable = false;\n      this.cdr.detectChanges();\n    }\n  }\n\n  clearEmit() {\n    this.value = '';\n    this.displayValue = '';\n    this.valueTplContext.$node = null;\n    this.valueTplContext.$nodes = null;\n    this.mleave();\n    this.valueChange.next(this.value);\n    if (this.onChange) this.onChange(this.value);\n  }\n\n  portalAttached() {\n    return this.portal?.overlayRef?.hasAttached();\n  }\n\n  closePortal() {\n    if (this.portalAttached()) {\n      this.portal?.overlayRef?.detach();\n      this.active = false;\n      this.cdr.detectChanges();\n      return true;\n    }\n\n    return false;\n  }\n\n  destroyPortal() {\n    this.portal?.overlayRef?.dispose();\n  }\n\n  showPortal() {\n    if (this.disabled || this.animating) return;\n    this.active = true;\n    const config = {\n      backdropClass: '',\n      positionStrategy: this.setPlacement(),\n      scrollStrategy: this.overlay.scrollStrategies.reposition()\n    };\n    this.setPosition(config);\n    this.portal = this.portalService.attach({\n      content: XCascadePortalComponent,\n      viewContainerRef: this.viewContainerRef,\n      overlayConfig: config\n    });\n    this.portal.overlayRef?.outsidePointerEvents().pipe(takeUntil(this._unSubject)).subscribe(() => {\n      this.closeSubject.next();\n    });\n    this.setInstance();\n  }\n\n  setPosition(config) {\n    let position = config.positionStrategy;\n    position.positionChanges.pipe(takeUntil(this._unSubject)).subscribe(pos => {\n      const place = XPortalConnectedPosition.get(pos.connectionPair);\n\n      if (place !== this.placement) {\n        this.positionChange.next(place);\n        this.cdr.detectChanges();\n      }\n    });\n  }\n\n  setInstance() {\n    let componentRef = this.portal.componentRef;\n    if (!componentRef) return;\n    Object.assign(componentRef.instance, {\n      datas: this.datas,\n      nodes: [this.nodes],\n      value: this.value,\n      placement: this.placement,\n      valueChange: this.valueChange,\n      positionChange: this.positionChange,\n      nodeTpl: this.nodeTpl,\n      nodeTrigger: this.nodeTrigger,\n      nodeHoverDelay: this.nodeHoverDelay,\n      inputCom: this.inputCom,\n      closePortal: () => this.closeSubject.next(),\n      destroyPortal: () => this.destroyPortal(),\n      nodeEmit: node => this.onNodeClick(node),\n      animating: ing => this.animating = ing\n    });\n    componentRef.changeDetectorRef.detectChanges();\n  }\n\n  onNodeClick(selected) {\n    this.value = selected.node.id;\n    this.displayValue = selected.label;\n    this.valueTplContext.$node = selected;\n    this.valueTplContext.$nodes = selected.nodes;\n    this.closeSubject.next();\n    this.inputCom.inputFocus();\n    if (this.onChange) this.onChange(this.value);\n    this.formControlValidator();\n    this.nodeEmit.emit(selected);\n  }\n\n  setDisplayValue() {\n    let node = this.datas.find(x => x.id === this.value);\n\n    if (typeof node === 'undefined') {\n      this.displayValue = '';\n      this.valueTplContext.$node = null;\n      this.valueTplContext.$nodes = null;\n      return;\n    } else {\n      let selecteds = [node];\n\n      while (!XIsEmpty(node.pid)) {\n        node = this.datas.find(x => x.id === node.pid);\n        selecteds = [node, ...selecteds];\n      }\n\n      this.displayValue = selecteds.map(x => x.label).join(` / `);\n      this.valueTplContext.$node = node;\n      this.valueTplContext.$nodes = selecteds;\n    }\n  }\n\n  setPlacement() {\n    return this.portalService.setPlacement({\n      elementRef: this.inputCom.inputRef,\n      placement: [this.placement, 'bottom-start', 'bottom-end', 'top-start', 'top-end'],\n      transformOriginOn: 'x-cascade-portal'\n    });\n  }\n\n  setPortal() {\n    this.portalAttached() && this.portal?.overlayRef?.updatePositionStrategy(this.setPlacement());\n  }\n\n  formControlChanges() {\n    this.ngOnInit();\n    this.setData();\n    this.setDisplayValue();\n    this.cdr.detectChanges();\n  }\n\n}\n/** @nocollapse */\n\n\nXCascadeComponent.ɵfac = function XCascadeComponent_Factory(t) {\n  return new (t || XCascadeComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.XPortalService), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i2.Overlay));\n};\n/** @nocollapse */\n\n\nXCascadeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XCascadeComponent,\n  selectors: [[\"x-cascade\"]],\n  viewQuery: function XCascadeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n      i0.ɵɵviewQuery(_c1, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cascade = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputCom = _t.first);\n    }\n  },\n  features: [i0.ɵɵProvidersFeature([XValueAccessor(XCascadeComponent)]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 5,\n  vars: 24,\n  consts: [[1, \"x-cascade\"], [\"cascade\", \"\"], [1, \"x-cascade-row\"], [\"type\", \"text\", 3, \"label\", \"labelWidth\", \"labelAlign\", \"justify\", \"align\", \"direction\", \"disabled\", \"validator\", \"required\", \"icon\", \"placeholder\", \"readonly\", \"clearable\", \"ngModel\", \"valueTpl\", \"valueTplContext\", \"size\", \"bordered\", \"before\", \"after\", \"pattern\", \"message\", \"pointer\", \"active\", \"ngModelChange\", \"activeChange\", \"clearEmit\", \"click\", \"xMouseenter\", \"xMouseleave\"], [\"inputCom\", \"\"]],\n  template: function XCascadeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1)(2, \"div\", 2)(3, \"x-input\", 3, 4);\n      i0.ɵɵlistener(\"ngModelChange\", function XCascadeComponent_Template_x_input_ngModelChange_3_listener($event) {\n        return ctx.displayValue = $event;\n      })(\"activeChange\", function XCascadeComponent_Template_x_input_activeChange_3_listener($event) {\n        return ctx.active = $event;\n      })(\"clearEmit\", function XCascadeComponent_Template_x_input_clearEmit_3_listener() {\n        return ctx.clearEmit();\n      })(\"click\", function XCascadeComponent_Template_x_input_click_3_listener() {\n        return ctx.showPortal();\n      })(\"xMouseenter\", function XCascadeComponent_Template_x_input_xMouseenter_3_listener() {\n        return ctx.menter();\n      })(\"xMouseleave\", function XCascadeComponent_Template_x_input_xMouseleave_3_listener() {\n        return ctx.mleave();\n      });\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"label\", ctx.label)(\"labelWidth\", ctx.labelWidth)(\"labelAlign\", ctx.labelAlign)(\"justify\", ctx.justify)(\"align\", ctx.align)(\"direction\", ctx.direction)(\"disabled\", ctx.disabled)(\"validator\", ctx.validator)(\"required\", ctx.required)(\"icon\", ctx.icon)(\"placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly)(\"clearable\", ctx.clearable)(\"ngModel\", ctx.displayValue)(\"valueTpl\", ctx.valueTpl)(\"valueTplContext\", ctx.valueTplContext)(\"size\", ctx.size)(\"bordered\", ctx.bordered)(\"before\", ctx.before)(\"after\", ctx.after)(\"pattern\", ctx.pattern)(\"message\", ctx.message)(\"pointer\", true)(\"active\", ctx.active);\n    }\n  },\n  dependencies: [i3.NgControlStatus, i3.RequiredValidator, i3.PatternValidator, i3.NgModel, i4.XInputComponent],\n  styles: [\"@charset \\\"UTF-8\\\";x-cascade{display:inline-block;width:12rem}.x-cascade{margin:0;padding:0;width:100%}.x-cascade x-input{width:100%}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XCascadeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'x-cascade',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [XValueAccessor(XCascadeComponent)],\n      template: \"<div #cascade class=\\\"x-cascade\\\">\\r\\n  <div class=\\\"x-cascade-row\\\">\\r\\n    <x-input\\r\\n      #inputCom\\r\\n      type=\\\"text\\\"\\r\\n      [label]=\\\"label\\\"\\r\\n      [labelWidth]=\\\"labelWidth\\\"\\r\\n      [labelAlign]=\\\"labelAlign\\\"\\r\\n      [justify]=\\\"justify\\\"\\r\\n      [align]=\\\"align\\\"\\r\\n      [direction]=\\\"direction\\\"\\r\\n      [disabled]=\\\"disabled\\\"\\r\\n      [validator]=\\\"validator\\\"\\r\\n      [required]=\\\"required\\\"\\r\\n      [icon]=\\\"icon\\\"\\r\\n      [placeholder]=\\\"placeholder\\\"\\r\\n      [readonly]=\\\"readonly\\\"\\r\\n      [clearable]=\\\"clearable\\\"\\r\\n      [(ngModel)]=\\\"displayValue\\\"\\r\\n      [valueTpl]=\\\"valueTpl\\\"\\r\\n      [valueTplContext]=\\\"valueTplContext\\\"\\r\\n      [size]=\\\"size\\\"\\r\\n      [bordered]=\\\"bordered\\\"\\r\\n      [before]=\\\"before\\\"\\r\\n      [after]=\\\"after\\\"\\r\\n      [pattern]=\\\"pattern\\\"\\r\\n      [message]=\\\"message\\\"\\r\\n      [pointer]=\\\"true\\\"\\r\\n      [(active)]=\\\"active\\\"\\r\\n      (clearEmit)=\\\"clearEmit()\\\"\\r\\n      (click)=\\\"showPortal()\\\"\\r\\n      (xMouseenter)=\\\"menter()\\\"\\r\\n      (xMouseleave)=\\\"mleave()\\\"\\r\\n    ></x-input>\\r\\n  </div>\\r\\n</div>\\r\\n\",\n      styles: [\"@charset \\\"UTF-8\\\";x-cascade{display:inline-block;width:12rem}.x-cascade{margin:0;padding:0;width:100%}.x-cascade x-input{width:100%}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.XPortalService\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i2.Overlay\n    }];\n  }, {\n    cascade: [{\n      type: ViewChild,\n      args: ['cascade', {\n        static: true\n      }]\n    }],\n    inputCom: [{\n      type: ViewChild,\n      args: ['inputCom', {\n        static: true\n      }]\n    }]\n  });\n})();\n\nclass XCascadeModule {}\n/** @nocollapse */\n\n\nXCascadeModule.ɵfac = function XCascadeModule_Factory(t) {\n  return new (t || XCascadeModule)();\n};\n/** @nocollapse */\n\n\nXCascadeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: XCascadeModule\n});\n/** @nocollapse */\n\nXCascadeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, FormsModule, XPortalModule, ReactiveFormsModule, XInputModule, XListModule, XBaseFormModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XCascadeModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [XCascadeComponent, XCascadePortalComponent, XCascadeProperty],\n      exports: [XCascadeComponent, XCascadePortalComponent],\n      imports: [CommonModule, FormsModule, XPortalModule, ReactiveFormsModule, XInputModule, XListModule, XBaseFormModule]\n    }]\n  }], null, null);\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { XCascadeComponent, XCascadeModule, XCascadePortalComponent, XCascadePortalPrefix, XCascadePrefix, XCascadeProperty };","map":{"version":3,"names":["i0","Component","ViewEncapsulation","ChangeDetectionStrategy","HostBinding","HostListener","EventEmitter","Input","Output","ViewChild","NgModule","XIsEmpty","XConnectBaseAnimation","XDataConvert","XWithConfig","XInputBoolean","XIsChange","XClearClass","XSetData","XGetChildren","Subject","of","takeUntil","delay","i1","CommonModule","i3","FormsModule","ReactiveFormsModule","i3$1","XListModule","__decorate","XControlValueAccessor","XValueAccessor","XBaseFormModule","i1$1","XPortalConnectedPosition","XPortalModule","i2","i4","XInputModule","XCascadePortalComponent","constructor","ngZone","cdr","nodes","datas","selecteds","values","hoverDelayUnSub","_unSubject","done","event","animating","toState","destroyPortal","start","ngOnInit","init","valueChange","pipe","subscribe","x","value","detectChanges","positionChange","placement","ngOnDestroy","next","unsubscribe","setDefault","stopPropagation","node","find","id","filter","pid","map","nodeMouseenter","nodeHoverDelay","nodeExpansion","nodeMouseleave","nodeClick","click","level","Number","run","leaf","length","children","splice","nodeEmit","label","join","ɵfac","NgZone","ChangeDetectorRef","ɵcmp","NgForOf","NgControlStatus","NgModel","XListComponent","type","args","selector","encapsulation","None","changeDetection","OnPush","animations","template","styles","XCascadePrefix","X_CONFIG_NAME","XCascadeProperty","arguments","data","prototype","size","bordered","nodeTrigger","nodeTpl","XCascadePortalPrefix","XCascadeComponent","renderer","portalService","viewContainerRef","overlay","readonly","clearable","enter","displayValue","icon","maxNodes","protalTobottom","valueTplContext","$node","$nodes","$isValue","dataChange","closeSubject","writeValue","setDisplayValue","setFlex","cascade","nativeElement","justify","align","direction","setClassMap","setSubject","ngAfterViewInit","setPortal","ngOnChanges","changes","setData","labelMap","labelAlign","y","closePortal","menter","disabled","mleave","clearEmit","onChange","portalAttached","portal","overlayRef","hasAttached","detach","active","dispose","showPortal","config","backdropClass","positionStrategy","setPlacement","scrollStrategy","scrollStrategies","reposition","setPosition","attach","content","overlayConfig","outsidePointerEvents","setInstance","position","positionChanges","pos","place","get","connectionPair","componentRef","Object","assign","instance","inputCom","onNodeClick","ing","changeDetectorRef","selected","inputFocus","formControlValidator","emit","elementRef","inputRef","transformOriginOn","updatePositionStrategy","formControlChanges","Renderer2","XPortalService","ViewContainerRef","Overlay","RequiredValidator","PatternValidator","XInputComponent","providers","static","XCascadeModule","ɵmod","ɵinj","declarations","exports","imports"],"sources":["/Users/lzl/my-angular-app/node_modules/@ng-nest/ui/fesm2020/ng-nest-ui-cascade.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, HostBinding, HostListener, EventEmitter, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { XIsEmpty, XConnectBaseAnimation, XDataConvert, XWithConfig, XInputBoolean, XIsChange, XClearClass, XSetData, XGetChildren } from '@ng-nest/ui/core';\nimport { Subject, of } from 'rxjs';\nimport { takeUntil, delay } from 'rxjs/operators';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@angular/forms';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport * as i3$1 from '@ng-nest/ui/list';\nimport { XListModule } from '@ng-nest/ui/list';\nimport { __decorate } from 'tslib';\nimport { XControlValueAccessor, XValueAccessor, XBaseFormModule } from '@ng-nest/ui/base-form';\nimport * as i1$1 from '@ng-nest/ui/portal';\nimport { XPortalConnectedPosition, XPortalModule } from '@ng-nest/ui/portal';\nimport * as i2 from '@angular/cdk/overlay';\nimport * as i4 from '@ng-nest/ui/input';\nimport { XInputModule } from '@ng-nest/ui/input';\n\nclass XCascadePortalComponent {\r\n    constructor(ngZone, cdr) {\r\n        this.ngZone = ngZone;\r\n        this.cdr = cdr;\r\n        this.nodes = [];\r\n        this.datas = [];\r\n        this.selecteds = [];\r\n        this.values = [];\r\n        this.hoverDelayUnSub = new Subject();\r\n        this._unSubject = new Subject();\r\n    }\r\n    done(event) {\r\n        this.animating(false);\r\n        event.toState === 'void' && this.destroyPortal();\r\n    }\r\n    start() {\r\n        this.animating(true);\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n        this.valueChange.pipe(takeUntil(this._unSubject)).subscribe((x) => {\r\n            this.value = x;\r\n            this.init();\r\n            this.cdr.detectChanges();\r\n        });\r\n        this.positionChange.pipe(takeUntil(this._unSubject)).subscribe((x) => {\r\n            this.placement = x;\r\n            this.cdr.detectChanges();\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this._unSubject.next();\r\n        this._unSubject.unsubscribe();\r\n    }\r\n    init() {\r\n        if (!XIsEmpty(this.value)) {\r\n            this.setDefault();\r\n        }\r\n        else {\r\n            this.values = [];\r\n        }\r\n    }\r\n    stopPropagation(event) {\r\n        event.stopPropagation();\r\n    }\r\n    setDefault() {\r\n        let node = this.datas.find((x) => x.id === this.value);\r\n        this.selecteds = [node];\r\n        this.nodes = [this.datas.filter((x) => x.pid === node.pid)];\r\n        while (!XIsEmpty(node.pid)) {\r\n            node = this.datas.find((x) => x.id === node.pid);\r\n            this.selecteds = [node, ...this.selecteds];\r\n            this.nodes = [this.datas.filter((x) => x.pid === node.pid), ...this.nodes];\r\n        }\r\n        this.values = this.selecteds.map((x) => x.id);\r\n    }\r\n    nodeMouseenter(node) {\r\n        of(true)\r\n            .pipe(delay(this.nodeHoverDelay), takeUntil(this.hoverDelayUnSub))\r\n            .subscribe(() => this.nodeExpansion(node, false));\r\n    }\r\n    nodeMouseleave() {\r\n        this.hoverDelayUnSub.next();\r\n    }\r\n    nodeClick(node) {\r\n        this.nodeExpansion(node);\r\n    }\r\n    nodeExpansion(node, click = true) {\r\n        const level = Number(node.level);\r\n        this.ngZone.run(() => {\r\n            if (node.leaf) {\r\n                if (this.nodes.length === level) {\r\n                    this.nodes = [...this.nodes, node.children];\r\n                    this.selecteds = [...this.selecteds, node];\r\n                }\r\n                else {\r\n                    if (this.nodes.length > Number(level) + 1) {\r\n                        this.nodes = this.nodes.splice(0, level + 1);\r\n                        this.selecteds = this.selecteds.splice(0, level + 1);\r\n                    }\r\n                    this.nodes[level + 1] = node.children;\r\n                    this.selecteds[level] = node;\r\n                }\r\n                this.values = this.selecteds.map((x) => x.id);\r\n                this.cdr.detectChanges();\r\n            }\r\n            else if (click) {\r\n                if (this.selecteds.length >= level + 1) {\r\n                    this.selecteds = this.selecteds.splice(0, level);\r\n                }\r\n                this.selecteds = [...this.selecteds, node];\r\n                this.nodeEmit({\r\n                    node: node,\r\n                    nodes: this.selecteds,\r\n                    label: this.selecteds.map((x) => x.label).join(` / `)\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n/** @nocollapse */ XCascadePortalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XCascadePortalComponent, deps: [{ token: i0.NgZone }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XCascadePortalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XCascadePortalComponent, selector: \"x-cascade-portal\", host: { listeners: { \"@x-connect-base-animation.done\": \"done($event)\", \"@x-connect-base-animation.start\": \"start($event)\" }, properties: { \"@x-connect-base-animation\": \"this.placement\" } }, ngImport: i0, template: \"<div class=\\\"x-cascade-portal\\\" tabindex=\\\"-1\\\" (click)=\\\"inputCom.inputFocus(); stopPropagation($event)\\\">\\r\\n  <ng-container *ngFor=\\\"let list of nodes\\\">\\r\\n    <x-list\\r\\n      [data]=\\\"list\\\"\\r\\n      [nodeTpl]=\\\"nodeTpl\\\"\\r\\n      [(ngModel)]=\\\"values\\\"\\r\\n      (nodeClick)=\\\"nodeClick($event)\\\"\\r\\n      (nodeMouseenter)=\\\"nodeTrigger === 'hover' && nodeMouseenter($event)\\\"\\r\\n      (nodeMouseleave)=\\\"nodeTrigger === 'hover' && nodeMouseleave()\\\"\\r\\n      checked\\r\\n    ></x-list>\\r\\n  </ng-container>\\r\\n</div>\\r\\n\", styles: [\"@charset \\\"UTF-8\\\";.x-cascade-portal{margin:.0625rem 0;font-size:var(--x-font-size);color:var(--x-text);border:var(--x-border-width) var(--x-border-style) var(--x-border);border-radius:var(--x-border-radius);box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color);background-color:var(--x-background);display:flex}.x-cascade-portal:focus{outline:none}.x-cascade-portal>x-list .x-list-option{min-width:8rem}.x-cascade-portal>x-list:not(:first-child){border-left:var(--x-border-width) solid var(--x-border)}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i3.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: i3$1.XListComponent, selector: \"x-list\" }], animations: [XConnectBaseAnimation], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XCascadePortalComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'x-cascade-portal', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [XConnectBaseAnimation], template: \"<div class=\\\"x-cascade-portal\\\" tabindex=\\\"-1\\\" (click)=\\\"inputCom.inputFocus(); stopPropagation($event)\\\">\\r\\n  <ng-container *ngFor=\\\"let list of nodes\\\">\\r\\n    <x-list\\r\\n      [data]=\\\"list\\\"\\r\\n      [nodeTpl]=\\\"nodeTpl\\\"\\r\\n      [(ngModel)]=\\\"values\\\"\\r\\n      (nodeClick)=\\\"nodeClick($event)\\\"\\r\\n      (nodeMouseenter)=\\\"nodeTrigger === 'hover' && nodeMouseenter($event)\\\"\\r\\n      (nodeMouseleave)=\\\"nodeTrigger === 'hover' && nodeMouseleave()\\\"\\r\\n      checked\\r\\n    ></x-list>\\r\\n  </ng-container>\\r\\n</div>\\r\\n\", styles: [\"@charset \\\"UTF-8\\\";.x-cascade-portal{margin:.0625rem 0;font-size:var(--x-font-size);color:var(--x-text);border:var(--x-border-width) var(--x-border-style) var(--x-border);border-radius:var(--x-border-radius);box-shadow:var(--x-box-shadow) var(--x-box-shadow-light-color);background-color:var(--x-background);display:flex}.x-cascade-portal:focus{outline:none}.x-cascade-portal>x-list .x-list-option{min-width:8rem}.x-cascade-portal>x-list:not(:first-child){border-left:var(--x-border-width) solid var(--x-border)}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { placement: [{\r\n                type: HostBinding,\r\n                args: ['@x-connect-base-animation']\r\n            }], done: [{\r\n                type: HostListener,\r\n                args: ['@x-connect-base-animation.done', ['$event']]\r\n            }], start: [{\r\n                type: HostListener,\r\n                args: ['@x-connect-base-animation.start', ['$event']]\r\n            }] } });\n\n/**\r\n * Cascade\r\n * @selector x-cascade\r\n * @decorator component\r\n */\r\nconst XCascadePrefix = 'x-cascade';\r\nconst X_CONFIG_NAME = 'cascade';\r\n/**\r\n * Cascade Property\r\n */\r\nclass XCascadeProperty extends XControlValueAccessor {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * @zh_CN 节点数据\r\n         * @en_US Node data\r\n         */\r\n        this.data = [];\r\n        /**\r\n         * @zh_CN 节点点击的事件\r\n         * @en_US Node click event\r\n         */\r\n        this.nodeEmit = new EventEmitter();\r\n    }\r\n}\r\n/** @nocollapse */ XCascadeProperty.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XCascadeProperty, deps: null, target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XCascadeProperty.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XCascadeProperty, selector: \"ng-component\", inputs: { data: \"data\", placement: \"placement\", size: \"size\", bordered: \"bordered\", nodeTrigger: \"nodeTrigger\", nodeHoverDelay: \"nodeHoverDelay\", nodeTpl: \"nodeTpl\" }, outputs: { nodeEmit: \"nodeEmit\" }, usesInheritance: true, ngImport: i0, template: '', isInline: true });\r\n__decorate([\r\n    XDataConvert()\r\n], XCascadeProperty.prototype, \"data\", void 0);\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, 'bottom-start')\r\n], XCascadeProperty.prototype, \"placement\", void 0);\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, 'medium')\r\n], XCascadeProperty.prototype, \"size\", void 0);\r\n__decorate([\r\n    XInputBoolean(),\r\n    XWithConfig(X_CONFIG_NAME, true)\r\n], XCascadeProperty.prototype, \"bordered\", void 0);\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, 'click')\r\n], XCascadeProperty.prototype, \"nodeTrigger\", void 0);\r\n__decorate([\r\n    XWithConfig(X_CONFIG_NAME, 200)\r\n], XCascadeProperty.prototype, \"nodeHoverDelay\", void 0);\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XCascadeProperty, decorators: [{\r\n            type: Component,\r\n            args: [{ template: '' }]\r\n        }], propDecorators: { data: [{\r\n                type: Input\r\n            }], placement: [{\r\n                type: Input\r\n            }], size: [{\r\n                type: Input\r\n            }], bordered: [{\r\n                type: Input\r\n            }], nodeTrigger: [{\r\n                type: Input\r\n            }], nodeHoverDelay: [{\r\n                type: Input\r\n            }], nodeTpl: [{\r\n                type: Input\r\n            }], nodeEmit: [{\r\n                type: Output\r\n            }] } });\r\n/**\r\n * Cascade-Portal\r\n * @selector x-cascade-portal\r\n * @decorator component\r\n */\r\nconst XCascadePortalPrefix = 'x-cascade-portal';\n\nclass XCascadeComponent extends XCascadeProperty {\r\n    constructor(renderer, cdr, portalService, viewContainerRef, overlay) {\r\n        super();\r\n        this.renderer = renderer;\r\n        this.cdr = cdr;\r\n        this.portalService = portalService;\r\n        this.viewContainerRef = viewContainerRef;\r\n        this.overlay = overlay;\r\n        this.readonly = true;\r\n        this.clearable = false;\r\n        this.enter = false;\r\n        this.animating = false;\r\n        this.displayValue = '';\r\n        this.datas = [];\r\n        this.nodes = [];\r\n        this.icon = 'fto-chevron-down';\r\n        this.maxNodes = 6;\r\n        this.protalTobottom = true;\r\n        this.valueTplContext = { $node: null, $nodes: null, $isValue: true };\r\n        this.valueChange = new Subject();\r\n        this.dataChange = new Subject();\r\n        this.positionChange = new Subject();\r\n        this.closeSubject = new Subject();\r\n        this._unSubject = new Subject();\r\n    }\r\n    writeValue(value) {\r\n        this.value = value;\r\n        this.setDisplayValue();\r\n        this.valueChange.next(this.value);\r\n        this.cdr.detectChanges();\r\n    }\r\n    ngOnInit() {\r\n        this.setFlex(this.cascade.nativeElement, this.renderer, this.justify, this.align, this.direction);\r\n        this.setClassMap();\r\n        this.setSubject();\r\n    }\r\n    ngAfterViewInit() {\r\n        this.setPortal();\r\n    }\r\n    ngOnChanges(changes) {\r\n        const { data } = changes;\r\n        XIsChange(data) && this.setData();\r\n    }\r\n    ngOnDestroy() {\r\n        this._unSubject.next();\r\n        this._unSubject.unsubscribe();\r\n    }\r\n    setClassMap() {\r\n        XClearClass(this.labelMap);\r\n        this.labelMap[`x-text-align-${this.labelAlign}`] = this.labelAlign ? true : false;\r\n    }\r\n    setData() {\r\n        XSetData(this.data, this._unSubject).subscribe((x) => {\r\n            this.datas = x;\r\n            this.nodes = x.filter((y) => XIsEmpty(y.pid)).map((y) => XGetChildren(x, y, 0));\r\n            this.setPortal();\r\n            this.cdr.detectChanges();\r\n        });\r\n    }\r\n    setSubject() {\r\n        this.closeSubject.pipe(takeUntil(this._unSubject)).subscribe(() => {\r\n            this.closePortal();\r\n        });\r\n    }\r\n    menter() {\r\n        if (this.disabled)\r\n            return;\r\n        this.enter = true;\r\n        if (!XIsEmpty(this.value)) {\r\n            this.icon = '';\r\n            this.clearable = true;\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n    mleave() {\r\n        if (this.disabled)\r\n            return;\r\n        this.enter = false;\r\n        if (this.clearable) {\r\n            this.icon = 'fto-chevron-down';\r\n            this.clearable = false;\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n    clearEmit() {\r\n        this.value = '';\r\n        this.displayValue = '';\r\n        this.valueTplContext.$node = null;\r\n        this.valueTplContext.$nodes = null;\r\n        this.mleave();\r\n        this.valueChange.next(this.value);\r\n        if (this.onChange)\r\n            this.onChange(this.value);\r\n    }\r\n    portalAttached() {\r\n        return this.portal?.overlayRef?.hasAttached();\r\n    }\r\n    closePortal() {\r\n        if (this.portalAttached()) {\r\n            this.portal?.overlayRef?.detach();\r\n            this.active = false;\r\n            this.cdr.detectChanges();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    destroyPortal() {\r\n        this.portal?.overlayRef?.dispose();\r\n    }\r\n    showPortal() {\r\n        if (this.disabled || this.animating)\r\n            return;\r\n        this.active = true;\r\n        const config = {\r\n            backdropClass: '',\r\n            positionStrategy: this.setPlacement(),\r\n            scrollStrategy: this.overlay.scrollStrategies.reposition()\r\n        };\r\n        this.setPosition(config);\r\n        this.portal = this.portalService.attach({\r\n            content: XCascadePortalComponent,\r\n            viewContainerRef: this.viewContainerRef,\r\n            overlayConfig: config\r\n        });\r\n        this.portal.overlayRef\r\n            ?.outsidePointerEvents()\r\n            .pipe(takeUntil(this._unSubject))\r\n            .subscribe(() => {\r\n            this.closeSubject.next();\r\n        });\r\n        this.setInstance();\r\n    }\r\n    setPosition(config) {\r\n        let position = config.positionStrategy;\r\n        position.positionChanges.pipe(takeUntil(this._unSubject)).subscribe((pos) => {\r\n            const place = XPortalConnectedPosition.get(pos.connectionPair);\r\n            if (place !== this.placement) {\r\n                this.positionChange.next(place);\r\n                this.cdr.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    setInstance() {\r\n        let componentRef = this.portal.componentRef;\r\n        if (!componentRef)\r\n            return;\r\n        Object.assign(componentRef.instance, {\r\n            datas: this.datas,\r\n            nodes: [this.nodes],\r\n            value: this.value,\r\n            placement: this.placement,\r\n            valueChange: this.valueChange,\r\n            positionChange: this.positionChange,\r\n            nodeTpl: this.nodeTpl,\r\n            nodeTrigger: this.nodeTrigger,\r\n            nodeHoverDelay: this.nodeHoverDelay,\r\n            inputCom: this.inputCom,\r\n            closePortal: () => this.closeSubject.next(),\r\n            destroyPortal: () => this.destroyPortal(),\r\n            nodeEmit: (node) => this.onNodeClick(node),\r\n            animating: (ing) => (this.animating = ing)\r\n        });\r\n        componentRef.changeDetectorRef.detectChanges();\r\n    }\r\n    onNodeClick(selected) {\r\n        this.value = selected.node.id;\r\n        this.displayValue = selected.label;\r\n        this.valueTplContext.$node = selected;\r\n        this.valueTplContext.$nodes = selected.nodes;\r\n        this.closeSubject.next();\r\n        this.inputCom.inputFocus();\r\n        if (this.onChange)\r\n            this.onChange(this.value);\r\n        this.formControlValidator();\r\n        this.nodeEmit.emit(selected);\r\n    }\r\n    setDisplayValue() {\r\n        let node = this.datas.find((x) => x.id === this.value);\r\n        if (typeof node === 'undefined') {\r\n            this.displayValue = '';\r\n            this.valueTplContext.$node = null;\r\n            this.valueTplContext.$nodes = null;\r\n            return;\r\n        }\r\n        else {\r\n            let selecteds = [node];\r\n            while (!XIsEmpty(node.pid)) {\r\n                node = this.datas.find((x) => x.id === node.pid);\r\n                selecteds = [node, ...selecteds];\r\n            }\r\n            this.displayValue = selecteds.map((x) => x.label).join(` / `);\r\n            this.valueTplContext.$node = node;\r\n            this.valueTplContext.$nodes = selecteds;\r\n        }\r\n    }\r\n    setPlacement() {\r\n        return this.portalService.setPlacement({\r\n            elementRef: this.inputCom.inputRef,\r\n            placement: [this.placement, 'bottom-start', 'bottom-end', 'top-start', 'top-end'],\r\n            transformOriginOn: 'x-cascade-portal'\r\n        });\r\n    }\r\n    setPortal() {\r\n        this.portalAttached() && this.portal?.overlayRef?.updatePositionStrategy(this.setPlacement());\r\n    }\r\n    formControlChanges() {\r\n        this.ngOnInit();\r\n        this.setData();\r\n        this.setDisplayValue();\r\n        this.cdr.detectChanges();\r\n    }\r\n}\r\n/** @nocollapse */ XCascadeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XCascadeComponent, deps: [{ token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i1$1.XPortalService }, { token: i0.ViewContainerRef }, { token: i2.Overlay }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ XCascadeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: XCascadeComponent, selector: \"x-cascade\", providers: [XValueAccessor(XCascadeComponent)], viewQueries: [{ propertyName: \"cascade\", first: true, predicate: [\"cascade\"], descendants: true, static: true }, { propertyName: \"inputCom\", first: true, predicate: [\"inputCom\"], descendants: true, static: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<div #cascade class=\\\"x-cascade\\\">\\r\\n  <div class=\\\"x-cascade-row\\\">\\r\\n    <x-input\\r\\n      #inputCom\\r\\n      type=\\\"text\\\"\\r\\n      [label]=\\\"label\\\"\\r\\n      [labelWidth]=\\\"labelWidth\\\"\\r\\n      [labelAlign]=\\\"labelAlign\\\"\\r\\n      [justify]=\\\"justify\\\"\\r\\n      [align]=\\\"align\\\"\\r\\n      [direction]=\\\"direction\\\"\\r\\n      [disabled]=\\\"disabled\\\"\\r\\n      [validator]=\\\"validator\\\"\\r\\n      [required]=\\\"required\\\"\\r\\n      [icon]=\\\"icon\\\"\\r\\n      [placeholder]=\\\"placeholder\\\"\\r\\n      [readonly]=\\\"readonly\\\"\\r\\n      [clearable]=\\\"clearable\\\"\\r\\n      [(ngModel)]=\\\"displayValue\\\"\\r\\n      [valueTpl]=\\\"valueTpl\\\"\\r\\n      [valueTplContext]=\\\"valueTplContext\\\"\\r\\n      [size]=\\\"size\\\"\\r\\n      [bordered]=\\\"bordered\\\"\\r\\n      [before]=\\\"before\\\"\\r\\n      [after]=\\\"after\\\"\\r\\n      [pattern]=\\\"pattern\\\"\\r\\n      [message]=\\\"message\\\"\\r\\n      [pointer]=\\\"true\\\"\\r\\n      [(active)]=\\\"active\\\"\\r\\n      (clearEmit)=\\\"clearEmit()\\\"\\r\\n      (click)=\\\"showPortal()\\\"\\r\\n      (xMouseenter)=\\\"menter()\\\"\\r\\n      (xMouseleave)=\\\"mleave()\\\"\\r\\n    ></x-input>\\r\\n  </div>\\r\\n</div>\\r\\n\", styles: [\"@charset \\\"UTF-8\\\";x-cascade{display:inline-block;width:12rem}.x-cascade{margin:0;padding:0;width:100%}.x-cascade x-input{width:100%}\\n\"], dependencies: [{ kind: \"directive\", type: i3.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i3.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { kind: \"directive\", type: i3.PatternValidator, selector: \"[pattern][formControlName],[pattern][formControl],[pattern][ngModel]\", inputs: [\"pattern\"] }, { kind: \"directive\", type: i3.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: i4.XInputComponent, selector: \"x-input\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XCascadeComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'x-cascade', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [XValueAccessor(XCascadeComponent)], template: \"<div #cascade class=\\\"x-cascade\\\">\\r\\n  <div class=\\\"x-cascade-row\\\">\\r\\n    <x-input\\r\\n      #inputCom\\r\\n      type=\\\"text\\\"\\r\\n      [label]=\\\"label\\\"\\r\\n      [labelWidth]=\\\"labelWidth\\\"\\r\\n      [labelAlign]=\\\"labelAlign\\\"\\r\\n      [justify]=\\\"justify\\\"\\r\\n      [align]=\\\"align\\\"\\r\\n      [direction]=\\\"direction\\\"\\r\\n      [disabled]=\\\"disabled\\\"\\r\\n      [validator]=\\\"validator\\\"\\r\\n      [required]=\\\"required\\\"\\r\\n      [icon]=\\\"icon\\\"\\r\\n      [placeholder]=\\\"placeholder\\\"\\r\\n      [readonly]=\\\"readonly\\\"\\r\\n      [clearable]=\\\"clearable\\\"\\r\\n      [(ngModel)]=\\\"displayValue\\\"\\r\\n      [valueTpl]=\\\"valueTpl\\\"\\r\\n      [valueTplContext]=\\\"valueTplContext\\\"\\r\\n      [size]=\\\"size\\\"\\r\\n      [bordered]=\\\"bordered\\\"\\r\\n      [before]=\\\"before\\\"\\r\\n      [after]=\\\"after\\\"\\r\\n      [pattern]=\\\"pattern\\\"\\r\\n      [message]=\\\"message\\\"\\r\\n      [pointer]=\\\"true\\\"\\r\\n      [(active)]=\\\"active\\\"\\r\\n      (clearEmit)=\\\"clearEmit()\\\"\\r\\n      (click)=\\\"showPortal()\\\"\\r\\n      (xMouseenter)=\\\"menter()\\\"\\r\\n      (xMouseleave)=\\\"mleave()\\\"\\r\\n    ></x-input>\\r\\n  </div>\\r\\n</div>\\r\\n\", styles: [\"@charset \\\"UTF-8\\\";x-cascade{display:inline-block;width:12rem}.x-cascade{margin:0;padding:0;width:100%}.x-cascade x-input{width:100%}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i1$1.XPortalService }, { type: i0.ViewContainerRef }, { type: i2.Overlay }]; }, propDecorators: { cascade: [{\r\n                type: ViewChild,\r\n                args: ['cascade', { static: true }]\r\n            }], inputCom: [{\r\n                type: ViewChild,\r\n                args: ['inputCom', { static: true }]\r\n            }] } });\n\nclass XCascadeModule {\r\n}\r\n/** @nocollapse */ XCascadeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XCascadeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\n/** @nocollapse */ XCascadeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.2\", ngImport: i0, type: XCascadeModule, declarations: [XCascadeComponent, XCascadePortalComponent, XCascadeProperty], imports: [CommonModule, FormsModule, XPortalModule, ReactiveFormsModule, XInputModule, XListModule, XBaseFormModule], exports: [XCascadeComponent, XCascadePortalComponent] });\r\n/** @nocollapse */ XCascadeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XCascadeModule, imports: [CommonModule, FormsModule, XPortalModule, ReactiveFormsModule, XInputModule, XListModule, XBaseFormModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: XCascadeModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [XCascadeComponent, XCascadePortalComponent, XCascadeProperty],\r\n                    exports: [XCascadeComponent, XCascadePortalComponent],\r\n                    imports: [CommonModule, FormsModule, XPortalModule, ReactiveFormsModule, XInputModule, XListModule, XBaseFormModule]\r\n                }]\r\n        }] });\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { XCascadeComponent, XCascadeModule, XCascadePortalComponent, XCascadePortalPrefix, XCascadePrefix, XCascadeProperty };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}